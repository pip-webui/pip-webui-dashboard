{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableController.ts","src/draggable/DraggableDirective.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","pipDashboard","bindings","gridOptions","groupAdditionalActions","groupedWidgets","controller","controllerAs","templateUrl","component","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","$inject","defineProperty","value","DEFAULT_GRID_OPTIONS","draggableOptions","tileWidth","tileHeight","gutter","inline","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","callback","groupIndex","_this","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","splice","_$scope","_$rootScope","_$attrs","_$element","_$timeout","_$interpolate","_pipAddComponentDialog","_pipWidgetTemplate","addClass","draggableGridOptions","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","data","activeGroup","addWidgets","widgets","push","widgetGroup","forEach","apply","Array","type","options","DashboardController","4","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","_","isNumber","defaultWidgets","cloneDeep","_mdDialog","add","hide","cancel","encrease","widgetIndex","decrease","5","AddComponentDialogService","_widgetList","AddComponentDialogProvider","list","$get","_service","6","TileColors","all","TileSizes","id","WidgetConfigDialogController","$compile","dialogTitle","colors","sizes","sizeId","onApply","sizeX","Number","substr","sizeY","onCancel","./ConfigDialogService","7","$templateRequest","scope","link","pipExtensionUrl","then","html","find","replaceWith","directive","pipWidgetConfigComponent","8","WidgetConfigDialogService","successCallback","cancelCallback","event","locals","clickOutsideToClose","key","service","9","Object","./DraggableController","./DraggableDirective","./DraggableTileService","./draggable_group/DraggableTilesGroupDirective","./draggable_group/DraggableTilesGroupService","10","DraggableTileService_1","DraggableTilesGroupService_1","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","isSameDropzone","tileGroups","merge","mobileBreakpoint","breakpoints","xs","tilesTemplates","tile","tileScope","$new","tilesContext","IDragTileConstructor","DragTileService","tpl","newVal","debounce","availableWidth","getContainerWidth","availableColumns","getAvailableColumns","setAvailableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","watch","prevVal","changedGroupIndex","addGroup","groupWidgetDiff","newTiles","slice","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","onKyepressTitleInput","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","indexes","container","tiles","remove","gIndex","undefined","child","element","removeGroups","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","_$compile","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","addTile","newTile","append","getCompiledTemplate","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","floor","getActiveGroupAndTile","active","foundTile","getTileByNode","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","getTileByCoordinates","pageX","pageY","draggedTileIndex","getTileIndex","belowElemIndex","belowElement","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","draggable","autoScroll","onstart","onmove","onend","dropzone","ondrop","ondragenter","ondropdeactivate","ondragleave","on","interact","trigger","11","DragDirective","restrict","$container","$elem","12","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","zIndex","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","14","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","leftCornerCell","rightCornerCell","getBasicRow","getCell","gridCopy","basicRow","basicCol","rowShift","prevTileSize","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","generateCells","newCellCount","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","newGrid","15","ImageLoad","$parse","attrs","pipImageLoad","widgetTemplateService","strictCompile","result","interpolated","_$templateRequest","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","16","extendStatics","setPrototypeOf","__proto__","d","b","p","hasOwnProperty","__","create","_super","CalendarWidgetController","pipWidgetMenu","pipWidgetConfigDialogService","color","_configDialog","union","onConfigClick","date","Date","dialogClass","extensionUrl","changeSize","MenuWidgetService","opacity","$watch","is","drawImage","EventWidgetController","onImageLoad","text","onOpacitytest","_oldOpacity","pipEventWidget","19","noop","action","callAction","actionName","MenuWidgetProvider","NotesWidgetController","PictureSliderController","animationType","_widgetUtility","animationInterval","$event","WidgetMenuService_1","pipPictureSliderWidget","PositionWidgetController","pipLocationEditDialog","showPosition","_locationDialog","openLocationEditDialog","location","position","reDrawPosition","locationName","hideColors","locationPos","newPosition","locatioName","pipPositionWidget","reset","chartSize","SMALL_CHART","setChartSize","StatisticsWidgetController","BIG_CHART","pipStatisticsWidget","../menu/WidgetMenuService","25","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\nimport './draggable/Draggable';\n\n(function () {\n  'use strict';\n\n  angular.module('pipDashboard', [\n    'pipWidget', \n    'pipDragged', \n    'pipWidgetConfigDialog', \n    'pipAddDashboardComponentDialog',\n    'pipDashboard.Templates',\n\n    // External pip modules\n    'pipLayout',\n    'pipLocations',\n    'pipDateTime',\n    'pipCharts',\n    'pipTranslate',\n    'pipControls'\n  ]);\n  \n})();\n\nimport './utility/WidgetTemplateUtility';\nimport './dialogs/widget_config/ConfigDialogController';\nimport './dialogs/add_component/AddComponentDialogController';\nimport './DashboardController';\nimport './DashboardComponent';\n","(function () {\n  'use strict';\n\n  const pipDashboard = {\n    bindings: {\n      gridOptions: '=pipGridOptions',\n      groupAdditionalActions: '=pipGroupActions',\n      groupedWidgets: '=pipGroups'\n    },\n    controller: 'pipDashboardCtrl',\n    controllerAs: 'dashboardCtrl',\n    templateUrl: 'Dashboard.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipDashboard', pipDashboard);\n})();","'use strict';\n\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\n\nfunction setTranslations($injector) {\n  var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n  if (pipTranslate) {\n    pipTranslate.setTranslations('en', {\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\n    });\n    pipTranslate.setTranslations('ru', {\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\n    });\n  }\n}\n\nfunction configureAvailableWidgets(pipAddComponentDialogProvider) {\n  pipAddComponentDialogProvider.configWidgetList([\n    [{\n        title: 'Event',\n        icon: 'document',\n        name: 'event',\n        amount: 0\n      },\n      {\n        title: 'Position',\n        icon: 'location',\n        name: 'position',\n        amount: 0\n      }\n    ],\n    [{\n        title: 'Calendar',\n        icon: 'date',\n        name: 'calendar',\n        amount: 0\n      },\n      {\n        title: 'Sticky Notes',\n        icon: 'note-take',\n        name: 'notes',\n        amount: 0\n      },\n      {\n        title: 'Statistics',\n        icon: 'tr-statistics',\n        name: 'statistics',\n        amount: 0\n      }\n    ]\n  ]);\n}\n\nimport { IAddComponentDialogService } from './dialogs/add_component/AddComponentProvider'\n\nclass draggableOptions {\n  tileWidth: number;\n  tileHeight: number;\n  gutter: number;\n  inline: boolean;\n}\n\nlet DEFAULT_GRID_OPTIONS: draggableOptions = {\n  tileWidth: 150, // 'px'\n  tileHeight: 150, // 'px'\n  gutter: 10, // 'px'\n  inline: false\n};\n\nclass DashboardController {\n  private defaultGroupMenuActions: any = [{\n      title: 'Add Component',\n      callback: (groupIndex) => {\n        this.addComponent(groupIndex);\n      }\n    },\n    {\n      title: 'Remove',\n      callback: (groupIndex) => {\n        this.removeGroup(groupIndex);\n      }\n    },\n    {\n      title: 'Configurate',\n      callback: (groupIndex) => {\n        console.log('configurate group with index:', groupIndex);\n      }\n    }\n  ];\n  private _$scope: angular.IScope;\n  private _$rootScope: angular.IRootScopeService;\n  private _$attrs: any;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _$interpolate: angular.IInterpolateService;\n  private _pipAddComponentDialog: IAddComponentDialogService;\n  private _pipWidgetTemplate: IWidgetTemplateService;\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\n    '</pip-{{ type }}-widget>';\n\n  public groupedWidgets: any;\n  public draggableGridOptions: draggableOptions;\n  public widgetsTemplates: any;\n  public groupMenuActions: any = this.defaultGroupMenuActions;\n  public widgetsContext: any;\n\n  constructor(\n    $scope: angular.IScope,\n    $rootScope: angular.IRootScopeService,\n    $attrs: any,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    $interpolate: angular.IInterpolateService,\n    pipAddComponentDialog: IAddComponentDialogService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    this._$scope = $scope;\n    this._$rootScope = $rootScope;\n    this._$attrs = $attrs;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._$interpolate = $interpolate;\n    this._pipAddComponentDialog = pipAddComponentDialog;\n    this._pipWidgetTemplate = pipWidgetTemplate;\n\n    // Add class to style scroll bar\n    $element.addClass('pip-scroll');\n\n    // Set tiles grid options\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\n\n    // Switch inline displaying\n    if (this.draggableGridOptions.inline === true) {\n      $element.addClass('inline-grid');\n    }\n    // Extend group's menu actions\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\n\n    // Compile widgets\n    this.widgetsContext = $scope;\n    this.compileWidgets();\n\n    this._$timeout(() => {\n      this._$element.addClass('visible');\n    }, 700);\n  }\n\n  private compileWidgets() {\n    _.each(this.groupedWidgets, (group, groupIndex) => {\n        group.removedWidgets = group.removedWidgets || [],\n        group.source = group.source.map((widget, index) => {\n          // Establish default props\n          widget.size = widget.size || {\n            colSpan: 1,\n            rowSpan: 1\n          };\n          widget.index = index;\n          widget.groupIndex = groupIndex;\n          widget.menu = widget.menu || {};\n          angular.extend(widget.menu, [{\n            title: 'Remove',\n            click: (item, params, object) => {\n              this.removeWidget(item, params, object);\n            }\n          }]);\n\n          return {\n            opts: widget,\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\n          };\n        })\n    });\n  }\n\n  public addComponent(groupIndex) {\n    this._pipAddComponentDialog\n      .show(this.groupedWidgets, groupIndex)\n      .then((data) => {\n        var activeGroup;\n\n        if (!data) {\n          return;\n        }\n\n        if (data.groupIndex !== -1) {\n          activeGroup = this.groupedWidgets[data.groupIndex];\n        } else {\n          activeGroup = {\n            title: 'New group',\n            source: []\n          };\n        }\n\n        this.addWidgets(activeGroup.source, data.widgets);\n\n        if (data.groupIndex === -1) {\n          this.groupedWidgets.push(activeGroup);\n        }\n\n        this.compileWidgets();\n      });\n  };\n\n  public removeGroup = (groupIndex) => {\n    console.log('removeGroup', groupIndex);\n    this.groupedWidgets.splice(groupIndex, 1);\n  }\n\n  private addWidgets(group, widgets) {\n    widgets.forEach((widgetGroup) => {\n      widgetGroup.forEach((widget) => {\n        if (widget.amount) {\n          Array.apply(null, Array(widget.amount)).forEach(() => {\n            group.push({\n              type: widget.name\n            });\n          });\n        }\n      });\n    });\n  }\n\n  private removeWidget(item, params, object) {\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\n    this._$timeout(() => {\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    });\n  }\n\n}\n\nangular\n  .module('pipDashboard')\n  .config(configureAvailableWidgets)\n  .run(setTranslations)\n  .controller('pipDashboardCtrl', DashboardController);","'use strict';\n\nexport class AddComponentDialogController {\n    public _mdDialog: angular.material.IDialogService;\n    public activeGroupIndex: number;\n    public defaultWidgets: any;\n    public groups: any;\n\n    constructor(\n        groups, \n        activeGroupIndex, \n        widgetList,\n        $mdDialog: angular.material.IDialogService\n    ) {\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\n        this.defaultWidgets   = _.cloneDeep(widgetList);\n        this.groups = _.map(groups, function (group) {\n          return group['title'];\n        });\n        this._mdDialog = $mdDialog;\n    }\n\n    public add () {\n          this._mdDialog.hide({\n            groupIndex: this.activeGroupIndex,\n            widgets   : this.defaultWidgets\n          });\n        };\n\n    public cancel () {\n          this._mdDialog.cancel();\n        };\n\n    public encrease (groupIndex, widgetIndex) {\n          var widget = this.defaultWidgets[groupIndex][widgetIndex];\n          widget.amount++;\n    };\n\n    public decrease (groupIndex, widgetIndex) {\n          var widget    = this.defaultWidgets[groupIndex][widgetIndex];\n          widget.amount = widget.amount ? widget.amount - 1 : 0;\n    };\n}\n\nangular\n    .module('pipAddDashboardComponentDialog', ['ngMaterial'])\n    .controller('pipAddDashboardComponentDialogController', AddComponentDialogController);\n\nimport './AddComponentProvider';","'use strict';\n\nexport interface IAddComponentDialogService {\n  show(groups, activeGroupIndex): any;\n}\n\nclass AddComponentDialogService implements IAddComponentDialogService {\n    public _mdDialog: angular.material.IDialogService;\n    private _widgetList: any;\n\n    public constructor(widgetList: any, $mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n        this._widgetList = widgetList;\n    }\n\n    public show(groups, activeGroupIndex) {\n        return this._mdDialog\n          .show({\n            templateUrl     : 'dialogs/add_component/AddComponent.html',\n            bindToController: true,\n            controller      : 'pipAddDashboardComponentDialogController',\n            controllerAs    : 'dialogCtrl',\n            resolve: {\n              groups: () => {\n                return groups;\n              },\n              activeGroupIndex: () => {\n                return activeGroupIndex;\n              },\n              widgetList: () => {\n                return this._widgetList;\n              }\n           }\n          });\n      };\n}\n\nclass AddComponentDialogProvider {\n  private _service: AddComponentDialogService;\n  private _widgetList: any = null;\n\n  constructor() {\n  }\n\n  public configWidgetList = function (list) {\n      this._widgetList = list;\n  };\n\n  public $get($mdDialog: angular.material.IDialogService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\n        \n        return this._service;\n  }\n}\n\nangular\n    .module('pipDashboard')\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\n","'use strict';\n\nclass TileColors {\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\n}\n\nclass TileSizes {\n    static all: any = [\n        {name: 'SMALL', id: '11'},\n        {name: 'WIDE', id: '21'},\n        {name: 'LARGE', id: '22'}\n    ];\n}\n\nexport class WidgetConfigDialogController {\n    public dialogTitle: string = \"Edit tile\";\n    public $mdDialog: angular.material.IDialogService;\n    public transclude: any;\n    public params: any;\n    public colors: string[] = TileColors.all;\n    public sizes: any = TileSizes.all;\n    public sizeId: string = TileSizes.all[0].id;\n\n    private _$element: any;\n    private _$timeout: angular.ITimeoutService;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $compile: angular.ICompileService,\n        $timeout: angular.ITimeoutService,\n        $injector,\n        $scope: angular.IScope,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this._$timeout = $timeout;\n\n        this.params = params;\n        angular.extend(this, this.params);\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\n    }\n\n    public onApply(): void {\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\n        this.$mdDialog.hide(this);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipWidgetConfigDialog', ['ngMaterial'])\n    .controller('pipWidgetConfigDialogController', WidgetConfigDialogController);\n\nimport './ConfigDialogService';\nimport './ConfigDialogExtendComponent';","\n(() => {\n    'use strict';\n    \n    function pipWidgetConfigComponent(\n        $templateRequest: angular.ITemplateRequestService,\n        $compile: angular.ICompileService\n    ) {\n        return {\n            restrict: 'E',\n            templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\n            scope: false,\n            link: ($scope: angular.IScope, $element: any, $attrs: any) => {\n                $templateRequest($attrs.pipExtensionUrl, false).then((html) => {\n                    $element.find('pip-extension-point').replaceWith($compile(html)($scope));\n                });\n            }\n        }\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .directive('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\n\n})();","export interface IWidgetConfigService {\n    show(params: any, successCallback?: (key) => void, cancelCallback?: () => void): any;\n}\n\nclass WidgetConfigDialogService {\n  public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (key) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\n            controller: 'pipWidgetConfigDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((key) => {\n            if (successCallback) {\n                successCallback(key);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });         \n    }\n}\n\n\n(() => {\n  'use strict';\n\n  angular\n    .module('pipWidgetConfigDialog')\n    .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\n  \n})();\n","(function () {\n  'use strict';\n\n  angular.module('pipDragged', []);\n})();\n\nimport './DraggableTileService';\nimport './DraggableController';\nimport './DraggableDirective';\nimport './draggable_group/DraggableTilesGroupService'\nimport './draggable_group/DraggableTilesGroupDirective'","'use strict';\n\ndeclare var interact;\n\nimport { DragTileService, IDragTileService, IDragTileConstructor } from './DraggableTileService';\nimport { TilesGridService, ITilesGridService, ITilesGridConstructor } from './draggable_group/DraggableTilesGroupService';\n\nlet SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\nexport let DEFAULT_TILE_WIDTH: number = 150;\nexport let DEFAULT_TILE_HEIGHT: number = 150;\nexport let UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\n\nlet DEFAULT_OPTIONS = {\n    tileWidth              : DEFAULT_TILE_WIDTH,   // 'px'\n    tileHeight             : DEFAULT_TILE_HEIGHT,   // 'px'\n    gutter                 : 20,    // 'px'\n    container              : 'pip-draggable-grid:first-of-type',\n    //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\n    activeDropzoneClass    : 'dropzone-active',\n    groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\n};\n\nclass DraggableController {\n  public opts: any;\n  public groups: any;\n  public sourceDropZoneElem: any = null;\n  public isSameDropzone: boolean = true;\n  public tileGroups: any = null;\n  public availableWidth: any;\n  public availableColumns: any;\n  public groupsContainers: any;\n  public container: any;\n  public activeDraggedGroup: any;\n  public draggedTile: any;\n  public containerOffset: any;\n\n  private _$timeout: angular.ITimeoutService;\n  private _$rootScope: angular.IRootScopeService;\n  private _$scope: angular.IScope;\n  private _$compile: angular.ICompileService;\n  private _$element: any;\n\n  constructor(\n    $scope: angular.IScope, \n    $rootScope: angular.IRootScopeService, \n    $compile: angular.ICompileService, \n    $timeout: angular.ITimeoutService,\n    $element: any, \n    pipDragTile: IDragTileService, \n    pipTilesGrid: ITilesGridService,\n    pipMedia: pip.layouts.IMediaService\n  ) {\n    this._$timeout = $timeout;\n    this._$rootScope = $rootScope;\n    this._$scope = $scope;\n    this._$compile = $compile;\n    this._$element = $element;\n\n    this.opts = _.merge({ mobileBreakpoint: pipMedia.breakpoints.xs }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\n\n    this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\n      return {\n        title : group.title,\n        editingName : false,\n        index: groupIndex,\n        source: group.source.map((tile) => {\n          let tileScope = $rootScope.$new(false, $scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index;\n          tileScope['groupIndex'] = tile.opts.groupIndex;\n\n          return IDragTileConstructor(DragTileService, {\n            tpl    : $compile(tile.template)(tileScope),\n            options: tile.opts,\n            size   : tile.opts.size\n          });\n        })\n      };\n    });\n\n    // Add templates watcher\n    $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\n      this.watch(newVal);\n    }, true);\n\n    // Initialize data\n    this.initialize();\n\n    // Resize handler TODO: replace by pip resize watchers\n    $(window).on('resize', _.debounce(() => {\n      this.availableWidth   = this.getContainerWidth();\n      this.availableColumns = this.getAvailableColumns(this.availableWidth);\n\n      this.tileGroups.forEach((group) => {\n        group\n          .setAvailableColumns(this.availableColumns)\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }, 50));\n  }\n\n  // Watch handler\n  private watch(newVal) {\n      const prevVal = this.groups;\n      let changedGroupIndex = null;\n\n      if (newVal.length > prevVal.length) {\n        this.addGroup(newVal[newVal.length - 1]);\n\n        return;\n      }\n\n      if (newVal.length < prevVal.length) {\n        this.removeGroups(newVal);\n\n        return;\n      }\n\n      for (let i = 0; i < newVal.length; i++) {\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\n          changedGroupIndex = i;\n\n          if (groupWidgetDiff < 0) {\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\n            \n            _.each(newTiles, (tile) => {\n              console.log('tile', tile);\n            });\n\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\n\n            this._$timeout(() => { this.updateTilesGroups(); });\n          } else {\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\n            this.updateTilesOptions(newVal);\n            this._$timeout(() => { this.updateTilesGroups(); });\n          }\n\n          return;\n        }\n      }\n\n      if (newVal && this.tileGroups) {\n        this.updateTilesOptions(newVal);\n        this._$timeout(() => { this.updateTilesGroups(); });\n      }\n  }\n\n  // Inline edit group handlers\n  public onTitleClick(group, event) {\n      if (!group.editingName) {\n        group.oldTitle = _.clone(group.title);\n        group.editingName = true;\n        this._$timeout(() => {\n          $(event.currentTarget.children[0]).focus();\n        });\n      }\n  }\n\n  public cancelEditing (group) {\n      group.title = group.oldTitle;\n    }\n\n    public onBlurTitleInput (group) {\n      this._$timeout(() => {\n        group.editingName = false;\n        this._$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\n        // Update title in outer scope\n        this._$scope['draggableCtrl'].tilesTemplates[group.index].title = group.title;\n      }, 100);\n    }\n\n    public onKyepressTitleInput (group, event) {\n      if (event.keyCode === 13) {\n        this.onBlurTitleInput(group);\n      }\n    }\n\n    // Update outer scope functions\n    private updateTilesTemplates(updateType: string, source?: any) {\n      switch(updateType) {\n        case 'addGroup': \n          if (this.groups.length !== this._$scope['draggableCtrl'].tilesTemplates.length) {\n              this._$scope['draggableCtrl'].tilesTemplates.push(source);\n          }          \n          break;\n        case 'moveTile': \n          const {fromIndex, toIndex, tileOptions, fromTileIndex} = {\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\n            toIndex: source.to.elem.attributes['data-group-id'].value,\n            tileOptions: source.tile.opts.options,\n            fromTileIndex: source.tile.opts.options.index\n          }\n          this._$scope['draggableCtrl'].tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\n          this._$scope['draggableCtrl'].tilesTemplates[toIndex].source.push({opts: tileOptions});\n\n          this.reIndexTiles(source.from.elem);\n          this.reIndexTiles(source.to.elem);\n          break;\n      }\n    }\n\n    // Manage tiles functions\n    private removeTiles(group, indexes, container) {\n      const tiles = $(container).find('.pip-draggable-tile');\n\n      _.each(indexes, (index) => {\n        group.tiles.splice(index, 1);\n        tiles[index].remove();\n      });\n\n      this.reIndexTiles(container);\n    }\n\n    private reIndexTiles(container, gIndex?) {\n      const tiles = $(container).find('.pip-draggable-tile'),\n            groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\n\n      _.each(tiles, (tile, index) => {\n        let child = $(tile).children()[0];\n        angular.element(child).scope()['index'] = index;\n        angular.element(child).scope()['groupIndex'] = groupIndex;\n      });\n    }\n\n    private removeGroups(newGroups) {\n      const removeIndexes = [],\n            remain = [],\n            containers = [];\n\n\n      _.each(this.groups, (group, index) => {\n          if (_.findIndex(newGroups, (g) => { return g['title'] === group.title}) < 0) {\n            removeIndexes.push(index);\n          } else {\n            remain.push(index);\n          }\n      });\n\n      _.each(removeIndexes.reverse(), (index) => {\n          this.groups.splice(index, 1);\n          this.tileGroups.splice(index, 1);\n      });\n\n      _.each(remain, (index) => {\n          containers.push(this.groupsContainers[index]);\n      });\n      \n       this.groupsContainers = containers;\n\n      _.each(this.groupsContainers, (container, index) => {\n          this.reIndexTiles(container, index);\n      });\n    }\n\n    private addGroup(sourceGroup) {\n      let group = {\n        title : sourceGroup.title,\n        source: sourceGroup.source.map((tile) => {\n          let tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n          return IDragTileConstructor(DragTileService, {\n            tpl    : this._$compile(tile.template)(tileScope),\n            options: tile.opts,\n            size   : tile.opts.size\n          });\n        })\n      };\n\n      this.groups.push(group);\n      if (!this._$scope.$$phase) this._$scope.$apply();\n\n      this._$timeout(() => {\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups.push(\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n            .setTilesDimensions()\n            .calcContainerHeight()\n        );\n      });\n\n      this.updateTilesTemplates('addGroup', sourceGroup);\n    }\n\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\n      newTiles.forEach((tile) => {\n        const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n        tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n        tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n        const newTile = IDragTileConstructor(DragTileService,{\n          tpl    : this._$compile(tile.template)(tileScope),\n          options: tile.opts,\n          size   : tile.opts.size\n        });\n\n        group.addTile(newTile);\n\n        $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(newTile.getCompiledTemplate())\n          .appendTo(groupContainer);\n      });\n    }\n\n    private updateTilesOptions(optionsGroup) {\n      optionsGroup.forEach((optionGroup) => {\n        optionGroup.source.forEach((tileOptions) => {\n          this.tileGroups.forEach((group) => {\n            group.updateTileOptions(tileOptions.opts);\n          });\n        });\n      });\n    }\n\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\n      return tileGroups.map((group, index) => {\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }\n\n    private updateTilesGroups(onlyPosition?, draggedTile?) {\n      this.tileGroups.forEach((group) => {\n        if (!onlyPosition) {\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\n        }\n\n        group\n          .setTilesDimensions(onlyPosition, draggedTile)\n          .calcContainerHeight();\n      });\n    }\n\n    private getContainerWidth(): any {\n      const container = this._$scope['$container'] || $('body');\n      return container.width();\n    }\n\n    private getAvailableColumns(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT\n        : Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\n    }\n\n    private getActiveGroupAndTile(elem): any {\n      const active = {};\n\n      this.tileGroups.forEach((group) => {\n        const foundTile = group.getTileByNode(elem);\n\n        if (foundTile) {\n          active['group'] = group;\n          active['tile']  = foundTile;\n          return;\n        }\n      });\n\n      return active;\n    }\n\n    private getSingleTileWidthForMobile(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\n    }\n\n    private onDragStartListener(event) {\n      const activeEntities = this.getActiveGroupAndTile(event.target);\n\n      this.container          = $(event.target).parent('.pip-draggable-group').get(0);\n      this.draggedTile        = activeEntities['tile'];\n      this.activeDraggedGroup = activeEntities['group'];\n      \n      this._$element.addClass('drag-transfer');\n\n      this.draggedTile.startDrag();\n    }\n\n    private onDragMoveListener(event) {\n      const target = event.target;\n      const x      = (parseFloat(target.style.left) || 0) + event.dx;\n      const y      = (parseFloat(target.style.top) || 0) + event.dy;\n\n      this.containerOffset = this.getContainerOffset();\n\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\n      target.style.top  = y + 'px';\n\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\n        left: event.pageX - this.containerOffset.left,\n        top : event.pageY - this.containerOffset.top\n      }, this.draggedTile);\n\n      if (belowElement) {\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\n        const belowElemIndex   = this.activeDraggedGroup.getTileIndex(belowElement);\n\n        if ((draggedTileIndex + 1) === belowElemIndex) {\n          return;\n        }\n\n        this.activeDraggedGroup\n          .swapTiles(this.draggedTile, belowElement)\n          .setTilesDimensions(true, this.draggedTile);\n\n        this._$timeout(() => { this.setGroupContainersHeight(); }, 0);\n      }\n    }\n\n    private onDragEndListener() {\n      this.draggedTile.stopDrag(this.isSameDropzone);\n\n      this._$element.removeClass('drag-transfer');\n      this.activeDraggedGroup = null;\n      this.draggedTile        = null;\n    }\n\n    private getContainerOffset() {\n      const containerRect = this.container.getBoundingClientRect();\n\n      return {\n        left: containerRect.left,\n        top : containerRect.top\n      };\n    }\n\n    private setGroupContainersHeight() {\n      this.tileGroups.forEach((tileGroup) => {\n        tileGroup.calcContainerHeight();\n      });\n    }\n\n    private moveTile(from, to, tile) {\n      let elem;\n      const movedTile = from.removeTile(tile);\n      const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\n        .find(movedTile.getElem())\n        .remove();\n\n      if (to !== null) {\n        to.addTile(movedTile);\n\n        elem = this._$compile(movedTile.getElem())(tileScope);\n\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\n          .append(elem);\n\n        this._$timeout(to.setTilesDimensions.bind(to, true));\n      }\n\n      this.updateTilesTemplates('moveTile', {from: from, to: to, tile: movedTile});\n    }\n\n    private onDropListener(event) {\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\n      const droppedGroup      = this.tileGroups[droppedGroupIndex];\n\n      if (this.activeDraggedGroup !== droppedGroup) {\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\n      }\n\n      this.updateTilesGroups(true);\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropToFictGroupListener(event) {\n      const from = this.activeDraggedGroup;\n      const tile = this.draggedTile;\n\n      this.addGroup({title: 'New group', source: []});\n      this._$timeout(() => {\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\n        this.updateTilesGroups(true);\n      });\n\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropEnterListener(event) {\n      if (!this.sourceDropZoneElem) {\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\n      }\n\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\n        $('body').css('cursor', 'copy');\n        this.isSameDropzone = false;\n      } else {\n        $('body').css('cursor', '');\n        this.isSameDropzone = true;\n      }\n    }\n\n    private onDropDeactivateListener(event) {\n      if (this.sourceDropZoneElem !== event.target) {\n        event.target.classList.remove(this.opts.activeDropzoneClass);\n        $('body').css('cursor', '');\n      }\n    }\n\n    private onDropLeaveListener(event) {\n      event.target.classList.remove(this.opts.activeDropzoneClass);\n    }\n\n    private initialize() {\n      this._$timeout(() => {\n        this.availableWidth   = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups       = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\n\n        interact('.pip-draggable-tile')\n          .draggable({\n            // enable autoScroll\n            autoScroll: true,\n            onstart: (event) => { this.onDragStartListener(event) },\n            onmove : (event) => { this.onDragMoveListener(event) },\n            onend  : (event) => { this.onDragEndListener() }\n          });\n        \n        interact('.pip-draggable-group.fict-group')\n          .dropzone({\n            ondrop: (event) => { console.log('here');  this.onDropToFictGroupListener(event) },\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\n          })\n        \n        interact('.pip-draggable-group')\n          .dropzone({\n            ondrop          : (event) => { this.onDropListener(event) },\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\n          });\n\n        this._$scope['$container']\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\n            interact('.pip-draggable-tile').draggable(false);\n            $(this).trigger('click');\n          })\n          .on('mouseup touchend', () => {\n            interact('.pip-draggable-tile').draggable(true);\n          });\n      }, 0);\n    }\n\n}\n\n\nangular\n    .module('pipDragged')\n    .controller('pipDraggableCtrl', DraggableController);\n","'use strict';\n\nangular\n  .module('pipDragged')\n  .directive('pipDraggableGrid', DragDirective);\n\nfunction DragDirective() {\n  return {\n    restrict: 'E',\n    scope: {\n      tilesTemplates: '=pipTilesTemplates',\n      tilesContext: '=pipTilesContext',\n      options: '=pipDraggableGrid',\n      groupMenuActions: '=pipGroupMenuActions'\n    },\n    templateUrl: 'draggable/Draggable.html',\n    bindToController: true,\n    controllerAs: 'draggableCtrl',\n    controller: 'pipDraggableCtrl',\n    link: function ($scope, $elem) {\n      $scope.$container = $elem;\n    }\n  };\n}","'use strict';\n\nexport interface DragTileConstructor {\n  new (options: any);\n}\n\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\n  return new constructor(options);\n}\n\nexport interface IDragTileService {\n  tpl: any;\n  opts: any;\n  size: any;\n  elem: any;\n  preview: any;\n  getSize(): any;\n  setSize(width, height): any;\n  setPosition(left, top): any;\n  getCompiledTemplate(): any;\n  updateElem(parent): any;\n  getElem(): any;\n  startDrag(): any;\n  stopDrag(isAnimate): any;\n  setPreviewPosition(coords): void;\n  getOptions(): any;\n  setOptions(options): any;\n}\n\nlet DEFAULT_TILE_SIZE = {\n  colSpan: 1,\n  rowSpan: 1\n};\n\nexport class DragTileService implements IDragTileService {\n  public tpl: any;\n  public opts: any;\n  public size: any;\n  public elem: any;\n  public preview: any;\n\n  constructor (options: any) {\n    this.tpl = options.tpl.get(0);\n    this.opts = options;\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\n    this.elem = null;\n  }\n\n  public getSize(): any {\n    return this.size;\n  }\n\n  public setSize(width, height): any {\n    this.size.width = width;\n    this.size.height = height;\n\n    if (this.elem) {\n      this.elem.css({\n        width: width,\n        height: height\n      });\n    }\n\n    return this;\n  }\n\n  public setPosition(left, top): any {\n    this.size.left = left;\n    this.size.top = top;\n\n    if (this.elem) {\n      this.elem.css({\n        left: left,\n        top: top\n      });\n    }\n\n    return this;\n  }\n\n  public getCompiledTemplate(): any {\n    return this.tpl;\n  };\n\n  public updateElem(parent): any {\n    this.elem = $(this.tpl).parent(parent);\n\n    return this;\n  };\n\n  public getElem(): any {\n    return this.elem.get(0);\n  };\n\n  public startDrag(): any {\n    this.preview = $('<div>')\n      .addClass('pip-dragged-preview')\n      .css({\n        position: 'absolute',\n        left: this.elem.css('left'),\n        top: this.elem.css('top'),\n        width: this.elem.css('width'),\n        height: this.elem.css('height')\n      });\n\n    this.elem\n      .addClass('no-animation')\n      .css({\n        zIndex: '9999'\n      })\n      .after(this.preview);\n\n    return this;\n  };\n\n  public stopDrag(isAnimate): any {\n    let self = this;\n\n    if (isAnimate) {\n      this.elem\n        .removeClass('no-animation')\n        .css({\n          left: this.preview.css('left'),\n          top: this.preview.css('top')\n        })\n        .on('transitionend', onTransitionEnd);\n    } else {\n      self.elem\n        .css({\n          left: self.preview.css('left'),\n          top: self.preview.css('top'),\n          zIndex: ''\n        })\n        .removeClass('no-animation');\n\n      self.preview.remove();\n      self.preview = null;\n    }\n\n    return this;\n\n    function onTransitionEnd() {\n      if (self.preview) {\n        self.preview.remove();\n        self.preview = null;\n      }\n\n      self.elem\n        .css('zIndex', '')\n        .off('transitionend', onTransitionEnd);\n    }\n  };\n\n  public setPreviewPosition(coords) {\n    this.preview.css(coords);\n  };\n\n  public getOptions(): any {\n    return this.opts.options;\n  };\n\n  public setOptions(options): any {\n    _.merge(this.opts.options, options);\n    _.merge(this.size, options.size);\n\n    return this;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipDragTile', function () {\n    return function (options) {\n      let newTile = new DragTileService(options);\n\n      return newTile;\n    }\n  });","'use strict';\n\nangular\n  .module('pipDragged')\n  .directive('pipDraggableTiles', DraggableTile);\n\nfunction DraggableTile() {\n  return {\n    restrict: 'A',\n    link: function ($scope, $elem, $attr) {\n      var docFrag = document.createDocumentFragment();\n      var group = $scope.$eval($attr.pipDraggableTiles);\n\n      group.forEach(function (tile) {\n        var tpl = wrapComponent(tile.getCompiledTemplate());\n        docFrag.appendChild(tpl);\n      });\n\n      $elem.append(docFrag);\n\n      function wrapComponent(elem) {\n        return $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(elem)\n          .get(0);\n      }\n    }\n  };\n}","'use strict';\n\nexport interface TilesGridConstructor {\n  new (tiles, options, columns, elem);\n}\n\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem):ITilesGridService {\n  return new constructor(tiles, options, columns, elem);\n}\n\nexport interface ITilesGridService {\n  tiles: any;\n  opts: any;\n  columns: any;\n  elem: any;\n  gridCells: any;\n  inline: boolean;\n  isMobileLayout: boolean;\n\n  addTile(tile): any;\n  getCellByPosition(row, col): any;\n  getCells(prevCell, rowSpan, colSpan): any;\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\n  getCell(src, basicRow, basicCol, columns): any;\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\n  getBasicRow(prevCell): any;\n  isCellFree(row, col): any;\n  getCellIndex(srcCell): any;\n  reserveCells(start, end, elem): void;\n  clearElements(): void;\n  setAvailableColumns(columns): any;\n  generateGrid(singleTileWidth?): any;\n  setTilesDimensions(onlyPosition, draggedTile): any;\n  calcContainerHeight(): any;\n  getTileByNode(node): any;\n  getTileByCoordinates(coords, draggedTile): any;\n  getTileIndex(tile): any;\n  swapTiles(movedTile, beforeTile): any;\n  removeTile(removeTile): any;\n  updateTileOptions(opts): any;\n}\n\nlet MOBILE_LAYOUT_COLUMNS = 2;\n\nexport class TilesGridService implements ITilesGridService {\n  public tiles: any;\n  public opts: any;\n  public columns: any;\n  public elem: any;\n  public gridCells: any = [];\n  public inline: boolean = false;\n  public isMobileLayout: boolean;\n\n  constructor(tiles, options, columns, elem) {\n    this.tiles = tiles;\n    this.opts = options;\n    this.columns = columns || 0; // available columns in a row\n    this.elem = elem;\n    this.gridCells = [];\n    this.inline = options.inline || false;\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n  }\n\n  public addTile(tile): any {\n    this.tiles.push(tile);\n    if (this.tiles.length === 1) {\n      this.generateGrid();\n    }\n\n    return this;\n  };\n\n  public getCellByPosition(row, col): any {\n    return this.gridCells[row][col];\n  };\n\n  public getCells(prevCell, rowSpan, colSpan): any {\n    if (this.isMobileLayout) {\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\n    } else {\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\n    }\n  };\n\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    let basicCol = prevCell && prevCell.col || 0;\n    let basicRow = this.getBasicRow(prevCell);\n\n    // Small tile\n    if (colSpan === 1 && rowSpan === 1) {\n      let gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          let rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    // Medium tile\n    if (colSpan === 2 && rowSpan === 1) {\n      let prevTileSize = prevCell && prevCell.elem.size || null;\n\n      if (!prevTileSize) {\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\n        if (this.columns - basicCol - 2 > 0) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\n        if (prevCell.row % 2 === 0) {\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\n        } else {\n          if (this.columns - basicCol - 3 >= 0) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n          }\n        }\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\n        if (this.columns - basicCol - 3 >= 0) {\n          if (this.isCellFree(basicRow, basicCol + 1)) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\n          }\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      }\n    }\n\n    // Big tile\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\n    } else if (rowSpan === 2 && colSpan === 2) {\n      if (this.columns - basicCol - 2 > 0) {\n        if (this.isCellFree(basicRow, basicCol + 1)) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\n        }\n      } else {\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\n      }\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getCell(src, basicRow, basicCol, columns): any {\n    let cell;\n    let col;\n    let row;\n\n    if (this.isMobileLayout) {\n      // mobile layout\n      for (col = basicCol; col < columns; col++) {\n        if (!src[basicRow][col].elem) {\n          cell = src[basicRow][col];\n          break;\n        }\n      }\n\n      return cell;\n    }\n\n    // desktop\n    for (col = basicCol; col < columns; col++) {\n      for (row = 0; row < 2; row++) {\n        if (!src[row + basicRow][col].elem) {\n          cell = src[row + basicRow][col];\n          break;\n        }\n      }\n\n      if (cell) {\n        return cell;\n      }\n    }\n  };\n\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    let basicRow = this.getBasicRow(prevCell);\n    let basicCol = prevCell && prevCell.col || 0;\n\n\n    if (colSpan === 1 && rowSpan === 1) {\n      let gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          let rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    if (!prevCell) {\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\n    } else if (colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getBasicRow(prevCell): any {\n    let basicRow;\n\n    if (this.isMobileLayout) {\n      if (prevCell) {\n        basicRow = prevCell && prevCell.row || 0;\n      } else {\n        basicRow = 0;\n      }\n    } else {\n      if (prevCell) {\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\n      } else {\n        basicRow = 0;\n      }\n    }\n\n    return basicRow;\n  };\n\n  public isCellFree(row, col): any {\n    return !this.gridCells[row][col].elem;\n  };\n\n  public getCellIndex(srcCell): any {\n    let self = this;\n    let index;\n\n    this.gridCells.forEach((row, rowIndex) => {\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\n        return cell === srcCell;\n      });\n\n      if (index !== -1) {\n        return;\n      }\n    });\n\n    return index !== -1 ? index : 0;\n  };\n\n  public reserveCells(start, end, elem) {\n    this.gridCells.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.row >= start.row && cell.row <= end.row &&\n          cell.col >= start.col && cell.col <= end.col) {\n          cell.elem = elem;\n        }\n      });\n    });\n  };\n\n  public clearElements() {\n    this.gridCells.forEach((row) => {\n      row.forEach((tile) => {\n        tile.elem = null;\n      });\n    });\n  };\n\n  public setAvailableColumns(columns): any {\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n    this.columns = columns;\n\n    return this;\n  };\n\n  public generateGrid(singleTileWidth?): any {\n    let self = this;\n    let colsInRow = 0;\n    let rows = 0;\n    let tileWidth = singleTileWidth || this.opts.tileWidth;\n    let offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\n    let gridInRow = [];\n\n    this.gridCells = [];\n\n    this.tiles.forEach((tile, index, srcTiles) => {\n      let tileSize = tile.getSize();\n\n      generateCells(tileSize.colSpan);\n\n      if (srcTiles.length === index + 1) {\n        if (colsInRow < self.columns) {\n          generateCells(self.columns - colsInRow);\n        }\n\n        // Generate more cells for extends tile size to big\n        if (self.tiles.length * 2 > self.gridCells.length) {\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\n            generateCells(self.columns);\n          });\n        }\n      }\n    });\n\n    function generateCells(newCellCount) {\n        Array.apply(null, Array(newCellCount)).forEach(() => {\n          if (self.columns < colsInRow + 1) {\n            rows++;\n            colsInRow = 0;\n\n            self.gridCells.push(gridInRow);\n            gridInRow = [];\n          }\n\n          let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\n          let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\n\n          // Describe grid cell size through block corners coordinates\n          gridInRow.push({\n            top: top,\n            left: left,\n            bottom: top + self.opts.tileHeight,\n            right: left + tileWidth,\n            row: rows,\n            col: colsInRow\n          });\n\n          colsInRow++;\n        });\n      }\n\n    return this;\n  };\n\n  public setTilesDimensions(onlyPosition, draggedTile): any {\n    let self = this;\n    let currIndex = 0;\n    let prevCell;\n\n    if (onlyPosition) {\n      self.clearElements();\n    }\n\n    this.tiles.forEach((tile) => {\n      let tileSize = tile.getSize();\n      let startCell;\n      let width;\n      let height;\n      let cells;\n\n      tile.updateElem('.pip-draggable-tile');\n      if (tileSize.colSpan === 1) {\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\n        } else {\n          startCell = self.getCells(prevCell, 1, 1).start;\n        }\n\n\n        if (!onlyPosition) {\n          width = startCell.right - startCell.left;\n          height = startCell.bottom - startCell.top;\n        }\n\n        prevCell = startCell;\n\n        self.reserveCells(startCell, startCell, tile);\n\n        currIndex++;\n      } else if (tileSize.colSpan === 2) {\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\n        startCell = cells.start;\n\n        if (!onlyPosition) {\n          width = cells.end.right - cells.start.left;\n          height = cells.end.bottom - cells.start.top;\n        }\n\n        prevCell = cells.end;\n\n        self.reserveCells(cells.start, cells.end, tile);\n\n        currIndex += 2;\n      }\n\n      // Render preview\n      // while tiles from group is dragged\n      if (draggedTile === tile) {\n        tile.setPreviewPosition({\n          left: startCell.left,\n          top: startCell.top\n        });\n\n        return;\n      }\n\n      if (!onlyPosition) {\n        tile.setSize(width, height);\n      }\n\n      tile.setPosition(startCell.left, startCell.top);\n    });\n\n    return this;\n  };\n\n  public calcContainerHeight(): any {\n    let maxHeightSize, maxWidthSize;\n\n    if (!this.tiles.length) {\n      return this;\n    }\n\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\n      let tileSize = tile['getSize']();\n      return tileSize.top + tileSize.height;\n    })['getSize']();\n\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\n\n    if (this.inline) {\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\n        let tileSize = tile['getSize']();\n        return tileSize.left + tileSize.width;\n      })['getSize']();\n\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\n    }\n\n    return this;\n  };\n\n  public getTileByNode(node): any {\n    let foundTile = this.tiles.filter((tile) => {\n      return node === tile.getElem();\n    });\n\n    return foundTile.length ? foundTile[0] : null;\n  };\n\n  public getTileByCoordinates(coords, draggedTile): any {\n    return this.tiles\n      .filter((tile) => {\n        let tileSize = tile.getSize();\n\n        return tile !== draggedTile &&\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\n      })[0] || null;\n  };\n\n  public getTileIndex(tile): any {\n    return _.findIndex(this.tiles, tile);\n  };\n\n  public swapTiles(movedTile, beforeTile): any {\n    let movedTileIndex = _.findIndex(this.tiles, movedTile);\n    let beforeTileIndex = _.findIndex(this.tiles, beforeTile);\n\n    this.tiles.splice(movedTileIndex, 1);\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\n\n    return this;\n  };\n\n  public removeTile(removeTile): any {\n    let droppedTile;\n\n    this.tiles.forEach((tile, index, tiles) => {\n      if (tile === removeTile) {\n        droppedTile = tiles.splice(index, 1)[0];\n        return false;\n      }\n    });\n\n    return droppedTile;\n  };\n\n  public updateTileOptions(opts): any {\n    let index = _.findIndex(this.tiles, (tile) => {\n      return tile['getOptions']() === opts;\n    });\n\n    if (index !== -1) {\n      this.tiles[index].setOptions(opts);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipTilesGrid', function () {\n    return function (tiles, options, columns, elem) {\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\n\n      return newGrid;\n    }\n  });","export interface IWidgetTemplateService {\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\n    setImageMarginCSS($element, image): void;\n}\n\nclass widgetTemplateService implements IWidgetTemplateService {\n    private _$interpolate: angular.IInterpolateService;\n    private _$compile: angular.ICompileService;\n    private _$templateRequest: angular.ITemplateRequestService;\n\n    constructor(\n        $interpolate: angular.IInterpolateService,\n        $compile: angular.ICompileService,\n        $templateRequest: angular.ITemplateRequestService\n    ) {\n        this._$interpolate = $interpolate;\n        this._$compile = $compile;\n        this._$templateRequest = $templateRequest;\n    }\n\n    public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\n        const {\n            template,\n            templateUrl,\n            type\n        } = source;\n        let result;\n\n        if (type) {\n            const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\n            return strictCompile == true ?\n                (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\n                interpolated;\n        }\n\n        if (template) {\n            return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\n        }\n\n        if (templateUrl) {\n            this._$templateRequest(templateUrl, false).then((html) => {\n                result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\n            });\n        }\n\n        return result;\n    }\n\n    public setImageMarginCSS($element, image) {\n        let\n            containerWidth = $element.width ? $element.width() : $element.clientWidth, \n            containerHeight = $element.height ? $element.height() : $element.clientHeight,\n            imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\n            imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\n            margin = 0,\n            cssParams = {};\n\n        if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n            margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n            cssParams['margin-left'] = '' + margin + 'px';\n            cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n            cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n            cssParams['margin-top'] = '';\n        } else {\n            margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n            cssParams['margin-top'] = '' + margin + 'px';\n            cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n            cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n            cssParams['margin-left'] = '';\n        }\n\n        $(image).css(cssParams);\n    }\n}\n\n// image load directive TODO: remove to pipImageUtils\nfunction ImageLoad($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var callback = $parse(attrs.pipImageLoad);\n            element.bind('load', (event) => {\n                callback(scope, {$event: event});\n            });\n        } \n    }\n}\n\nangular\n    .module('pipDashboard')\n    .service('pipWidgetTemplate', widgetTemplateService)\n    .directive('pipImageLoad', ImageLoad);","(() => {\n  'use strict';\n\n  angular.module('pipWidget', []);\n})();\n\nimport './calendar/WidgetCalendar';\nimport './event/WidgetEvent';\nimport './menu/WidgetMenuService';\nimport './menu/WidgetMenuDirective';\nimport './notes/WidgetNotes';\nimport './position/WidgetPosition';\nimport './statistics/WidgetStatistics';\nimport './picture_slider/WidgetPictureSlider';\n","import { MenuWidgetService } from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass CalendarWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n\n  public color: string = 'blue';\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n        this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n        }});\n        this['options'].date = this['options'].date || new Date();\n        this.color = this['options'].color || this.color;\n      }\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size,\n      date: this['options'].date,\n      extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].date = result.date;\n    });\n  }\n\n}\n\n(() => {\n\n  let pipCalendarWidget = {\n      bindings        : {\n        options: '=pipOptions',\n      },\n      controller      : CalendarWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/calendar/WidgetCalendar.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipCalendarWidget', pipCalendarWidget);\n\n})();\n","import { MenuWidgetService} from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass EventWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _oldOpacity: number;\n\n  public color: string = 'gray';\n  public opacity: number = 0.57;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n    }});\n    this.color = this['options'].color || this.color;\n    this.opacity = this['options'].opacity || this.opacity;\n\n    this.drawImage();\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      this.drawImage();\n    });\n  }\n\n  private drawImage() {\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.onImageLoad(this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  private onConfigClick() {\n    this._oldOpacity = _.clone(this.opacity);\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\n      date: this['options'].date,\n      title: this['options'].title,\n      text: this['options'].text,\n      opacity: this.opacity,\n      onOpacitytest: (opacity) => {\n        this.opacity = opacity;\n      },\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].date = result.date;\n      this['options'].title = result.title;\n      this['options'].text = result.text;\n      this['options'].opacity = result.opacity;\n    }, () => {\n      this.opacity = this._oldOpacity;\n    });\n  }\n\n  private onImageLoad(image) {\n    this.setImageMarginCSS(this._$element.parent(), image);\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  // Later replace by pipImageUtils sevice's function\n  private setImageMarginCSS($element, image) {\n    let\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\n      imageWidth = image[0].naturalWidth || image.width,\n      imageHeight = image[0].naturalHeight || image.height,\n      margin = 0,\n      cssParams = {};\n\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n      cssParams['margin-left'] = '' + margin + 'px';\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n      cssParams['margin-top'] = '';\n    } else {\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n      cssParams['margin-top'] = '' + margin + 'px';\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n      cssParams['margin-left'] = '';\n    }\n\n    image.css(cssParams);\n  }\n}\n\n\n(() => {\n  let pipEventWidget =  {\n      bindings: {\n        options: '=pipOptions'\n      },\n      controller: EventWidgetController,\n      controllerAs: 'widgetCtrl',\n      templateUrl: 'widgets/event/WidgetEvent.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipEventWidget', pipEventWidget);\n})();","(() => {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .directive('pipMenuWidget', pipMenuWidget);\n\n  function pipMenuWidget() {\n    return {\n      restrict        : 'EA',\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\n    };\n  }\n})();\n","\nexport class MenuWidgetService {\n  public menu: any = [\n    {\n      title: 'Change Size',\n      action: angular.noop,\n      submenu: [{\n          title: '1 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 1,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 2',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 2\n          }\n        }\n      ]\n    }\n  ];\n\n  constructor() {\n    \"ngInject\";\n  }\n\n  public callAction(actionName, params, item) {\n    if (this[actionName]) {\n      this[actionName].call(this, params);\n    }\n\n    if (item['click']) {\n      item['click'].call(item, params, this);\n    }\n  };\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n  };\n}\n\nclass MenuWidgetProvider {\n    private _service: MenuWidgetService;\n\n    constructor() {\n    }\n\n   public $get() {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new MenuWidgetService();\n        \n        return this._service;\n    }\n}\n\n(function () {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .provider('pipWidgetMenu', MenuWidgetProvider);\n})();","'use strict';\n\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass NotesWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n\n  public color: string = 'orange';\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n      }});\n      this.color = this['options'].color || this.color;\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size,\n      title: this['options'].title,\n      text: this['options'].text,\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].text = result.text;\n      this['options'].title = result.title;\n    });\n  }\n}\n\n  let pipNotesWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      controller      : NotesWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipNotesWidget', pipNotesWidget);\n\n","'use strict';\n\nimport {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\nimport {\n  IWidgetTemplateService\n} from '../../utility/WidgetTemplateUtility';\n\nclass PictureSliderController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n  private _widgetUtility: IWidgetTemplateService;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n\n  public animationType: string = 'fading';\n  public animationInterval: number = 5000;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._widgetUtility = pipWidgetTemplate;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    if (this['options']) {\n      this.animationType = this['options'].animationType || this.animationType;\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\n    }\n  }\n\n  public onImageLoad($event) {\n    this._$timeout(() => {\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this._$timeout(() => {\n      _.each(this._$element.find('img'), (image) => {\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\n      });\n    }, 500);\n  }\n}\n\nlet pipPictureSliderWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PictureSliderController,\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\n  controllerAs: 'widgetCtrl'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\nclass PositionWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _locationDialog: any;\n\n  public showPosition: boolean = true;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService,\n    $element: any,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipLocationEditDialog: any,\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._locationDialog = pipLocationEditDialog;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({\n      title: 'Configurate',\n      click: () => {\n        this.onConfigClick();\n      }\n    });\n    this.menu.push({\n      title: 'Change location',\n      click: () => {\n        this.openLocationEditDialog();\n      }\n    });\n\n    this['options'].location = this['options'].location || this['options'].position;\n\n    $scope.$watch('widgetCtrl.options.location', () => {\n      this.reDrawPosition();\n    });\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      if (newVal == true) this.reDrawPosition();\n    });\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-position-config',\n      size: this['options'].size,\n      locationName: this['options'].locationName,\n      hideColors: true,\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.changeSize(result.size);\n      this['options'].locationName = result.locationName;\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reDrawPosition();\n  }\n\n  public openLocationEditDialog() {\n    this._locationDialog.show({\n      locationName: this['options'].locationName,\n      locationPos: this['options'].location\n    }, (newPosition) => {\n      if (newPosition) {\n        this['options'].location = newPosition.location;\n        this['options'].locationName = newPosition.locatioName;\n      }\n    });\n  }\n\n  private reDrawPosition() {\n    this.showPosition = false;\n    this._$timeout(() => {\n      this.showPosition = true;\n    }, 50);\n  }\n}\n\n\nlet pipPositionWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PositionWidgetController,\n  controllerAs: 'widgetCtrl',\n  templateUrl: 'widgets/position/WidgetPosition.html'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\n\nlet SMALL_CHART: number = 70;\nlet BIG_CHART: number = 250;\n\nclass StatisticsWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n\n  public reset: boolean = false;\n  public chartSize: number = SMALL_CHART;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._$timeout = $timeout;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.setChartSize();\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reset = true;\n    this.setChartSize();\n    this._$timeout(() => {\n      this.reset = false;\n    }, 500);\n  }\n\n  private setChartSize() {\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\n  }\n}\n\n(() => {\n  'use strict';\n\n  let pipStatisticsWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      bindToController: true,\n      controller      : StatisticsWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipStatisticsWidget', pipStatisticsWidget);\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">Add component<md-input-container class=\"layout-row flex-auto m0\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"Create New Group\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Add\">Cancel</md-button><md-button ng-click=\"dialogCtrl.add()\" arial-label=\"Cancel\">Add</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-extension-url=\"{{ vm.params.extensionUrl }}\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{vm.dialogTitle}}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!vm.hideSizes\" pip-buttons=\"vm.sizes\" ng-model=\"vm.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!vm.hideColors\" pip-colors=\"vm.colors\" ng-model=\"vm.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onApply()\">Apply</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container>Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"vm.opacity\" ng-change=\"vm.onOpacitytest(vm.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"vm.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}