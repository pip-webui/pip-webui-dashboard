{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableComponent.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","pipDashboard","bindings","gridOptions","groupAdditionalActions","groupedWidgets","controller","controllerAs","templateUrl","component","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","$inject","defineProperty","value","DEFAULT_GRID_OPTIONS","draggableOptions","tileWidth","tileHeight","gutter","inline","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","callback","groupIndex","_this","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","splice","_$scope","_$rootScope","_$attrs","_$element","_$timeout","_$interpolate","_pipAddComponentDialog","_pipWidgetTemplate","addClass","draggableGridOptions","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","data","activeGroup","addWidgets","widgets","push","widgetGroup","forEach","apply","Array","type","options","DashboardController","4","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","totalWidgets","_","isNumber","defaultWidgets","cloneDeep","add","hide","cancel","encrease","widgetIndex","decrease","./AddComponentProvider","5","AddComponentDialogController_1","DASHBOARD_ADD_COMPONENT_DIALOG_TITLE","DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS","DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP","AddComponentDialogService","bindToController","AddComponentDialogProvider","_widgetList","list","$get","_service","6","TileColors","all","TileSizes","id","WidgetConfigDialogController","colors","sizes","sizeId","onCancel","onApply","updatedData","sizeX","Number","substr","sizeY","./ConfigDialogService","7","WidgetConfigExtendComponentBindings","pipExtensionUrl","pipDialogScope","pipApply","WidgetConfigExtendComponentChanges","WidgetConfigExtendComponentController","$templateRequest","$compile","$onChanges","changes","currentValue","then","html","find","replaceWith","pipWidgetConfigComponent","8","DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE","WidgetConfigDialogService","successCallback","cancelCallback","targetEvent","event","ConfigDialogController_1","clickOutsideToClose","key","config","service","./ConfigDialogController","9","./DraggableComponent","./DraggableTileService","./draggable_group/DraggableTilesGroupDirective","./draggable_group/DraggableTilesGroupService","10","Object","DraggableTileService_1","DraggableTilesGroupService_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","merge","breakpoints","xs","tilesTemplates","tile","tileScope","createTileScope","IDragTileConstructor","DragTileService","tpl","$watch","newVal","watch","debounce","getContainerWidth","availableColumns","getAvailableColumns","availableWidth","tileGroups","setAvailableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","$postLink","$container","prevVal","changedGroupIndex","addGroup","removeGroups","newTiles","slice","groupWidgetDiff","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","draggableCtrl","onKyepressTitleInput","keyCode","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","$new","tilesContext","undefined","indexes","container","tiles","remove","gIndex","child","element","scope","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","addTile","newTile","append","getCompiledTemplate","appendTo","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","mobileBreakpoint","floor","getActiveGroupAndTile","active","foundTile","getTileByNode","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","belowElement","getTileByCoordinates","pageX","pageY","getTileIndex","belowElemIndex","draggedTileIndex","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","isSameDropzone","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","draggable","autoScroll","onmove","dropzone","ondropdeactivate","ondragleave","on","interact","trigger","DragComponent","11","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","zIndex","after","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","DraggableTileLink","$elem","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","restrict","directive","13","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","rightCornerCell","basicCol","getBasicRow","leftCornerCell","getCell","gridCopy","basicRow","rowShift","prevTileSize","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","generateCells","newCellCount","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","newGrid","widgetTemplateService","_$compile","_$templateRequest","strictCompile","result","interpolated","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","$parse","link","attrs","pipImageLoad","$event","ImageLoad","15","__proto__","d","b","p","hasOwnProperty","__","extendStatics","create","_super","pipWidgetMenu","pipWidgetConfigDialogService","_configDialog","union","onConfigClick","date","Date","color","dialogClass","extensionUrl","changeSize","CalendarWidgetController","WidgetMenuService_1","MenuWidgetService","EventWidgetController","opacity","drawImage","is","onImageLoad","_oldOpacity","text","onOpacitytest","pipEventWidget","18","noop","action","callAction","actionName","MenuWidgetProvider","NotesWidgetController","PictureSliderController","animationType","animationInterval","_widgetUtility","pipPictureSliderWidget","pipLocationEditDialog","showPosition","_locationDialog","openLocationEditDialog","location","position","reDrawPosition","PositionWidgetController","locationName","hideColors","locationPos","newPosition","locatioName","pipPositionWidget","StatisticsWidgetController","reset","chartSize","SMALL_CHART","setChartSize","BIG_CHART","pipStatisticsWidget","../menu/WidgetMenuService","24","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\nimport './draggable/Draggable';\n\n(function () {\n  'use strict';\n\n  angular.module('pipDashboard', [\n    'pipWidget', \n    'pipDragged', \n    'pipWidgetConfigDialog', \n    'pipAddDashboardComponentDialog',\n    'pipDashboard.Templates',\n\n    // External pip modules\n    'pipLayout',\n    'pipLocations',\n    'pipDateTime',\n    'pipCharts',\n    'pipTranslate',\n    'pipControls'\n  ]);\n  \n})();\n\nimport './utility/WidgetTemplateUtility';\nimport './dialogs/widget_config/ConfigDialogController';\nimport './dialogs/add_component/AddComponentDialogController';\nimport './DashboardController';\nimport './DashboardComponent';\n","(function () {\n  'use strict';\n\n  const pipDashboard: ng.IComponentOptions = {\n    bindings: {\n      gridOptions: '=pipGridOptions',\n      groupAdditionalActions: '=pipGroupActions',\n      groupedWidgets: '=pipGroups'\n    },\n    controller: 'pipDashboardCtrl',\n    controllerAs: 'dashboardCtrl',\n    templateUrl: 'Dashboard.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipDashboard', pipDashboard);\n})();","'use strict';\n\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\nimport { IAddComponentDialogService, IAddComponentDialogprovider } from './dialogs/add_component/AddComponentProvider'\n\nfunction setTranslations($injector: ng.auto.IInjectorService) {\n  const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n  if (pipTranslate) {\n    (<any>pipTranslate).setTranslations('en', {\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\n    });\n    (<any>pipTranslate).setTranslations('ru', {\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\n    });\n  }\n}\n\nfunction configureAvailableWidgets(pipAddComponentDialogProvider: IAddComponentDialogprovider) {\n  pipAddComponentDialogProvider.configWidgetList([\n    [{\n        title: 'Event',\n        icon: 'document',\n        name: 'event',\n        amount: 0\n      },\n      {\n        title: 'Position',\n        icon: 'location',\n        name: 'position',\n        amount: 0\n      }\n    ],\n    [{\n        title: 'Calendar',\n        icon: 'date',\n        name: 'calendar',\n        amount: 0\n      },\n      {\n        title: 'Sticky Notes',\n        icon: 'note-take',\n        name: 'notes',\n        amount: 0\n      },\n      {\n        title: 'Statistics',\n        icon: 'tr-statistics',\n        name: 'statistics',\n        amount: 0\n      }\n    ]\n  ]);\n}\n\nclass draggableOptions {\n  tileWidth: number;\n  tileHeight: number;\n  gutter: number;\n  inline: boolean;\n}\n\nconst DEFAULT_GRID_OPTIONS: draggableOptions = {\n  tileWidth: 150, // 'px'\n  tileHeight: 150, // 'px'\n  gutter: 10, // 'px'\n  inline: false\n};\n\nclass DashboardController implements ng.IController {\n  private defaultGroupMenuActions: any = [{\n      title: 'Add Component',\n      callback: (groupIndex) => {\n        this.addComponent(groupIndex);\n      }\n    },\n    {\n      title: 'Remove',\n      callback: (groupIndex) => {\n        this.removeGroup(groupIndex);\n      }\n    },\n    {\n      title: 'Configurate',\n      callback: (groupIndex) => {\n        console.log('configurate group with index:', groupIndex);\n      }\n    }\n  ];\n  private _$scope: angular.IScope;\n  private _$rootScope: angular.IRootScopeService;\n  private _$attrs: any;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _$interpolate: angular.IInterpolateService;\n  private _pipAddComponentDialog: IAddComponentDialogService;\n  private _pipWidgetTemplate: IWidgetTemplateService;\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\n    '</pip-{{ type }}-widget>';\n\n  public groupedWidgets: any;\n  public draggableGridOptions: draggableOptions;\n  public widgetsTemplates: any;\n  public groupMenuActions: any = this.defaultGroupMenuActions;\n  public widgetsContext: any;\n\n  constructor(\n    $scope: angular.IScope,\n    $rootScope: angular.IRootScopeService,\n    $attrs: any,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    $interpolate: angular.IInterpolateService,\n    pipAddComponentDialog: IAddComponentDialogService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    this._$scope = $scope;\n    this._$rootScope = $rootScope;\n    this._$attrs = $attrs;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._$interpolate = $interpolate;\n    this._pipAddComponentDialog = pipAddComponentDialog;\n    this._pipWidgetTemplate = pipWidgetTemplate;\n\n    // Add class to style scroll bar\n    $element.addClass('pip-scroll');\n\n    // Set tiles grid options\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\n\n    // Switch inline displaying\n    if (this.draggableGridOptions.inline === true) {\n      $element.addClass('inline-grid');\n    }\n    // Extend group's menu actions\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\n\n    // Compile widgets\n    this.widgetsContext = $scope;\n    this.compileWidgets();\n\n    this._$timeout(() => {\n      this._$element.addClass('visible');\n    }, 700);\n  }\n\n  private compileWidgets() {\n    _.each(this.groupedWidgets, (group, groupIndex) => {\n        group.removedWidgets = group.removedWidgets || [],\n        group.source = group.source.map((widget, index) => {\n          // Establish default props\n          widget.size = widget.size || {\n            colSpan: 1,\n            rowSpan: 1\n          };\n          widget.index = index;\n          widget.groupIndex = groupIndex;\n          widget.menu = widget.menu || {};\n          angular.extend(widget.menu, [{\n            title: 'Remove',\n            click: (item, params, object) => {\n              this.removeWidget(item, params, object);\n            }\n          }]);\n\n          return {\n            opts: widget,\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\n          };\n        })\n    });\n  }\n\n  public addComponent(groupIndex) {\n    this._pipAddComponentDialog\n      .show(this.groupedWidgets, groupIndex)\n      .then((data) => {\n        var activeGroup;\n\n        if (!data) {\n          return;\n        }\n\n        if (data.groupIndex !== -1) {\n          activeGroup = this.groupedWidgets[data.groupIndex];\n        } else {\n          activeGroup = {\n            title: 'New group',\n            source: []\n          };\n        }\n\n        this.addWidgets(activeGroup.source, data.widgets);\n\n        if (data.groupIndex === -1) {\n          this.groupedWidgets.push(activeGroup);\n        }\n\n        this.compileWidgets();\n      });\n  };\n\n  public removeGroup = (groupIndex) => {\n    console.log('removeGroup', groupIndex);\n    this.groupedWidgets.splice(groupIndex, 1);\n  }\n\n  private addWidgets(group, widgets) {\n    widgets.forEach((widgetGroup) => {\n      widgetGroup.forEach((widget) => {\n        if (widget.amount) {\n          Array.apply(null, Array(widget.amount)).forEach(() => {\n            group.push({\n              type: widget.name\n            });\n          });\n        }\n      });\n    });\n  }\n\n  private removeWidget(item, params, object) {\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\n    this._$timeout(() => {\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    });\n  }\n\n}\n\nangular\n  .module('pipDashboard')\n  .config(configureAvailableWidgets)\n  .config(setTranslations)\n  .controller('pipDashboardCtrl', DashboardController);","export class widget {\n    title: string;\n    icon: string;\n    name: string;\n    amount: number;\n}\n\nexport class AddComponentDialogController implements ng.IController {\n    public defaultWidgets: [widget[]];\n    public groups: any;\n    public totalWidgets: number = 0;\n\n    constructor(\n        groups, // Later may be group type\n        public activeGroupIndex: number,\n        widgetList: [widget[]],\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\n        this.defaultWidgets = _.cloneDeep(widgetList);\n        this.groups = _.map(groups, function (group) {\n            return group['title'];\n        });\n    }\n\n    public add() {\n        this.$mdDialog.hide({\n            groupIndex: this.activeGroupIndex,\n            widgets: this.defaultWidgets\n        });\n    };\n\n    public cancel() {\n        this.$mdDialog.cancel();\n    };\n\n    public encrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\n        widget.amount++;\n        this.totalWidgets++;\n    };\n\n    public decrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\n        this.totalWidgets = this.totalWidgets ? this.totalWidgets - 1 : 0;\n    };\n}\n\nangular\n    .module('pipAddDashboardComponentDialog', ['ngMaterial']);\n\nimport './AddComponentProvider';","import {\n  widget,\n  AddComponentDialogController\n} from './AddComponentDialogController';\n\nexport interface IAddComponentDialogService {\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\n}\n\nexport interface IAddComponentDialogprovider {\n  configWidgetList(list: [widget[]]): void;\n}\n\n(function () {\n  'use strict';\n\n  function setTranslations($injector: ng.auto.IInjectorService) {\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n    if (pipTranslate) {\n      (<any>pipTranslate).setTranslations('en', {\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Add component',\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Create new group'\n      });\n      (<any>pipTranslate).setTranslations('ru', {\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Добавить компонент',\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\n      });\n    }\n  }\n\n  class AddComponentDialogService implements IAddComponentDialogService {\n\n    public constructor(\n      private widgetList: [widget[]],\n      private $mdDialog: angular.material.IDialogService\n    ) {}\n\n    public show(groups, activeGroupIndex) {\n      return this.$mdDialog\n        .show({\n          templateUrl: 'dialogs/add_component/AddComponent.html',\n          bindToController: true,\n          controller: AddComponentDialogController,\n          controllerAs: 'dialogCtrl',\n          clickOutsideToClose: true,\n          resolve: {\n            groups: () => {\n              return groups;\n            },\n            activeGroupIndex: () => {\n              return activeGroupIndex;\n            },\n            widgetList: () => {\n              return (<any>this.widgetList);\n            }\n          }\n        });\n    };\n  }\n\n  class AddComponentDialogProvider implements IAddComponentDialogprovider {\n    private _service: AddComponentDialogService;\n    private _widgetList: [widget[]] = null;\n\n    constructor() {}\n\n    public configWidgetList = function (list: [widget[]]) {\n      this._widgetList = list;\n    };\n\n    public $get($mdDialog: angular.material.IDialogService) {\n      \"ngInject\";\n\n      if (this._service == null)\n        this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\n\n      return this._service;\n    }\n  }\n\n  angular\n    .module('pipDashboard')\n    .config(setTranslations)\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\n})();","\nclass TileColors {\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\n}\n\nclass TileSizes {\n    static all: any = [{\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL',\n            id: '11'\n        },\n        {\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE',\n            id: '21'\n        },\n        {\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE',\n            id: '22'\n        }\n    ];\n}\n\nexport class WidgetConfigDialogController {\n    public colors: string[] = TileColors.all;\n    public sizes: any = TileSizes.all;\n    public sizeId: string = TileSizes.all[0].id;\n    public onCancel: Function;\n\n    constructor(\n        public params,\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        \"ngInject\";\n\n        angular.extend(this, this.params);\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\n\n        this.onCancel = () => {\n            this.$mdDialog.cancel();\n        }\n    }\n\n    public onApply(updatedData) {\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\n        this.$mdDialog.hide(updatedData);\n    }\n}\n\nangular\n    .module('pipWidgetConfigDialog', ['ngMaterial']);\n\nimport './ConfigDialogService';\nimport './ConfigDialogExtendComponent';","\n(function() {\n    'use strict';\n    \n    interface IWidgetConfigExtendComponentBindings {\n        [key: string]: any;\n\n        pipExtensionUrl: any;\n        pipDialogScope: any;\n        pipApply: any;\n    }\n\n    const WidgetConfigExtendComponentBindings: IWidgetConfigExtendComponentBindings = {\n        pipExtensionUrl: '<',\n        pipDialogScope: '<',\n        pipApply: '&'\n    }\n\n    class WidgetConfigExtendComponentChanges implements ng.IOnChangesObject, IWidgetConfigExtendComponentBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        pipExtensionUrl: ng.IChangesObject<string>;\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\n\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\n    }\n\n    interface IWidgetConfigExtendComponentAttributes extends ng.IAttributes {\n        pipExtensionUrl: string\n    }\n\n    class WidgetConfigExtendComponentController implements IWidgetConfigExtendComponentBindings {\n        public pipExtensionUrl: string;\n        public pipDialogScope: ng.IScope;\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\n\n        constructor(\n            private $templateRequest: angular.ITemplateRequestService,\n            private $compile: angular.ICompileService,\n            private $scope: angular.IScope, \n            private $element: JQuery, \n            private $attrs: IWidgetConfigExtendComponentAttributes\n        ) { }\n\n        public $onChanges(changes: WidgetConfigExtendComponentChanges) {\n            if (changes.pipDialogScope) {\n                angular.extend(this, changes.pipDialogScope.currentValue);\n            }\n            if (changes.pipExtensionUrl) {\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\n                });\n            }\n        }\n\n        public onApply() {\n            this.pipApply({updatedData: this});\n        }\n    }\n\n    const pipWidgetConfigComponent: ng.IComponentOptions = {\n        templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\n        controller: WidgetConfigExtendComponentController,\n        bindings: WidgetConfigExtendComponentBindings\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .component('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\n})();","import { WidgetConfigDialogController } from './ConfigDialogController';\n\nexport interface IWidgetConfigService {\n    show(params: any, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\n}\n\n(function () {\n    'use strict';\n\n    function setTranslations($injector: ng.auto.IInjectorService) {\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Edit tile',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Small',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Large'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Изменить виджет',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\n            });\n        }\n    }\n\n    class WidgetConfigDialogService {\n        public constructor(\n            public $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params, successCallback ? : (key) => void, cancelCallback ? : () => void) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\n                    controller: WidgetConfigDialogController,\n                    controllerAs: 'vm',\n                    locals: {\n                        params: params\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((key) => {\n                    if (successCallback) {\n                        successCallback(key);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .config(setTranslations)\n        .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\n\n})();","angular.module('pipDragged', []);\n\nimport './DraggableTileService';\nimport './DraggableComponent';\nimport './draggable_group/DraggableTilesGroupService'\nimport './draggable_group/DraggableTilesGroupDirective'","declare var interact;\n\nimport {\n  DragTileService,\n  IDragTileService,\n  IDragTileConstructor\n} from './DraggableTileService';\nimport {\n  TilesGridService,\n  ITilesGridService,\n  ITilesGridConstructor\n} from './draggable_group/DraggableTilesGroupService';\n\nexport const DEFAULT_TILE_WIDTH: number = 150;\nexport const DEFAULT_TILE_HEIGHT: number = 150;\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\n\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\nconst DEFAULT_OPTIONS = {\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\n  gutter: 20, // 'px'\n  container: 'pip-draggable-grid:first-of-type',\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\n  activeDropzoneClass: 'dropzone-active',\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\n};\n\n{\n  interface IDraggableControllerScope extends ng.IScope {\n    draggableCtrl: any;\n    $container: JQuery;\n  }\n\n  interface ITileScope extends ng.IScope {\n    index: number | string;\n    groupIndex: number | string;\n  }\n\n  class DraggableController implements ng.IComponentController {\n    public opts: any;\n    public groups: any;\n    public sourceDropZoneElem: any = null;\n    public isSameDropzone: boolean = true;\n    public tileGroups: any = null;\n    public availableWidth: number;\n    public availableColumns: number;\n    public groupsContainers: any;\n    public container: any;\n    public activeDraggedGroup: any;\n    public draggedTile: any;\n    public containerOffset: any;\n\n    constructor(\n      private $scope: IDraggableControllerScope,\n      private $rootScope: angular.IRootScopeService,\n      private $compile: angular.ICompileService,\n      private $timeout: angular.ITimeoutService,\n      private $element: JQuery,\n      pipDragTile: IDragTileService,\n      pipTilesGrid: ITilesGridService,\n      pipMedia: pip.layouts.IMediaService\n    ) {\n      this.opts = _.merge({\n        mobileBreakpoint: pipMedia.breakpoints.xs\n      }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\n\n      this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\n        return {\n          title: group.title,\n          editingName: false,\n          index: groupIndex,\n          source: group.source.map((tile) => {\n            const tileScope = this.createTileScope(tile);\n\n            return IDragTileConstructor(DragTileService, {\n              tpl: $compile(tile.template)(tileScope),\n              options: tile.opts,\n              size: tile.opts.size\n            });\n          })\n        };\n      });\n\n      // Add templates watcher\n      $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\n        this.watch(newVal);\n      }, true);\n\n      // Initialize data\n      this.initialize();\n\n      // Resize handler TODO: replace by pip resize watchers\n      $(window).on('resize', _.debounce(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n\n        this.tileGroups.forEach((group) => {\n          group\n            .setAvailableColumns(this.availableColumns)\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n            .setTilesDimensions()\n            .calcContainerHeight();\n        });\n      }, 50));\n    }\n\n    // Post link function\n    public $postLink() {\n      this.$scope.$container = this.$element;\n    }\n\n    // Watch handler\n    private watch(newVal) {\n      const prevVal = this.groups;\n      let changedGroupIndex = null;\n\n      if (newVal.length > prevVal.length) {\n        this.addGroup(newVal[newVal.length - 1]);\n\n        return;\n      }\n\n      if (newVal.length < prevVal.length) {\n        this.removeGroups(newVal);\n\n        return;\n      }\n\n      for (let i = 0; i < newVal.length; i++) {\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\n          changedGroupIndex = i;\n\n          if (groupWidgetDiff < 0) {\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\n\n            _.each(newTiles, (tile) => {\n              console.log('tile', tile);\n            });\n\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\n\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          } else {\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\n            this.updateTilesOptions(newVal);\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          }\n\n          return;\n        }\n      }\n\n      if (newVal && this.tileGroups) {\n        this.updateTilesOptions(newVal);\n        this.$timeout(() => {\n          this.updateTilesGroups();\n        });\n      }\n    }\n\n    // Inline edit group handlers\n    public onTitleClick(group, event) {\n      if (!group.editingName) {\n        group.oldTitle = _.clone(group.title);\n        group.editingName = true;\n        this.$timeout(() => {\n          $(event.currentTarget.children[0]).focus();\n        });\n      }\n    }\n\n    public cancelEditing(group) {\n      group.title = group.oldTitle;\n    }\n\n    public onBlurTitleInput(group) {\n      this.$timeout(() => {\n        group.editingName = false;\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\n        // Update title in outer scope\n        this.$scope.draggableCtrl.tilesTemplates[group.index].title = group.title;\n      }, 100);\n    }\n\n    public onKyepressTitleInput(group, event) {\n      if (event.keyCode === 13) {\n        this.onBlurTitleInput(group);\n      }\n    }\n\n    // Update outer scope functions\n    private updateTilesTemplates(updateType: string, source ? : any) {\n      switch (updateType) {\n        case 'addGroup':\n          if (this.groups.length !== this.$scope.draggableCtrl.tilesTemplates.length) {\n            this.$scope.draggableCtrl.tilesTemplates.push(source);\n          }\n          break;\n        case 'moveTile':\n          const {\n            fromIndex,\n            toIndex,\n            tileOptions,\n            fromTileIndex\n          } = {\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\n            toIndex: source.to.elem.attributes['data-group-id'].value,\n            tileOptions: source.tile.opts.options,\n            fromTileIndex: source.tile.opts.options.index\n          }\n          this.$scope.draggableCtrl.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\n          this.$scope.draggableCtrl.tilesTemplates[toIndex].source.push({\n            opts: tileOptions\n          });\n\n          this.reIndexTiles(source.from.elem);\n          this.reIndexTiles(source.to.elem);\n          break;\n      }\n    }\n\n    // Manage tiles functions\n    private createTileScope(tile: any): ITileScope {\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.$scope.draggableCtrl.tilesContext);\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n      return tileScope;\n    }\n\n    private removeTiles(group, indexes, container) {\n      const tiles = $(container).find('.pip-draggable-tile');\n\n      _.each(indexes, (index) => {\n        group.tiles.splice(index, 1);\n        tiles[index].remove();\n      });\n\n      this.reIndexTiles(container);\n    }\n\n    private reIndexTiles(container, gIndex ? ) {\n      const tiles = $(container).find('.pip-draggable-tile'),\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\n\n      _.each(tiles, (tile, index) => {\n        const child = $(tile).children()[0];\n        angular.element(child).scope()['index'] = index;\n        angular.element(child).scope()['groupIndex'] = groupIndex;\n      });\n    }\n\n    private removeGroups(newGroups) {\n      const removeIndexes = [],\n        remain = [],\n        containers = [];\n\n\n      _.each(this.groups, (group, index) => {\n        if (_.findIndex(newGroups, (g) => {\n            return g['title'] === group.title\n          }) < 0) {\n          removeIndexes.push(index);\n        } else {\n          remain.push(index);\n        }\n      });\n\n      _.each(removeIndexes.reverse(), (index) => {\n        this.groups.splice(index, 1);\n        this.tileGroups.splice(index, 1);\n      });\n\n      _.each(remain, (index) => {\n        containers.push(this.groupsContainers[index]);\n      });\n\n      this.groupsContainers = containers;\n\n      _.each(this.groupsContainers, (container, index) => {\n        this.reIndexTiles(container, index);\n      });\n    }\n\n    private addGroup(sourceGroup) {\n      const group = {\n        title: sourceGroup.title,\n        source: sourceGroup.source.map((tile) => {\n          const tileScope = this.createTileScope(tile);\n\n          return IDragTileConstructor(DragTileService, {\n            tpl: this.$compile(tile.template)(tileScope),\n            options: tile.opts,\n            size: tile.opts.size\n          });\n        })\n      };\n\n      this.groups.push(group);\n      if (!this.$scope.$$phase) this.$scope.$apply();\n\n      this.$timeout(() => {\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups.push(\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight()\n        );\n      });\n\n      this.updateTilesTemplates('addGroup', sourceGroup);\n    }\n\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\n      newTiles.forEach((tile) => {\n        const tileScope = this.createTileScope(tile);\n\n        const newTile = IDragTileConstructor(DragTileService, {\n          tpl: this.$compile(tile.template)(tileScope),\n          options: tile.opts,\n          size: tile.opts.size\n        });\n\n        group.addTile(newTile);\n\n        $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(newTile.getCompiledTemplate())\n          .appendTo(groupContainer);\n      });\n    }\n\n    private updateTilesOptions(optionsGroup) {\n      optionsGroup.forEach((optionGroup) => {\n        optionGroup.source.forEach((tileOptions) => {\n          this.tileGroups.forEach((group) => {\n            group.updateTileOptions(tileOptions.opts);\n          });\n        });\n      });\n    }\n\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\n      return tileGroups.map((group, index) => {\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }\n\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\n      this.tileGroups.forEach((group) => {\n        if (!onlyPosition) {\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\n        }\n\n        group\n          .setTilesDimensions(onlyPosition, draggedTile)\n          .calcContainerHeight();\n      });\n    }\n\n    private getContainerWidth(): any {\n      const container = this.$scope.$container || $('body');\n      return container.width();\n    }\n\n    private getAvailableColumns(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\n    }\n\n    private getActiveGroupAndTile(elem): any {\n      const active = {};\n\n      this.tileGroups.forEach((group) => {\n        const foundTile = group.getTileByNode(elem);\n\n        if (foundTile) {\n          active['group'] = group;\n          active['tile'] = foundTile;\n          return;\n        }\n      });\n\n      return active;\n    }\n\n    private getSingleTileWidthForMobile(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\n    }\n\n    private onDragStartListener(event) {\n      const activeEntities = this.getActiveGroupAndTile(event.target);\n\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\n      this.draggedTile = activeEntities['tile'];\n      this.activeDraggedGroup = activeEntities['group'];\n\n      this.$element.addClass('drag-transfer');\n\n      this.draggedTile.startDrag();\n    }\n\n    private onDragMoveListener(event) {\n      const target = event.target;\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\n\n      this.containerOffset = this.getContainerOffset();\n\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\n      target.style.top = y + 'px';\n\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\n        left: event.pageX - this.containerOffset.left,\n        top: event.pageY - this.containerOffset.top\n      }, this.draggedTile);\n\n      if (belowElement) {\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\n\n        if ((draggedTileIndex + 1) === belowElemIndex) {\n          return;\n        }\n\n        this.activeDraggedGroup\n          .swapTiles(this.draggedTile, belowElement)\n          .setTilesDimensions(true, this.draggedTile);\n\n        this.$timeout(() => {\n          this.setGroupContainersHeight();\n        }, 0);\n      }\n    }\n\n    private onDragEndListener() {\n      this.draggedTile.stopDrag(this.isSameDropzone);\n\n      this.$element.removeClass('drag-transfer');\n      this.activeDraggedGroup = null;\n      this.draggedTile = null;\n    }\n\n    private getContainerOffset() {\n      const containerRect = this.container.getBoundingClientRect();\n\n      return {\n        left: containerRect.left,\n        top: containerRect.top\n      };\n    }\n\n    private setGroupContainersHeight() {\n      this.tileGroups.forEach((tileGroup) => {\n        tileGroup.calcContainerHeight();\n      });\n    }\n\n    private moveTile(from, to, tile) {\n      let elem;\n      const movedTile = from.removeTile(tile);\n      const tileScope = this.createTileScope(tile);\n\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\n        .find(movedTile.getElem())\n        .remove();\n\n      if (to !== null) {\n        to.addTile(movedTile);\n\n        elem = this.$compile(movedTile.getElem())(tileScope);\n\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\n          .append(elem);\n\n        this.$timeout(to.setTilesDimensions.bind(to, true));\n      }\n\n      this.updateTilesTemplates('moveTile', {\n        from: from,\n        to: to,\n        tile: movedTile\n      });\n    }\n\n    private onDropListener(event) {\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\n\n      if (this.activeDraggedGroup !== droppedGroup) {\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\n      }\n\n      this.updateTilesGroups(true);\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropToFictGroupListener(event) {\n      const from = this.activeDraggedGroup;\n      const tile = this.draggedTile;\n\n      this.addGroup({\n        title: 'New group',\n        source: []\n      });\n      this.$timeout(() => {\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\n        this.updateTilesGroups(true);\n      });\n\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropEnterListener(event) {\n      if (!this.sourceDropZoneElem) {\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\n      }\n\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\n        $('body').css('cursor', 'copy');\n        this.isSameDropzone = false;\n      } else {\n        $('body').css('cursor', '');\n        this.isSameDropzone = true;\n      }\n    }\n\n    private onDropDeactivateListener(event) {\n      if (this.sourceDropZoneElem !== event.target) {\n        event.target.classList.remove(this.opts.activeDropzoneClass);\n        $('body').css('cursor', '');\n      }\n    }\n\n    private onDropLeaveListener(event) {\n      event.target.classList.remove(this.opts.activeDropzoneClass);\n    }\n\n    private initialize() {\n      this.$timeout(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\n\n        interact('.pip-draggable-tile')\n          .draggable({\n            // enable autoScroll\n            autoScroll: true,\n            onstart: (event) => {\n              this.onDragStartListener(event)\n            },\n            onmove: (event) => {\n              this.onDragMoveListener(event)\n            },\n            onend: (event) => {\n              this.onDragEndListener()\n            }\n          });\n\n        interact('.pip-draggable-group.fict-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropToFictGroupListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          })\n\n        interact('.pip-draggable-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          });\n\n        this.$scope['$container']\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\n            interact('.pip-draggable-tile').draggable(false);\n            $(this).trigger('click');\n          })\n          .on('mouseup touchend', () => {\n            interact('.pip-draggable-tile').draggable(true);\n          });\n      }, 0);\n    }\n\n  }\n\n  const DragComponent: ng.IComponentOptions = {\n    bindings: {\n      tilesTemplates: '=pipTilesTemplates',\n      tilesContext: '=pipTilesContext',\n      options: '=pipDraggableGrid',\n      groupMenuActions: '=pipGroupMenuActions'\n    },\n    templateUrl: 'draggable/Draggable.html',\n    controllerAs: 'draggableCtrl',\n    controller: DraggableController\n  }\n\n  angular.module('pipDragged')\n    .component('pipDraggableGrid', DragComponent);\n}","'use strict';\n\nexport interface DragTileConstructor {\n  new (options: any);\n}\n\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\n  return new constructor(options);\n}\n\nexport interface IDragTileService {\n  tpl: any;\n  opts: any;\n  size: any;\n  elem: any;\n  preview: any;\n  getSize(): any;\n  setSize(width, height): any;\n  setPosition(left, top): any;\n  getCompiledTemplate(): any;\n  updateElem(parent): any;\n  getElem(): any;\n  startDrag(): any;\n  stopDrag(isAnimate): any;\n  setPreviewPosition(coords): void;\n  getOptions(): any;\n  setOptions(options): any;\n}\n\nlet DEFAULT_TILE_SIZE = {\n  colSpan: 1,\n  rowSpan: 1\n};\n\nexport class DragTileService implements IDragTileService {\n  public tpl: any;\n  public opts: any;\n  public size: any;\n  public elem: any;\n  public preview: any;\n\n  constructor (options: any) {\n    this.tpl = options.tpl.get(0);\n    this.opts = options;\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\n    this.elem = null;\n  }\n\n  public getSize(): any {\n    return this.size;\n  }\n\n  public setSize(width, height): any {\n    this.size.width = width;\n    this.size.height = height;\n\n    if (this.elem) {\n      this.elem.css({\n        width: width,\n        height: height\n      });\n    }\n\n    return this;\n  }\n\n  public setPosition(left, top): any {\n    this.size.left = left;\n    this.size.top = top;\n\n    if (this.elem) {\n      this.elem.css({\n        left: left,\n        top: top\n      });\n    }\n\n    return this;\n  }\n\n  public getCompiledTemplate(): any {\n    return this.tpl;\n  };\n\n  public updateElem(parent): any {\n    this.elem = $(this.tpl).parent(parent);\n\n    return this;\n  };\n\n  public getElem(): any {\n    return this.elem.get(0);\n  };\n\n  public startDrag(): any {\n    this.preview = $('<div>')\n      .addClass('pip-dragged-preview')\n      .css({\n        position: 'absolute',\n        left: this.elem.css('left'),\n        top: this.elem.css('top'),\n        width: this.elem.css('width'),\n        height: this.elem.css('height')\n      });\n\n    this.elem\n      .addClass('no-animation')\n      .css({\n        zIndex: '9999'\n      })\n      .after(this.preview);\n\n    return this;\n  };\n\n  public stopDrag(isAnimate): any {\n    let self = this;\n\n    if (isAnimate) {\n      this.elem\n        .removeClass('no-animation')\n        .css({\n          left: this.preview.css('left'),\n          top: this.preview.css('top')\n        })\n        .on('transitionend', onTransitionEnd);\n    } else {\n      self.elem\n        .css({\n          left: self.preview.css('left'),\n          top: self.preview.css('top'),\n          zIndex: ''\n        })\n        .removeClass('no-animation');\n\n      self.preview.remove();\n      self.preview = null;\n    }\n\n    return this;\n\n    function onTransitionEnd() {\n      if (self.preview) {\n        self.preview.remove();\n        self.preview = null;\n      }\n\n      self.elem\n        .css('zIndex', '')\n        .off('transitionend', onTransitionEnd);\n    }\n  };\n\n  public setPreviewPosition(coords) {\n    this.preview.css(coords);\n  };\n\n  public getOptions(): any {\n    return this.opts.options;\n  };\n\n  public setOptions(options): any {\n    _.merge(this.opts.options, options);\n    _.merge(this.size, options.size);\n\n    return this;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipDragTile', function () {\n    return function (options) {\n      let newTile = new DragTileService(options);\n\n      return newTile;\n    }\n  });","{\n  interface DraggableTileAttributes extends ng.IAttributes {\n    pipDraggableTiles: any;\n  }\n\n  function DraggableTileLink(\n    $scope: ng.IScope,\n    $elem: JQuery,\n    $attr: DraggableTileAttributes\n  ) {\n    const docFrag = document.createDocumentFragment(),\n      group = $scope.$eval($attr.pipDraggableTiles);\n\n    group.forEach(function (tile) {\n      const tpl = wrapComponent(tile.getCompiledTemplate());\n      docFrag.appendChild(tpl);\n    });\n\n    $elem.append(docFrag);\n\n    function wrapComponent(elem) {\n      return $('<div>')\n        .addClass('pip-draggable-tile')\n        .append(elem)\n        .get(0);\n    }\n  }\n\n  function DraggableTile() {\n    return {\n      restrict: 'A',\n      link: DraggableTileLink\n    };\n  }\n\n  angular\n    .module('pipDragged')\n    .directive('pipDraggableTiles', DraggableTile);\n\n}","export interface TilesGridConstructor {\n  new(tiles, options, columns, elem);\n}\n\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\n  return new constructor(tiles, options, columns, elem);\n}\n\nexport interface ITilesGridService {\n  tiles: any;\n  opts: any;\n  columns: any;\n  elem: any;\n  gridCells: any;\n  inline: boolean;\n  isMobileLayout: boolean;\n\n  addTile(tile): any;\n  getCellByPosition(row, col): any;\n  getCells(prevCell, rowSpan, colSpan): any;\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\n  getCell(src, basicRow, basicCol, columns): any;\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\n  getBasicRow(prevCell): any;\n  isCellFree(row, col): any;\n  getCellIndex(srcCell): any;\n  reserveCells(start, end, elem): void;\n  clearElements(): void;\n  setAvailableColumns(columns): any;\n  generateGrid(singleTileWidth ? ): any;\n  setTilesDimensions(onlyPosition, draggedTile): any;\n  calcContainerHeight(): any;\n  getTileByNode(node): any;\n  getTileByCoordinates(coords, draggedTile): any;\n  getTileIndex(tile): any;\n  swapTiles(movedTile, beforeTile): any;\n  removeTile(removeTile): any;\n  updateTileOptions(opts): any;\n}\n\nconst MOBILE_LAYOUT_COLUMNS = 2;\n\nexport class TilesGridService implements ITilesGridService {\n  public tiles: any;\n  public opts: any;\n  public columns: any;\n  public elem: any;\n  public gridCells: any = [];\n  public inline: boolean = false;\n  public isMobileLayout: boolean;\n\n  constructor(tiles, options, columns, elem) {\n    this.tiles = tiles;\n    this.opts = options;\n    this.columns = columns || 0; // available columns in a row\n    this.elem = elem;\n    this.gridCells = [];\n    this.inline = options.inline || false;\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n  }\n\n  public addTile(tile): any {\n    this.tiles.push(tile);\n    if (this.tiles.length === 1) {\n      this.generateGrid();\n    }\n\n    return this;\n  };\n\n  public getCellByPosition(row, col): any {\n    return this.gridCells[row][col];\n  };\n\n  public getCells(prevCell, rowSpan, colSpan): any {\n    if (this.isMobileLayout) {\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\n    } else {\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\n    }\n  };\n\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicCol = prevCell && prevCell.col || 0;\n    const basicRow = this.getBasicRow(prevCell);\n\n    // Small tile\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    // Medium tile\n    if (colSpan === 2 && rowSpan === 1) {\n      const prevTileSize = prevCell && prevCell.elem.size || null;\n\n      if (!prevTileSize) {\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\n        if (this.columns - basicCol - 2 > 0) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\n        if (prevCell.row % 2 === 0) {\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\n        } else {\n          if (this.columns - basicCol - 3 >= 0) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n          }\n        }\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\n        if (this.columns - basicCol - 3 >= 0) {\n          if (this.isCellFree(basicRow, basicCol + 1)) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\n          }\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      }\n    }\n\n    // Big tile\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\n    } else if (rowSpan === 2 && colSpan === 2) {\n      if (this.columns - basicCol - 2 > 0) {\n        if (this.isCellFree(basicRow, basicCol + 1)) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\n        }\n      } else {\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\n      }\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getCell(src, basicRow, basicCol, columns): any {\n    let cell, col, row;\n\n    if (this.isMobileLayout) {\n      // mobile layout\n      for (col = basicCol; col < columns; col++) {\n        if (!src[basicRow][col].elem) {\n          cell = src[basicRow][col];\n          break;\n        }\n      }\n\n      return cell;\n    }\n\n    // desktop\n    for (col = basicCol; col < columns; col++) {\n      for (row = 0; row < 2; row++) {\n        if (!src[row + basicRow][col].elem) {\n          cell = src[row + basicRow][col];\n          break;\n        }\n      }\n\n      if (cell) {\n        return cell;\n      }\n    }\n  };\n\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicRow = this.getBasicRow(prevCell);\n    const basicCol = prevCell && prevCell.col || 0;\n\n\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    if (!prevCell) {\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\n    } else if (colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getBasicRow(prevCell): any {\n    let basicRow;\n\n    if (this.isMobileLayout) {\n      if (prevCell) {\n        basicRow = prevCell && prevCell.row || 0;\n      } else {\n        basicRow = 0;\n      }\n    } else {\n      if (prevCell) {\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\n      } else {\n        basicRow = 0;\n      }\n    }\n\n    return basicRow;\n  };\n\n  public isCellFree(row, col): any {\n    return !this.gridCells[row][col].elem;\n  };\n\n  public getCellIndex(srcCell): any {\n    const self = this;\n    let index;\n\n    this.gridCells.forEach((row, rowIndex) => {\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\n        return cell === srcCell;\n      });\n\n      if (index !== -1) {\n        return;\n      }\n    });\n\n    return index !== -1 ? index : 0;\n  };\n\n  public reserveCells(start, end, elem) {\n    this.gridCells.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.row >= start.row && cell.row <= end.row &&\n          cell.col >= start.col && cell.col <= end.col) {\n          cell.elem = elem;\n        }\n      });\n    });\n  };\n\n  public clearElements() {\n    this.gridCells.forEach((row) => {\n      row.forEach((tile) => {\n        tile.elem = null;\n      });\n    });\n  };\n\n  public setAvailableColumns(columns): any {\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n    this.columns = columns;\n\n    return this;\n  };\n\n  public generateGrid(singleTileWidth ? ): any {\n    const self = this,\n          tileWidth = singleTileWidth || this.opts.tileWidth,\n          offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\n    let   colsInRow = 0,\n          rows = 0,\n          gridInRow = [];\n\n    this.gridCells = [];\n\n    this.tiles.forEach((tile, index, srcTiles) => {\n      const tileSize = tile.getSize();\n\n      generateCells(tileSize.colSpan);\n\n      if (srcTiles.length === index + 1) {\n        if (colsInRow < self.columns) {\n          generateCells(self.columns - colsInRow);\n        }\n\n        // Generate more cells for extends tile size to big\n        if (self.tiles.length * 2 > self.gridCells.length) {\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\n            generateCells(self.columns);\n          });\n        }\n      }\n    });\n\n    function generateCells(newCellCount) {\n      Array.apply(null, Array(newCellCount)).forEach(() => {\n        if (self.columns < colsInRow + 1) {\n          rows++;\n          colsInRow = 0;\n\n          self.gridCells.push(gridInRow);\n          gridInRow = [];\n        }\n\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\n\n        // Describe grid cell size through block corners coordinates\n        gridInRow.push({\n          top: top,\n          left: left,\n          bottom: top + self.opts.tileHeight,\n          right: left + tileWidth,\n          row: rows,\n          col: colsInRow\n        });\n\n        colsInRow++;\n      });\n    }\n\n    return this;\n  };\n\n  public setTilesDimensions(onlyPosition, draggedTile): any {\n    const self = this;\n    let currIndex = 0;\n    let prevCell;\n\n    if (onlyPosition) {\n      self.clearElements();\n    }\n\n    this.tiles.forEach((tile) => {\n      const tileSize = tile.getSize();\n      let startCell;\n      let width;\n      let height;\n      let cells;\n\n      tile.updateElem('.pip-draggable-tile');\n      if (tileSize.colSpan === 1) {\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\n        } else {\n          startCell = self.getCells(prevCell, 1, 1).start;\n        }\n\n\n        if (!onlyPosition) {\n          width = startCell.right - startCell.left;\n          height = startCell.bottom - startCell.top;\n        }\n\n        prevCell = startCell;\n\n        self.reserveCells(startCell, startCell, tile);\n\n        currIndex++;\n      } else if (tileSize.colSpan === 2) {\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\n        startCell = cells.start;\n\n        if (!onlyPosition) {\n          width = cells.end.right - cells.start.left;\n          height = cells.end.bottom - cells.start.top;\n        }\n\n        prevCell = cells.end;\n\n        self.reserveCells(cells.start, cells.end, tile);\n\n        currIndex += 2;\n      }\n\n      // Render preview\n      // while tiles from group is dragged\n      if (draggedTile === tile) {\n        tile.setPreviewPosition({\n          left: startCell.left,\n          top: startCell.top\n        });\n\n        return;\n      }\n\n      if (!onlyPosition) {\n        tile.setSize(width, height);\n      }\n\n      tile.setPosition(startCell.left, startCell.top);\n    });\n\n    return this;\n  };\n\n  public calcContainerHeight(): any {\n    let maxHeightSize, maxWidthSize;\n\n    if (!this.tiles.length) {\n      return this;\n    }\n\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\n      const tileSize = tile['getSize']();\n      return tileSize.top + tileSize.height;\n    })['getSize']();\n\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\n\n    if (this.inline) {\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\n        const tileSize = tile['getSize']();\n        return tileSize.left + tileSize.width;\n      })['getSize']();\n\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\n    }\n\n    return this;\n  };\n\n  public getTileByNode(node): any {\n    const foundTile = this.tiles.filter((tile) => {\n      return node === tile.getElem();\n    });\n\n    return foundTile.length ? foundTile[0] : null;\n  };\n\n  public getTileByCoordinates(coords, draggedTile): any {\n    return this.tiles\n      .filter((tile) => {\n        const tileSize = tile.getSize();\n\n        return tile !== draggedTile &&\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\n      })[0] || null;\n  };\n\n  public getTileIndex(tile): any {\n    return _.findIndex(this.tiles, tile);\n  };\n\n  public swapTiles(movedTile, beforeTile): any {\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\n\n    this.tiles.splice(movedTileIndex, 1);\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\n\n    return this;\n  };\n\n  public removeTile(removeTile): any {\n    let droppedTile;\n\n    this.tiles.forEach((tile, index, tiles) => {\n      if (tile === removeTile) {\n        droppedTile = tiles.splice(index, 1)[0];\n        return false;\n      }\n    });\n\n    return droppedTile;\n  };\n\n  public updateTileOptions(opts): any {\n    const index = _.findIndex(this.tiles, (tile) => {\n      return tile['getOptions']() === opts;\n    });\n\n    if (index !== -1) {\n      this.tiles[index].setOptions(opts);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipTilesGrid', function () {\n    return function (tiles, options, columns, elem) {\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\n\n      return newGrid;\n    }\n  });","export interface IWidgetTemplateService {\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\n    setImageMarginCSS($element, image): void;\n} \n\n{\n    class widgetTemplateService implements IWidgetTemplateService {\n        private _$interpolate: angular.IInterpolateService;\n        private _$compile: angular.ICompileService;\n        private _$templateRequest: angular.ITemplateRequestService;\n\n        constructor(\n            $interpolate: angular.IInterpolateService,\n            $compile: angular.ICompileService,\n            $templateRequest: angular.ITemplateRequestService\n        ) {\n            this._$interpolate = $interpolate;\n            this._$compile = $compile;\n            this._$templateRequest = $templateRequest;\n        }\n\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\n            const {\n                template,\n                templateUrl,\n                type\n            } = source;\n            let result;\n\n            if (type) {\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\n                return strictCompile == true ?\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\n                    interpolated;\n            }\n\n            if (template) {\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\n            }\n\n            if (templateUrl) {\n                this._$templateRequest(templateUrl, false).then((html) => {\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\n                });\n            }\n\n            return result;\n        }\n\n        public setImageMarginCSS($element, image) {\n            let\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\n                margin = 0,\n                cssParams = {};\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n                cssParams['margin-left'] = '';\n            }\n\n            $(image).css(cssParams);\n        }\n    }\n\n    // image load directive TODO: remove to pipImageUtils\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\n                const callback = $parse(attrs.pipImageLoad);\n\n                element.bind('load', (event) => {\n                    callback(scope, {\n                        $event: event\n                    });\n                });\n            }\n        }\n    }\n\n    angular\n        .module('pipDashboard')\n        .service('pipWidgetTemplate', widgetTemplateService)\n        .directive('pipImageLoad', ImageLoad);\n}","(() => {\n  'use strict';\n\n  angular.module('pipWidget', []);\n})();\n\nimport './calendar/WidgetCalendar';\nimport './event/WidgetEvent';\nimport './menu/WidgetMenuService';\nimport './menu/WidgetMenuDirective';\nimport './notes/WidgetNotes';\nimport './position/WidgetPosition';\nimport './statistics/WidgetStatistics';\nimport './picture_slider/WidgetPictureSlider';\n","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\n{\n  class CalendarWidgetController extends MenuWidgetService {\n    private _$scope: angular.IScope;\n    private _configDialog: IWidgetConfigService;\n\n    public color: string = 'blue';\n\n    constructor(\n      pipWidgetMenu: any,\n      $scope: angular.IScope,\n      pipWidgetConfigDialogService: IWidgetConfigService\n    ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n        this.menu.push({\n          title: 'Configurate',\n          click: () => {\n            this.onConfigClick();\n          }\n        });\n        this['options'].date = this['options'].date || new Date();\n        this.color = this['options'].color || this.color;\n      }\n    }\n\n    private onConfigClick() {\n      this._configDialog.show({\n        dialogClass: 'pip-calendar-config',\n        color: this.color,\n        size: this['options'].size,\n        date: this['options'].date,\n        extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.color = result.color;\n        this['options'].color = result.color;\n        this.changeSize(result.size);\n        this['options'].date = result.date;\n      });\n    }\n\n  }\n\n  const pipCalendarWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions',\n    },\n    controller: CalendarWidgetController,\n    controllerAs: 'widgetCtrl',\n    templateUrl: 'widgets/calendar/WidgetCalendar.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipCalendarWidget', pipCalendarWidget);\n\n}","import { MenuWidgetService} from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass EventWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _oldOpacity: number;\n\n  public color: string = 'gray';\n  public opacity: number = 0.57;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n    }});\n    this.color = this['options'].color || this.color;\n    this.opacity = this['options'].opacity || this.opacity;\n\n    this.drawImage();\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      this.drawImage();\n    });\n  }\n\n  private drawImage() {\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.onImageLoad(this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  private onConfigClick() {\n    this._oldOpacity = _.clone(this.opacity);\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\n      date: this['options'].date,\n      title: this['options'].title,\n      text: this['options'].text,\n      opacity: this.opacity,\n      onOpacitytest: (opacity) => {\n        this.opacity = opacity;\n      },\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].date = result.date;\n      this['options'].title = result.title;\n      this['options'].text = result.text;\n      this['options'].opacity = result.opacity;\n    }, () => {\n      this.opacity = this._oldOpacity;\n    });\n  }\n\n  private onImageLoad(image) {\n    this.setImageMarginCSS(this._$element.parent(), image);\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  // Later replace by pipImageUtils sevice's function\n  private setImageMarginCSS($element, image) {\n    let\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\n      imageWidth = image[0].naturalWidth || image.width,\n      imageHeight = image[0].naturalHeight || image.height,\n      margin = 0,\n      cssParams = {};\n\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n      cssParams['margin-left'] = '' + margin + 'px';\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n      cssParams['margin-top'] = '';\n    } else {\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n      cssParams['margin-top'] = '' + margin + 'px';\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n      cssParams['margin-left'] = '';\n    }\n\n    image.css(cssParams);\n  }\n}\n\n\n(() => {\n  let pipEventWidget =  {\n      bindings: {\n        options: '=pipOptions'\n      },\n      controller: EventWidgetController,\n      controllerAs: 'widgetCtrl',\n      templateUrl: 'widgets/event/WidgetEvent.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipEventWidget', pipEventWidget);\n})();","(() => {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .directive('pipMenuWidget', pipMenuWidget);\n\n  function pipMenuWidget() {\n    return {\n      restrict        : 'EA',\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\n    };\n  }\n})();\n","\nexport class MenuWidgetService {\n  public menu: any = [\n    {\n      title: 'Change Size',\n      action: angular.noop,\n      submenu: [{\n          title: '1 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 1,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 2',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 2\n          }\n        }\n      ]\n    }\n  ];\n\n  constructor() {\n    \"ngInject\";\n  }\n\n  public callAction(actionName, params, item) {\n    if (this[actionName]) {\n      this[actionName].call(this, params);\n    }\n\n    if (item['click']) {\n      item['click'].call(item, params, this);\n    }\n  };\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n  };\n}\n\nclass MenuWidgetProvider {\n    private _service: MenuWidgetService;\n\n    constructor() {\n    }\n\n   public $get() {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new MenuWidgetService();\n        \n        return this._service;\n    }\n}\n\n(function () {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .provider('pipWidgetMenu', MenuWidgetProvider);\n})();","'use strict';\n\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass NotesWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n\n  public color: string = 'orange';\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n      }});\n      this.color = this['options'].color || this.color;\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size,\n      title: this['options'].title,\n      text: this['options'].text,\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].text = result.text;\n      this['options'].title = result.title;\n    });\n  }\n}\n\n  let pipNotesWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      controller      : NotesWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipNotesWidget', pipNotesWidget);\n\n","'use strict';\n\nimport {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\nimport {\n  IWidgetTemplateService\n} from '../../utility/WidgetTemplateUtility';\n\nclass PictureSliderController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n  private _widgetUtility: IWidgetTemplateService;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n\n  public animationType: string = 'fading';\n  public animationInterval: number = 5000;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._widgetUtility = pipWidgetTemplate;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    if (this['options']) {\n      this.animationType = this['options'].animationType || this.animationType;\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\n    }\n  }\n\n  public onImageLoad($event) {\n    this._$timeout(() => {\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this._$timeout(() => {\n      _.each(this._$element.find('img'), (image) => {\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\n      });\n    }, 500);\n  }\n}\n\nlet pipPictureSliderWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PictureSliderController,\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\n  controllerAs: 'widgetCtrl'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\nclass PositionWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _locationDialog: any;\n\n  public showPosition: boolean = true;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService,\n    $element: any,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipLocationEditDialog: any,\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._locationDialog = pipLocationEditDialog;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({\n      title: 'Configurate',\n      click: () => {\n        this.onConfigClick();\n      }\n    });\n    this.menu.push({\n      title: 'Change location',\n      click: () => {\n        this.openLocationEditDialog();\n      }\n    });\n\n    this['options'].location = this['options'].location || this['options'].position;\n\n    $scope.$watch('widgetCtrl.options.location', () => {\n      this.reDrawPosition();\n    });\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      if (newVal == true) this.reDrawPosition();\n    });\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-position-config',\n      size: this['options'].size,\n      locationName: this['options'].locationName,\n      hideColors: true,\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.changeSize(result.size);\n      this['options'].locationName = result.locationName;\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reDrawPosition();\n  }\n\n  public openLocationEditDialog() {\n    this._locationDialog.show({\n      locationName: this['options'].locationName,\n      locationPos: this['options'].location\n    }, (newPosition) => {\n      if (newPosition) {\n        this['options'].location = newPosition.location;\n        this['options'].locationName = newPosition.locatioName;\n      }\n    });\n  }\n\n  private reDrawPosition() {\n    this.showPosition = false;\n    this._$timeout(() => {\n      this.showPosition = true;\n    }, 50);\n  }\n}\n\n\nlet pipPositionWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PositionWidgetController,\n  controllerAs: 'widgetCtrl',\n  templateUrl: 'widgets/position/WidgetPosition.html'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\n\nlet SMALL_CHART: number = 70;\nlet BIG_CHART: number = 250;\n\nclass StatisticsWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n\n  public reset: boolean = false;\n  public chartSize: number = SMALL_CHART;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._$timeout = $timeout;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.setChartSize();\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reset = true;\n    this.setChartSize();\n    this._$timeout(() => {\n      this.reset = false;\n    }, 500);\n  }\n\n  private setChartSize() {\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\n  }\n}\n\n(() => {\n  'use strict';\n\n  let pipStatisticsWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      bindToController: true,\n      controller      : StatisticsWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipStatisticsWidget', pipStatisticsWidget);\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.params.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}