{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableComponent.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/WidgetClass.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","$inject","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","DEFAULT_GRID_OPTIONS_1","draggableOptions","tileWidth","tileHeight","gutter","inline","DashboardController","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","_this","callback","groupIndex","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","groupedWidgets","splice","addClass","draggableGridOptions","gridOptions","groupAdditionalActions","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","then","data","activeGroup","addWidgets","widgets","push","forEach","widgetGroup","Array","type","options","controller","templateUrl","config","defineProperty","value","AddComponentDialogWidget","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","totalWidgets","_","isNumber","defaultWidgets","cloneDeep","add","hide","cancel","encrease","widgetIndex","decrease","Object","AddComponentDialogController_1","DASHBOARD_ADD_COMPONENT_DIALOG_TITLE","DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS","DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP","AddComponentDialogService_1","bindToController","AddComponentDialogProvider","_widgetList","list","$get","_service","./AddComponentDialogController","5","TileColors","all","TileSizes","id","WidgetConfigDialogController","colors","sizes","sizeId","onCancel","onApply","updatedData","sizeX","Number","substr","sizeY","./ConfigDialogService","6","WidgetConfigExtendComponentBindings","pipExtensionUrl","pipDialogScope","pipApply","WidgetConfigExtendComponentChanges","WidgetConfigExtendComponentController","$templateRequest","$compile","$onChanges","changes","currentValue","html","find","replaceWith","pipWidgetConfigComponent","7","DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE","WidgetConfigDialogService","successCallback","cancelCallback","event","ConfigDialogController_1","locals","clickOutsideToClose","key","service","./ConfigDialogController","8","./DraggableComponent","./DraggableTileService","./draggable_group/DraggableTilesGroupDirective","./draggable_group/DraggableTilesGroupService","9","DraggableTileService_1","DraggableTilesGroupService_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","isSameDropzone","merge","breakpoints","xs","tilesTemplates","tile","tileScope","createTileScope","IDragTileConstructor","DragTileService","tpl","$watch","newVal","watch","debounce","getContainerWidth","getAvailableColumns","availableWidth","tileGroups","setAvailableColumns","availableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","$postLink","$container","prevVal","changedGroupIndex","addGroup","removeGroups","groupWidgetDiff","newTiles","slice","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","onKyepressTitleInput","keyCode","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","$new","tilesContext","undefined","indexes","container","tiles","remove","gIndex","child","element","scope","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","newTile","addTile","append","getCompiledTemplate","appendTo","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","mobileBreakpoint","Math","floor","getActiveGroupAndTile","foundTile","getTileByNode","active","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","belowElement","getTileByCoordinates","pageX","pageY","getTileIndex","draggedTileIndex","belowElemIndex","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","autoScroll","onstart","onmove","onend","dropzone","ondrop","ondragenter","ondropdeactivate","ondragleave","on","interact","draggable","trigger","bindings","component","DragComponent","10","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","position","zIndex","after","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","DraggableTileLink","$elem","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","restrict","link","directive","12","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","leftCornerCell","basicCol","basicRow","getBasicRow","gridCopy","getCell","rowShift","prevTileSize","rightCornerCell","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","newCellCount","apply","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","generateCells","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","widgetTemplateService","_$interpolate","_$compile","_$templateRequest","strictCompile","result","interpolated","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","$parse","attrs","pipImageLoad","$event","ImageLoad","14","DashboardWidget","15","d","b","p","hasOwnProperty","__","extendStatics","create","_super","pipWidgetConfigDialogService","union","onConfigClick","date","Date","color","dialogClass","extensionUrl","changeSize","CalendarWidgetController","WidgetMenuService_1","MenuWidgetService","opacity","drawImage","is","EventWidgetController","onImageLoad","text","onOpacitytest","_oldOpacity","EventWidget","18","noop","action","callAction","actionName","MenuWidgetProvider","NotesWidgetController","PictureSliderController","animationType","animationInterval","PositionWidgetController","pipLocationEditDialog","openLocationEditDialog","location","reDrawPosition","locationName","hideColors","locationPos","newPosition","locatioName","showPosition","PositionWidget","StatisticsWidgetController","pipWidgetMenu","chartSize","SMALL_CHART_1","_$scope","_$timeout","setChartSize","reset","BIG_CHART_1","StatisticsWidget","../menu/WidgetMenuService","24","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\nimport './draggable/Draggable';\n\nangular.module('pipDashboard', [\n  'pipWidget',\n  'pipDragged',\n  'pipWidgetConfigDialog',\n  'pipAddDashboardComponentDialog',\n  'pipDashboard.Templates',\n\n  // External pip modules\n  'pipLayout',\n  'pipLocations',\n  'pipDateTime',\n  'pipCharts',\n  'pipTranslate',\n  'pipControls'\n]);\n\nimport './utility/WidgetTemplateUtility';\nimport './dialogs/widget_config/ConfigDialogController';\nimport './dialogs/add_component/AddComponentDialogController';\nimport './DashboardComponent';\n","import {\n  IWidgetTemplateService\n} from './utility/WidgetTemplateUtility';\nimport {\n  IAddComponentDialogService,\n  IAddComponentDialogprovider\n} from './dialogs/add_component/AddComponentProvider'\n\n{\n  const setTranslations = function ($injector: ng.auto.IInjectorService) {\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n    if (pipTranslate) {\n      ( < any > pipTranslate).setTranslations('en', {\n        DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\n      });\n      ( < any > pipTranslate).setTranslations('ru', {\n        DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\n      });\n    }\n  }\n\n  const configureAvailableWidgets = function (pipAddComponentDialogProvider: IAddComponentDialogprovider) {\n    pipAddComponentDialogProvider.configWidgetList([\n      [{\n          title: 'Event',\n          icon: 'document',\n          name: 'event',\n          amount: 0\n        },\n        {\n          title: 'Position',\n          icon: 'location',\n          name: 'position',\n          amount: 0\n        }\n      ],\n      [{\n          title: 'Calendar',\n          icon: 'date',\n          name: 'calendar',\n          amount: 0\n        },\n        {\n          title: 'Sticky Notes',\n          icon: 'note-take',\n          name: 'notes',\n          amount: 0\n        },\n        {\n          title: 'Statistics',\n          icon: 'tr-statistics',\n          name: 'statistics',\n          amount: 0\n        }\n      ]\n    ]);\n  }\n\n  class draggableOptions {\n    tileWidth: number;\n    tileHeight: number;\n    gutter: number;\n    inline: boolean;\n  }\n\n  const DEFAULT_GRID_OPTIONS: draggableOptions = {\n    tileWidth: 150, // 'px'\n    tileHeight: 150, // 'px'\n    gutter: 10, // 'px'\n    inline: false\n  };\n\n  interface DashboardBindings {\n      gridOptions: any;\n      groupAdditionalActions: any;\n      groupedWidgets: any;\n  }\n\n  class DashboardController implements ng.IController, DashboardBindings {\n    private defaultGroupMenuActions: any = [{\n        title: 'Add Component',\n        callback: (groupIndex) => {\n          this.addComponent(groupIndex);\n        }\n      },\n      {\n        title: 'Remove',\n        callback: (groupIndex) => {\n          this.removeGroup(groupIndex);\n        }\n      },\n      {\n        title: 'Configurate',\n        callback: (groupIndex) => {\n          console.log('configurate group with index:', groupIndex);\n        }\n      }\n    ];\n    private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\n      'pip-options=\"$parent.$ctrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\n      '</pip-{{ type }}-widget>';\n\n    public groupedWidgets: any;\n    public draggableGridOptions: draggableOptions;\n    public widgetsTemplates: any;\n    public groupMenuActions: any = this.defaultGroupMenuActions;\n    public widgetsContext: any;\n    public gridOptions: any;\n    public groupAdditionalActions: any;\n\n    constructor(\n      $scope: angular.IScope,\n      private $rootScope: angular.IRootScopeService,\n      private $attrs: any,\n      private $element: any,\n      private $timeout: angular.ITimeoutService,\n      private $interpolate: angular.IInterpolateService,\n      private pipAddComponentDialog: IAddComponentDialogService,\n      private pipWidgetTemplate: IWidgetTemplateService\n    ) {\n      // Add class to style scroll bar\n      $element.addClass('pip-scroll');\n\n      // Set tiles grid options\n      this.draggableGridOptions = this.gridOptions || DEFAULT_GRID_OPTIONS;\n\n      // Switch inline displaying\n      if (this.draggableGridOptions.inline === true) {\n        $element.addClass('inline-grid');\n      }\n      // Extend group's menu actions\n      if (this.groupAdditionalActions) angular.extend(this.groupMenuActions, this.groupAdditionalActions);\n\n      // Compile widgets\n      this.widgetsContext = $scope;\n      this.compileWidgets();\n\n      this.$timeout(() => {\n        this.$element.addClass('visible');\n      }, 700);\n    }\n\n    private compileWidgets() {\n      _.each(this.groupedWidgets, (group, groupIndex) => {\n        group.removedWidgets = group.removedWidgets || [],\n          group.source = group.source.map((widget, index) => {\n            // Establish default props\n            widget.size = widget.size || {\n              colSpan: 1,\n              rowSpan: 1\n            };\n            widget.index = index;\n            widget.groupIndex = groupIndex;\n            widget.menu = widget.menu || {};\n            angular.extend(widget.menu, [{\n              title: 'Remove',\n              click: (item, params, object) => {\n                this.removeWidget(item, params, object);\n              }\n            }]);\n\n            return {\n              opts: widget,\n              template: this.pipWidgetTemplate.getTemplate(widget, this._includeTpl)\n            };\n          })\n      });\n    }\n\n    public addComponent(groupIndex) {\n      this.pipAddComponentDialog\n        .show(this.groupedWidgets, groupIndex)\n        .then((data) => {\n          var activeGroup;\n\n          if (!data) {\n            return;\n          }\n\n          if (data.groupIndex !== -1) {\n            activeGroup = this.groupedWidgets[data.groupIndex];\n          } else {\n            activeGroup = {\n              title: 'New group',\n              source: []\n            };\n          }\n\n          this.addWidgets(activeGroup.source, data.widgets);\n\n          if (data.groupIndex === -1) {\n            this.groupedWidgets.push(activeGroup);\n          }\n\n          this.compileWidgets();\n        });\n    };\n\n    public removeGroup = (groupIndex) => {\n      console.log('removeGroup', groupIndex);\n      this.groupedWidgets.splice(groupIndex, 1);\n    }\n\n    private addWidgets(group, widgets) {\n      widgets.forEach((widgetGroup) => {\n        widgetGroup.forEach((widget) => {\n          if (widget.amount) {\n            Array.apply(null, Array(widget.amount)).forEach(() => {\n              group.push({\n                type: widget.name\n              });\n            });\n          }\n        });\n      });\n    }\n\n    private removeWidget(item, params, object) {\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n      this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\n      this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\n      this.$timeout(() => {\n        this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n      });\n    }\n\n  }\n\n  const pipDashboard: ng.IComponentOptions = {\n    bindings: {\n      gridOptions: '=pipGridOptions',\n      groupAdditionalActions: '=pipGroupActions',\n      groupedWidgets: '=pipGroups'\n    },\n    controller: DashboardController,\n    templateUrl: 'Dashboard.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .config(configureAvailableWidgets)\n    .config(setTranslations)\n    .component('pipDashboard', pipDashboard);\n\n}","export class AddComponentDialogWidget {\n    title: string;\n    icon: string;\n    name: string;\n    amount: number;\n}\n\nexport class AddComponentDialogController implements ng.IController {\n    public defaultWidgets: [AddComponentDialogWidget[]];\n    public groups: any;\n    public totalWidgets: number = 0;\n\n    constructor(\n        groups, // Later may be group type\n        public activeGroupIndex: number,\n        widgetList: [AddComponentDialogWidget[]],\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\n        this.defaultWidgets = _.cloneDeep(widgetList);\n        this.groups = _.map(groups, function (group) {\n            return group['title'];\n        });\n    }\n\n    public add() {\n        this.$mdDialog.hide({\n            groupIndex: this.activeGroupIndex,\n            widgets: this.defaultWidgets\n        });\n    };\n\n    public cancel() {\n        this.$mdDialog.cancel();\n    };\n\n    public encrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\n        widget.amount++;\n        this.totalWidgets++;\n    };\n\n    public decrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\n        this.totalWidgets = this.totalWidgets ? this.totalWidgets - 1 : 0;\n    };\n}\n\nangular\n    .module('pipAddDashboardComponentDialog', ['ngMaterial']);\n\nimport './AddComponentProvider';","import {\n  AddComponentDialogWidget,\n  AddComponentDialogController\n} from './AddComponentDialogController';\n\nexport interface IAddComponentDialogService {\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\n}\n\nexport interface IAddComponentDialogprovider {\n  configWidgetList(list: [AddComponentDialogWidget[]]): void;\n}\n\n{\n  const setTranslations = function($injector: ng.auto.IInjectorService) {\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n    if (pipTranslate) {\n      (<any>pipTranslate).setTranslations('en', {\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Add component',\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Create new group'\n      });\n      (<any>pipTranslate).setTranslations('ru', {\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Добавить компонент',\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\n      });\n    }\n  }\n\n  class AddComponentDialogService implements IAddComponentDialogService {\n\n    public constructor(\n      private widgetList: [AddComponentDialogWidget[]],\n      private $mdDialog: angular.material.IDialogService\n    ) {}\n\n    public show(groups, activeGroupIndex) {\n      return this.$mdDialog\n        .show({\n          templateUrl: 'dialogs/add_component/AddComponent.html',\n          bindToController: true,\n          controller: AddComponentDialogController,\n          controllerAs: 'dialogCtrl',\n          clickOutsideToClose: true,\n          resolve: {\n            groups: () => {\n              return groups;\n            },\n            activeGroupIndex: () => {\n              return activeGroupIndex;\n            },\n            widgetList: () => {\n              return (<any>this.widgetList);\n            }\n          }\n        });\n    };\n  }\n\n  class AddComponentDialogProvider implements IAddComponentDialogprovider {\n    private _service: AddComponentDialogService;\n    private _widgetList: [AddComponentDialogWidget[]] = null;\n\n    constructor() {}\n\n    public configWidgetList = function (list: [AddComponentDialogWidget[]]) {\n      this._widgetList = list;\n    };\n\n    public $get($mdDialog: angular.material.IDialogService) {\n      \"ngInject\";\n\n      if (this._service == null)\n        this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\n\n      return this._service;\n    }\n  }\n\n  angular\n    .module('pipDashboard')\n    .config(setTranslations)\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\n}","\nclass TileColors {\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\n}\n\nclass TileSizes {\n    static all: any = [{\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL',\n            id: '11'\n        },\n        {\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE',\n            id: '21'\n        },\n        {\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE',\n            id: '22'\n        }\n    ];\n}\n\nexport class WidgetConfigDialogController {\n    public colors: string[] = TileColors.all;\n    public sizes: any = TileSizes.all;\n    public sizeId: string = TileSizes.all[0].id;\n    public onCancel: Function;\n\n    constructor(\n        public params,\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        \"ngInject\";\n\n        angular.extend(this, this.params);\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\n\n        this.onCancel = () => {\n            this.$mdDialog.cancel();\n        }\n    }\n\n    public onApply(updatedData) {\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\n        this.$mdDialog.hide(updatedData);\n    }\n}\n\nangular\n    .module('pipWidgetConfigDialog', ['ngMaterial']);\n\nimport './ConfigDialogService';\nimport './ConfigDialogExtendComponent';","{    \n    interface IWidgetConfigExtendComponentBindings {\n        [key: string]: any;\n\n        pipExtensionUrl: any;\n        pipDialogScope: any;\n        pipApply: any;\n    }\n\n    const WidgetConfigExtendComponentBindings: IWidgetConfigExtendComponentBindings = {\n        pipExtensionUrl: '<',\n        pipDialogScope: '<',\n        pipApply: '&'\n    }\n\n    class WidgetConfigExtendComponentChanges implements ng.IOnChangesObject, IWidgetConfigExtendComponentBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        pipExtensionUrl: ng.IChangesObject<string>;\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\n\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\n    }\n\n    interface IWidgetConfigExtendComponentAttributes extends ng.IAttributes {\n        pipExtensionUrl: string\n    }\n\n    class WidgetConfigExtendComponentController implements IWidgetConfigExtendComponentBindings {\n        public pipExtensionUrl: string;\n        public pipDialogScope: ng.IScope;\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\n\n        constructor(\n            private $templateRequest: angular.ITemplateRequestService,\n            private $compile: angular.ICompileService,\n            private $scope: angular.IScope, \n            private $element: JQuery, \n            private $attrs: IWidgetConfigExtendComponentAttributes\n        ) { }\n\n        public $onChanges(changes: WidgetConfigExtendComponentChanges) {\n            if (changes.pipDialogScope) {\n                angular.extend(this, changes.pipDialogScope.currentValue);\n            }\n            if (changes.pipExtensionUrl) {\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\n                });\n            }\n        }\n\n        public onApply() {\n            this.pipApply({updatedData: this});\n        }\n    }\n\n    const pipWidgetConfigComponent: ng.IComponentOptions = {\n        templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\n        controller: WidgetConfigExtendComponentController,\n        bindings: WidgetConfigExtendComponentBindings\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .component('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\n}","import { WidgetConfigDialogController } from './ConfigDialogController';\n\nexport interface IWidgetConfigService {\n    show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\n}\n\nexport interface IWidgetConfigDialogOptions extends angular.material.IDialogOptions {\n    dialogClass?: string;\n    extensionUrl?: string;\n    event?: any;\n}\n\n{\n    const setTranslations = function($injector: ng.auto.IInjectorService) {\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Edit tile',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Small',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Large'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Изменить виджет',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\n            });\n        }\n    }\n\n    class WidgetConfigDialogService {\n        public constructor(\n            public $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\n                    controller: WidgetConfigDialogController,\n                    bindToController: true,\n                    controllerAs: 'vm',\n                    locals: {\n                        params: params.locals\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((key) => {\n                    if (successCallback) {\n                        successCallback(key);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .config(setTranslations)\n        .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\n}","angular.module('pipDragged', []);\n\nimport './DraggableTileService';\nimport './DraggableComponent';\nimport './draggable_group/DraggableTilesGroupService'\nimport './draggable_group/DraggableTilesGroupDirective'","declare var interact;\n\nimport {\n  DragTileService,\n  IDragTileService,\n  IDragTileConstructor\n} from './DraggableTileService';\nimport {\n  TilesGridService,\n  ITilesGridService,\n  ITilesGridConstructor\n} from './draggable_group/DraggableTilesGroupService';\n\nexport const DEFAULT_TILE_WIDTH: number = 150;\nexport const DEFAULT_TILE_HEIGHT: number = 150;\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\n\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\nconst DEFAULT_OPTIONS = {\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\n  gutter: 20, // 'px'\n  container: 'pip-draggable-grid:first-of-type',\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\n  activeDropzoneClass: 'dropzone-active',\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\n};\n\n{\n  interface IDraggableBindings {\n      tilesTemplates: any;\n      tilesContext: any;\n      options: any;\n      groupMenuActions: any;\n      $container: JQuery;\n  }\n\n  interface IDraggableControllerScope extends ng.IScope {\n    $container: JQuery;\n    tilesTemplates: any;\n    options: any;\n  }\n\n  interface ITileScope extends ng.IScope {\n    index: number | string;\n    groupIndex: number | string;\n  }\n\n  class DraggableController implements ng.IComponentController, IDraggableBindings {\n    public opts: any;\n    public groups: any;\n    public sourceDropZoneElem: any = null;\n    public isSameDropzone: boolean = true;\n    public tileGroups: any = null;\n    public availableWidth: number;\n    public availableColumns: number;\n    public groupsContainers: any;\n    public container: any;\n    public activeDraggedGroup: any;\n    public draggedTile: any;\n    public containerOffset: any;\n    public tilesTemplates: any;\n    public tilesContext: any;\n    public options: any;\n    public groupMenuActions: any;\n    public $container: JQuery;\n\n    constructor(\n      private $scope: IDraggableControllerScope,\n      private $rootScope: angular.IRootScopeService,\n      private $compile: angular.ICompileService,\n      private $timeout: angular.ITimeoutService,\n      private $element: JQuery,\n      pipDragTile: IDragTileService,\n      pipTilesGrid: ITilesGridService,\n      pipMedia: pip.layouts.IMediaService\n    ) {\n      this.opts = _.merge({\n        mobileBreakpoint: pipMedia.breakpoints.xs\n      }, DEFAULT_OPTIONS, this.options);\n\n      this.groups = this.tilesTemplates.map((group, groupIndex) => {\n        return {\n          title: group.title,\n          editingName: false,\n          index: groupIndex,\n          source: group.source.map((tile) => {\n            const tileScope = this.createTileScope(tile);\n\n            return IDragTileConstructor(DragTileService, {\n              tpl: $compile(tile.template)(tileScope),\n              options: tile.opts,\n              size: tile.opts.size\n            });\n          })\n        };\n      });\n\n      // Add templates watcher\n      $scope.$watch('$ctrl.tilesTemplates', (newVal) => {\n        this.watch(newVal);\n      }, true);\n\n      // Initialize data\n      this.initialize();\n\n      // Resize handler TODO: replace by pip resize watchers\n      $(window).on('resize', _.debounce(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n\n        this.tileGroups.forEach((group) => {\n          group\n            .setAvailableColumns(this.availableColumns)\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n            .setTilesDimensions()\n            .calcContainerHeight();\n        });\n      }, 50));\n    }\n\n    // Post link function\n    public $postLink() {\n      this.$container = this.$element;\n    }\n\n    // Watch handler\n    private watch(newVal) {\n      const prevVal = this.groups;\n      let changedGroupIndex = null;\n\n      if (newVal.length > prevVal.length) {\n        this.addGroup(newVal[newVal.length - 1]);\n\n        return;\n      }\n\n      if (newVal.length < prevVal.length) {\n        this.removeGroups(newVal);\n\n        return;\n      }\n\n      for (let i = 0; i < newVal.length; i++) {\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\n          changedGroupIndex = i;\n\n          if (groupWidgetDiff < 0) {\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\n\n            _.each(newTiles, (tile) => {\n              console.log('tile', tile);\n            });\n\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\n\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          } else {\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\n            this.updateTilesOptions(newVal);\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          }\n\n          return;\n        }\n      }\n\n      if (newVal && this.tileGroups) {\n        this.updateTilesOptions(newVal);\n        this.$timeout(() => {\n          this.updateTilesGroups();\n        });\n      }\n    }\n\n    // Inline edit group handlers\n    public onTitleClick(group, event) {\n      if (!group.editingName) {\n        group.oldTitle = _.clone(group.title);\n        group.editingName = true;\n        this.$timeout(() => {\n          $(event.currentTarget.children[0]).focus();\n        });\n      }\n    }\n\n    public cancelEditing(group) {\n      group.title = group.oldTitle;\n    }\n\n    public onBlurTitleInput(group) {\n      this.$timeout(() => {\n        group.editingName = false;\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\n        // Update title in outer scope\n        this.tilesTemplates[group.index].title = group.title;\n      }, 100);\n    }\n\n    public onKyepressTitleInput(group, event) {\n      if (event.keyCode === 13) {\n        this.onBlurTitleInput(group);\n      }\n    }\n\n    // Update outer scope functions\n    private updateTilesTemplates(updateType: string, source ? : any) {\n      switch (updateType) {\n        case 'addGroup':\n          if (this.groups.length !== this.tilesTemplates.length) {\n            this.tilesTemplates.push(source);\n          }\n          break;\n        case 'moveTile':\n          const {\n            fromIndex,\n            toIndex,\n            tileOptions,\n            fromTileIndex\n          } = {\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\n            toIndex: source.to.elem.attributes['data-group-id'].value,\n            tileOptions: source.tile.opts.options,\n            fromTileIndex: source.tile.opts.options.index\n          }\n          this.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\n          this.tilesTemplates[toIndex].source.push({\n            opts: tileOptions\n          });\n\n          this.reIndexTiles(source.from.elem);\n          this.reIndexTiles(source.to.elem);\n          break;\n      }\n    }\n\n    // Manage tiles functions\n    private createTileScope(tile: any): ITileScope {\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.tilesContext);\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n      return tileScope;\n    }\n\n    private removeTiles(group, indexes, container) {\n      const tiles = $(container).find('.pip-draggable-tile');\n\n      _.each(indexes, (index) => {\n        group.tiles.splice(index, 1);\n        tiles[index].remove();\n      });\n\n      this.reIndexTiles(container);\n    }\n\n    private reIndexTiles(container, gIndex ? ) {\n      const tiles = $(container).find('.pip-draggable-tile'),\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\n\n      _.each(tiles, (tile, index) => {\n        const child = $(tile).children()[0];\n        angular.element(child).scope()['index'] = index;\n        angular.element(child).scope()['groupIndex'] = groupIndex;\n      });\n    }\n\n    private removeGroups(newGroups) {\n      const removeIndexes = [],\n        remain = [],\n        containers = [];\n\n\n      _.each(this.groups, (group, index) => {\n        if (_.findIndex(newGroups, (g) => {\n            return g['title'] === group.title\n          }) < 0) {\n          removeIndexes.push(index);\n        } else {\n          remain.push(index);\n        }\n      });\n\n      _.each(removeIndexes.reverse(), (index) => {\n        this.groups.splice(index, 1);\n        this.tileGroups.splice(index, 1);\n      });\n\n      _.each(remain, (index) => {\n        containers.push(this.groupsContainers[index]);\n      });\n\n      this.groupsContainers = containers;\n\n      _.each(this.groupsContainers, (container, index) => {\n        this.reIndexTiles(container, index);\n      });\n    }\n\n    private addGroup(sourceGroup) {\n      const group = {\n        title: sourceGroup.title,\n        source: sourceGroup.source.map((tile) => {\n          const tileScope = this.createTileScope(tile);\n\n          return IDragTileConstructor(DragTileService, {\n            tpl: this.$compile(tile.template)(tileScope),\n            options: tile.opts,\n            size: tile.opts.size\n          });\n        })\n      };\n\n      this.groups.push(group);\n      if (!this.$scope.$$phase) this.$scope.$apply();\n\n      this.$timeout(() => {\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups.push(\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight()\n        );\n      });\n\n      this.updateTilesTemplates('addGroup', sourceGroup);\n    }\n\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\n      newTiles.forEach((tile) => {\n        const tileScope = this.createTileScope(tile);\n\n        const newTile = IDragTileConstructor(DragTileService, {\n          tpl: this.$compile(tile.template)(tileScope),\n          options: tile.opts,\n          size: tile.opts.size\n        });\n\n        group.addTile(newTile);\n\n        $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(newTile.getCompiledTemplate())\n          .appendTo(groupContainer);\n      });\n    }\n\n    private updateTilesOptions(optionsGroup) {\n      optionsGroup.forEach((optionGroup) => {\n        optionGroup.source.forEach((tileOptions) => {\n          this.tileGroups.forEach((group) => {\n            group.updateTileOptions(tileOptions.opts);\n          });\n        });\n      });\n    }\n\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\n      return tileGroups.map((group, index) => {\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }\n\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\n      this.tileGroups.forEach((group) => {\n        if (!onlyPosition) {\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\n        }\n\n        group\n          .setTilesDimensions(onlyPosition, draggedTile)\n          .calcContainerHeight();\n      });\n    }\n\n    private getContainerWidth(): any {\n      const container = this.$container || $('body');\n      return container.width();\n    }\n\n    private getAvailableColumns(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\n    }\n\n    private getActiveGroupAndTile(elem): any {\n      const active = {};\n\n      this.tileGroups.forEach((group) => {\n        const foundTile = group.getTileByNode(elem);\n\n        if (foundTile) {\n          active['group'] = group;\n          active['tile'] = foundTile;\n          return;\n        }\n      });\n\n      return active;\n    }\n\n    private getSingleTileWidthForMobile(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\n    }\n\n    private onDragStartListener(event) {\n      const activeEntities = this.getActiveGroupAndTile(event.target);\n\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\n      this.draggedTile = activeEntities['tile'];\n      this.activeDraggedGroup = activeEntities['group'];\n\n      this.$element.addClass('drag-transfer');\n\n      this.draggedTile.startDrag();\n    }\n\n    private onDragMoveListener(event) {\n      const target = event.target;\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\n\n      this.containerOffset = this.getContainerOffset();\n\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\n      target.style.top = y + 'px';\n\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\n        left: event.pageX - this.containerOffset.left,\n        top: event.pageY - this.containerOffset.top\n      }, this.draggedTile);\n\n      if (belowElement) {\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\n\n        if ((draggedTileIndex + 1) === belowElemIndex) {\n          return;\n        }\n\n        this.activeDraggedGroup\n          .swapTiles(this.draggedTile, belowElement)\n          .setTilesDimensions(true, this.draggedTile);\n\n        this.$timeout(() => {\n          this.setGroupContainersHeight();\n        }, 0);\n      }\n    }\n\n    private onDragEndListener() {\n      this.draggedTile.stopDrag(this.isSameDropzone);\n\n      this.$element.removeClass('drag-transfer');\n      this.activeDraggedGroup = null;\n      this.draggedTile = null;\n    }\n\n    private getContainerOffset() {\n      const containerRect = this.container.getBoundingClientRect();\n\n      return {\n        left: containerRect.left,\n        top: containerRect.top\n      };\n    }\n\n    private setGroupContainersHeight() {\n      this.tileGroups.forEach((tileGroup) => {\n        tileGroup.calcContainerHeight();\n      });\n    }\n\n    private moveTile(from, to, tile) {\n      let elem;\n      const movedTile = from.removeTile(tile);\n      const tileScope = this.createTileScope(tile);\n\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\n        .find(movedTile.getElem())\n        .remove();\n\n      if (to !== null) {\n        to.addTile(movedTile);\n\n        elem = this.$compile(movedTile.getElem())(tileScope);\n\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\n          .append(elem);\n\n        this.$timeout(to.setTilesDimensions.bind(to, true));\n      }\n\n      this.updateTilesTemplates('moveTile', {\n        from: from,\n        to: to,\n        tile: movedTile\n      });\n    }\n\n    private onDropListener(event) {\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\n\n      if (this.activeDraggedGroup !== droppedGroup) {\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\n      }\n\n      this.updateTilesGroups(true);\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropToFictGroupListener(event) {\n      const from = this.activeDraggedGroup;\n      const tile = this.draggedTile;\n\n      this.addGroup({\n        title: 'New group',\n        source: []\n      });\n      this.$timeout(() => {\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\n        this.updateTilesGroups(true);\n      });\n\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropEnterListener(event) {\n      if (!this.sourceDropZoneElem) {\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\n      }\n\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\n        $('body').css('cursor', 'copy');\n        this.isSameDropzone = false;\n      } else {\n        $('body').css('cursor', '');\n        this.isSameDropzone = true;\n      }\n    }\n\n    private onDropDeactivateListener(event) {\n      if (this.sourceDropZoneElem !== event.target) {\n        event.target.classList.remove(this.opts.activeDropzoneClass);\n        $('body').css('cursor', '');\n      }\n    }\n\n    private onDropLeaveListener(event) {\n      event.target.classList.remove(this.opts.activeDropzoneClass);\n    }\n\n    private initialize() {\n      this.$timeout(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\n\n        interact('.pip-draggable-tile')\n          .draggable({\n            // enable autoScroll\n            autoScroll: true,\n            onstart: (event) => {\n              this.onDragStartListener(event)\n            },\n            onmove: (event) => {\n              this.onDragMoveListener(event)\n            },\n            onend: (event) => {\n              this.onDragEndListener()\n            }\n          });\n\n        interact('.pip-draggable-group.fict-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropToFictGroupListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          })\n\n        interact('.pip-draggable-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          });\n\n        this.$container\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\n            interact('.pip-draggable-tile').draggable(false);\n            $(this).trigger('click');\n          })\n          .on('mouseup touchend', () => {\n            interact('.pip-draggable-tile').draggable(true);\n          });\n      }, 0);\n    }\n\n  }\n\n  const DragComponent: ng.IComponentOptions = {\n    bindings: {\n      tilesTemplates: '=pipTilesTemplates',\n      tilesContext: '=pipTilesContext',\n      options: '=pipDraggableGrid',\n      groupMenuActions: '=pipGroupMenuActions'\n    },\n    templateUrl: 'draggable/Draggable.html',\n    controller: DraggableController\n  }\n\n  angular.module('pipDragged')\n    .component('pipDraggableGrid', DragComponent);\n}","export interface DragTileConstructor {\n  new (options: any);\n}\n\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\n  return new constructor(options);\n}\n\nexport interface IDragTileService {\n  tpl: any;\n  opts: any;\n  size: any;\n  elem: any;\n  preview: any;\n  getSize(): any;\n  setSize(width, height): any;\n  setPosition(left, top): any;\n  getCompiledTemplate(): any;\n  updateElem(parent): any;\n  getElem(): any;\n  startDrag(): any;\n  stopDrag(isAnimate): any;\n  setPreviewPosition(coords): void;\n  getOptions(): any;\n  setOptions(options): any;\n}\n\nlet DEFAULT_TILE_SIZE = {\n  colSpan: 1,\n  rowSpan: 1\n};\n\nexport class DragTileService implements IDragTileService {\n  public tpl: any;\n  public opts: any;\n  public size: any;\n  public elem: any;\n  public preview: any;\n\n  constructor (options: any) {\n    this.tpl = options.tpl.get(0);\n    this.opts = options;\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\n    this.elem = null;\n  }\n\n  public getSize(): any {\n    return this.size;\n  }\n\n  public setSize(width, height): any {\n    this.size.width = width;\n    this.size.height = height;\n\n    if (this.elem) {\n      this.elem.css({\n        width: width,\n        height: height\n      });\n    }\n\n    return this;\n  }\n\n  public setPosition(left, top): any {\n    this.size.left = left;\n    this.size.top = top;\n\n    if (this.elem) {\n      this.elem.css({\n        left: left,\n        top: top\n      });\n    }\n\n    return this;\n  }\n\n  public getCompiledTemplate(): any {\n    return this.tpl;\n  };\n\n  public updateElem(parent): any {\n    this.elem = $(this.tpl).parent(parent);\n\n    return this;\n  };\n\n  public getElem(): any {\n    return this.elem.get(0);\n  };\n\n  public startDrag(): any {\n    this.preview = $('<div>')\n      .addClass('pip-dragged-preview')\n      .css({\n        position: 'absolute',\n        left: this.elem.css('left'),\n        top: this.elem.css('top'),\n        width: this.elem.css('width'),\n        height: this.elem.css('height')\n      });\n\n    this.elem\n      .addClass('no-animation')\n      .css({\n        zIndex: '9999'\n      })\n      .after(this.preview);\n\n    return this;\n  };\n\n  public stopDrag(isAnimate): any {\n    let self = this;\n\n    if (isAnimate) {\n      this.elem\n        .removeClass('no-animation')\n        .css({\n          left: this.preview.css('left'),\n          top: this.preview.css('top')\n        })\n        .on('transitionend', onTransitionEnd);\n    } else {\n      self.elem\n        .css({\n          left: self.preview.css('left'),\n          top: self.preview.css('top'),\n          zIndex: ''\n        })\n        .removeClass('no-animation');\n\n      self.preview.remove();\n      self.preview = null;\n    }\n\n    return this;\n\n    function onTransitionEnd() {\n      if (self.preview) {\n        self.preview.remove();\n        self.preview = null;\n      }\n\n      self.elem\n        .css('zIndex', '')\n        .off('transitionend', onTransitionEnd);\n    }\n  };\n\n  public setPreviewPosition(coords) {\n    this.preview.css(coords);\n  };\n\n  public getOptions(): any {\n    return this.opts.options;\n  };\n\n  public setOptions(options): any {\n    _.merge(this.opts.options, options);\n    _.merge(this.size, options.size);\n\n    return this;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipDragTile', function () {\n    return function (options) {\n      let newTile = new DragTileService(options);\n\n      return newTile;\n    }\n  });","{\n  interface DraggableTileAttributes extends ng.IAttributes {\n    pipDraggableTiles: any;\n  }\n\n  function DraggableTileLink(\n    $scope: ng.IScope,\n    $elem: JQuery,\n    $attr: DraggableTileAttributes\n  ) {\n    const docFrag = document.createDocumentFragment(),\n      group = $scope.$eval($attr.pipDraggableTiles);\n\n    group.forEach(function (tile) {\n      const tpl = wrapComponent(tile.getCompiledTemplate());\n      docFrag.appendChild(tpl);\n    });\n\n    $elem.append(docFrag);\n\n    function wrapComponent(elem) {\n      return $('<div>')\n        .addClass('pip-draggable-tile')\n        .append(elem)\n        .get(0);\n    }\n  }\n\n  function DraggableTile() {\n    return {\n      restrict: 'A',\n      link: DraggableTileLink\n    };\n  }\n\n  angular\n    .module('pipDragged')\n    .directive('pipDraggableTiles', DraggableTile);\n\n}","export interface TilesGridConstructor {\n  new(tiles, options, columns, elem);\n}\n\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\n  return new constructor(tiles, options, columns, elem);\n}\n\nexport interface ITilesGridService {\n  tiles: any;\n  opts: any;\n  columns: any;\n  elem: any;\n  gridCells: any;\n  inline: boolean;\n  isMobileLayout: boolean;\n\n  addTile(tile): any;\n  getCellByPosition(row, col): any;\n  getCells(prevCell, rowSpan, colSpan): any;\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\n  getCell(src, basicRow, basicCol, columns): any;\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\n  getBasicRow(prevCell): any;\n  isCellFree(row, col): any;\n  getCellIndex(srcCell): any;\n  reserveCells(start, end, elem): void;\n  clearElements(): void;\n  setAvailableColumns(columns): any;\n  generateGrid(singleTileWidth ? ): any;\n  setTilesDimensions(onlyPosition, draggedTile): any;\n  calcContainerHeight(): any;\n  getTileByNode(node): any;\n  getTileByCoordinates(coords, draggedTile): any;\n  getTileIndex(tile): any;\n  swapTiles(movedTile, beforeTile): any;\n  removeTile(removeTile): any;\n  updateTileOptions(opts): any;\n}\n\nconst MOBILE_LAYOUT_COLUMNS = 2;\n\nexport class TilesGridService implements ITilesGridService {\n  public tiles: any;\n  public opts: any;\n  public columns: any;\n  public elem: any;\n  public gridCells: any = [];\n  public inline: boolean = false;\n  public isMobileLayout: boolean;\n\n  constructor(tiles, options, columns, elem) {\n    this.tiles = tiles;\n    this.opts = options;\n    this.columns = columns || 0; // available columns in a row\n    this.elem = elem;\n    this.gridCells = [];\n    this.inline = options.inline || false;\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n  }\n\n  public addTile(tile): any {\n    this.tiles.push(tile);\n    if (this.tiles.length === 1) {\n      this.generateGrid();\n    }\n\n    return this;\n  };\n\n  public getCellByPosition(row, col): any {\n    return this.gridCells[row][col];\n  };\n\n  public getCells(prevCell, rowSpan, colSpan): any {\n    if (this.isMobileLayout) {\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\n    } else {\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\n    }\n  };\n\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicCol = prevCell && prevCell.col || 0;\n    const basicRow = this.getBasicRow(prevCell);\n\n    // Small tile\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    // Medium tile\n    if (colSpan === 2 && rowSpan === 1) {\n      const prevTileSize = prevCell && prevCell.elem.size || null;\n\n      if (!prevTileSize) {\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\n        if (this.columns - basicCol - 2 > 0) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\n        if (prevCell.row % 2 === 0) {\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\n        } else {\n          if (this.columns - basicCol - 3 >= 0) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n          }\n        }\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\n        if (this.columns - basicCol - 3 >= 0) {\n          if (this.isCellFree(basicRow, basicCol + 1)) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\n          }\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      }\n    }\n\n    // Big tile\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\n    } else if (rowSpan === 2 && colSpan === 2) {\n      if (this.columns - basicCol - 2 > 0) {\n        if (this.isCellFree(basicRow, basicCol + 1)) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\n        }\n      } else {\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\n      }\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getCell(src, basicRow, basicCol, columns): any {\n    let cell, col, row;\n\n    if (this.isMobileLayout) {\n      // mobile layout\n      for (col = basicCol; col < columns; col++) {\n        if (!src[basicRow][col].elem) {\n          cell = src[basicRow][col];\n          break;\n        }\n      }\n\n      return cell;\n    }\n\n    // desktop\n    for (col = basicCol; col < columns; col++) {\n      for (row = 0; row < 2; row++) {\n        if (!src[row + basicRow][col].elem) {\n          cell = src[row + basicRow][col];\n          break;\n        }\n      }\n\n      if (cell) {\n        return cell;\n      }\n    }\n  };\n\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicRow = this.getBasicRow(prevCell);\n    const basicCol = prevCell && prevCell.col || 0;\n\n\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    if (!prevCell) {\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\n    } else if (colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getBasicRow(prevCell): any {\n    let basicRow;\n\n    if (this.isMobileLayout) {\n      if (prevCell) {\n        basicRow = prevCell && prevCell.row || 0;\n      } else {\n        basicRow = 0;\n      }\n    } else {\n      if (prevCell) {\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\n      } else {\n        basicRow = 0;\n      }\n    }\n\n    return basicRow;\n  };\n\n  public isCellFree(row, col): any {\n    return !this.gridCells[row][col].elem;\n  };\n\n  public getCellIndex(srcCell): any {\n    const self = this;\n    let index;\n\n    this.gridCells.forEach((row, rowIndex) => {\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\n        return cell === srcCell;\n      });\n\n      if (index !== -1) {\n        return;\n      }\n    });\n\n    return index !== -1 ? index : 0;\n  };\n\n  public reserveCells(start, end, elem) {\n    this.gridCells.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.row >= start.row && cell.row <= end.row &&\n          cell.col >= start.col && cell.col <= end.col) {\n          cell.elem = elem;\n        }\n      });\n    });\n  };\n\n  public clearElements() {\n    this.gridCells.forEach((row) => {\n      row.forEach((tile) => {\n        tile.elem = null;\n      });\n    });\n  };\n\n  public setAvailableColumns(columns): any {\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n    this.columns = columns;\n\n    return this;\n  };\n\n  public generateGrid(singleTileWidth ? ): any {\n    const self = this,\n          tileWidth = singleTileWidth || this.opts.tileWidth,\n          offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\n    let   colsInRow = 0,\n          rows = 0,\n          gridInRow = [];\n\n    this.gridCells = [];\n\n    this.tiles.forEach((tile, index, srcTiles) => {\n      const tileSize = tile.getSize();\n\n      generateCells(tileSize.colSpan);\n\n      if (srcTiles.length === index + 1) {\n        if (colsInRow < self.columns) {\n          generateCells(self.columns - colsInRow);\n        }\n\n        // Generate more cells for extends tile size to big\n        if (self.tiles.length * 2 > self.gridCells.length) {\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\n            generateCells(self.columns);\n          });\n        }\n      }\n    });\n\n    function generateCells(newCellCount) {\n      Array.apply(null, Array(newCellCount)).forEach(() => {\n        if (self.columns < colsInRow + 1) {\n          rows++;\n          colsInRow = 0;\n\n          self.gridCells.push(gridInRow);\n          gridInRow = [];\n        }\n\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\n\n        // Describe grid cell size through block corners coordinates\n        gridInRow.push({\n          top: top,\n          left: left,\n          bottom: top + self.opts.tileHeight,\n          right: left + tileWidth,\n          row: rows,\n          col: colsInRow\n        });\n\n        colsInRow++;\n      });\n    }\n\n    return this;\n  };\n\n  public setTilesDimensions(onlyPosition, draggedTile): any {\n    const self = this;\n    let currIndex = 0;\n    let prevCell;\n\n    if (onlyPosition) {\n      self.clearElements();\n    }\n\n    this.tiles.forEach((tile) => {\n      const tileSize = tile.getSize();\n      let startCell;\n      let width;\n      let height;\n      let cells;\n\n      tile.updateElem('.pip-draggable-tile');\n      if (tileSize.colSpan === 1) {\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\n        } else {\n          startCell = self.getCells(prevCell, 1, 1).start;\n        }\n\n\n        if (!onlyPosition) {\n          width = startCell.right - startCell.left;\n          height = startCell.bottom - startCell.top;\n        }\n\n        prevCell = startCell;\n\n        self.reserveCells(startCell, startCell, tile);\n\n        currIndex++;\n      } else if (tileSize.colSpan === 2) {\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\n        startCell = cells.start;\n\n        if (!onlyPosition) {\n          width = cells.end.right - cells.start.left;\n          height = cells.end.bottom - cells.start.top;\n        }\n\n        prevCell = cells.end;\n\n        self.reserveCells(cells.start, cells.end, tile);\n\n        currIndex += 2;\n      }\n\n      // Render preview\n      // while tiles from group is dragged\n      if (draggedTile === tile) {\n        tile.setPreviewPosition({\n          left: startCell.left,\n          top: startCell.top\n        });\n\n        return;\n      }\n\n      if (!onlyPosition) {\n        tile.setSize(width, height);\n      }\n\n      tile.setPosition(startCell.left, startCell.top);\n    });\n\n    return this;\n  };\n\n  public calcContainerHeight(): any {\n    let maxHeightSize, maxWidthSize;\n\n    if (!this.tiles.length) {\n      return this;\n    }\n\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\n      const tileSize = tile['getSize']();\n      return tileSize.top + tileSize.height;\n    })['getSize']();\n\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\n\n    if (this.inline) {\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\n        const tileSize = tile['getSize']();\n        return tileSize.left + tileSize.width;\n      })['getSize']();\n\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\n    }\n\n    return this;\n  };\n\n  public getTileByNode(node): any {\n    const foundTile = this.tiles.filter((tile) => {\n      return node === tile.getElem();\n    });\n\n    return foundTile.length ? foundTile[0] : null;\n  };\n\n  public getTileByCoordinates(coords, draggedTile): any {\n    return this.tiles\n      .filter((tile) => {\n        const tileSize = tile.getSize();\n\n        return tile !== draggedTile &&\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\n      })[0] || null;\n  };\n\n  public getTileIndex(tile): any {\n    return _.findIndex(this.tiles, tile);\n  };\n\n  public swapTiles(movedTile, beforeTile): any {\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\n\n    this.tiles.splice(movedTileIndex, 1);\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\n\n    return this;\n  };\n\n  public removeTile(removeTile): any {\n    let droppedTile;\n\n    this.tiles.forEach((tile, index, tiles) => {\n      if (tile === removeTile) {\n        droppedTile = tiles.splice(index, 1)[0];\n        return false;\n      }\n    });\n\n    return droppedTile;\n  };\n\n  public updateTileOptions(opts): any {\n    const index = _.findIndex(this.tiles, (tile) => {\n      return tile['getOptions']() === opts;\n    });\n\n    if (index !== -1) {\n      this.tiles[index].setOptions(opts);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipTilesGrid', function () {\n    return function (tiles, options, columns, elem) {\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\n\n      return newGrid;\n    }\n  });","export interface IWidgetTemplateService {\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\n    setImageMarginCSS($element, image): void;\n} \n\n{\n    class widgetTemplateService implements IWidgetTemplateService {\n        private _$interpolate: angular.IInterpolateService;\n        private _$compile: angular.ICompileService;\n        private _$templateRequest: angular.ITemplateRequestService;\n\n        constructor(\n            $interpolate: angular.IInterpolateService,\n            $compile: angular.ICompileService,\n            $templateRequest: angular.ITemplateRequestService\n        ) {\n            this._$interpolate = $interpolate;\n            this._$compile = $compile;\n            this._$templateRequest = $templateRequest;\n        }\n\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\n            const {\n                template,\n                templateUrl,\n                type\n            } = source;\n            let result;\n\n            if (type) {\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\n                return strictCompile == true ?\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\n                    interpolated;\n            }\n\n            if (template) {\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\n            }\n\n            if (templateUrl) {\n                this._$templateRequest(templateUrl, false).then((html) => {\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\n                });\n            }\n\n            return result;\n        }\n\n        public setImageMarginCSS($element, image) {\n            let\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\n                margin = 0,\n                cssParams = {};\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n                cssParams['margin-left'] = '';\n            }\n\n            $(image).css(cssParams);\n        }\n    }\n\n    // image load directive TODO: remove to pipImageUtils\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\n                const callback = $parse(attrs.pipImageLoad);\n\n                element.bind('load', (event) => {\n                    callback(scope, {\n                        $event: event\n                    });\n                });\n            }\n        }\n    }\n\n    angular\n        .module('pipDashboard')\n        .service('pipWidgetTemplate', widgetTemplateService)\n        .directive('pipImageLoad', ImageLoad);\n}","export interface IDashboardWidget {\n    options: any;\n    color: string;\n    size: Object | string | number;\n}\n\nexport class DashboardWidget implements IDashboardWidget {\n    public options: any;\n    public color: string;\n    public size: Object | string | number;\n\n    constructor() { }\n}","angular.module('pipWidget', []);\n\nimport './calendar/WidgetCalendar';\nimport './event/WidgetEvent';\nimport './menu/WidgetMenuService';\nimport './menu/WidgetMenuDirective';\nimport './notes/WidgetNotes';\nimport './position/WidgetPosition';\nimport './statistics/WidgetStatistics';\nimport './picture_slider/WidgetPictureSlider';\n","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\n{\n  class CalendarWidgetController extends MenuWidgetService {\n    constructor(\n      private pipWidgetConfigDialogService: IWidgetConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n        this.menu.push({\n          title: 'Configurate',\n          click: () => {\n            this.onConfigClick();\n          }\n        });\n        this.options.date = this.options.date || new Date();\n        this.color = this.options.color || 'blue';\n      }\n    }\n\n    private onConfigClick() {\n      this.pipWidgetConfigDialogService.show({\n        dialogClass: 'pip-calendar-config',\n        locals: {\n          color: this.color,\n          size: this.options.size,\n          date: this.options.date,\n        },\n        extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n\n        this.color = result.color;\n        this.options.color = result.color;\n        this.options.date = result.date;\n      });\n    }\n\n  }\n\n  const CalendarWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions',\n    },\n    controller: CalendarWidgetController,\n    templateUrl: 'widgets/calendar/WidgetCalendar.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipCalendarWidget', CalendarWidget);\n\n}","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService'; \n{\n  class EventWidgetController extends MenuWidgetService {\n    private _oldOpacity: number;\n\n    public opacity: number = 0.57;\n\n    constructor(\n      $scope: ng.IScope,\n      private $element: JQuery,\n      private $timeout: angular.ITimeoutService,\n      private pipWidgetConfigDialogService: IWidgetConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.color = this.options.color || 'gray';\n      this.opacity = this.options.opacity || this.opacity;\n\n      this.drawImage();\n\n      // TODO it doesn't work\n      $scope.$watch(() => {\n        return $element.is(':visible');\n      }, (newVal) => {\n        this.drawImage();\n      });\n    }\n\n    private drawImage() {\n      if (this.options.image) {\n        this.$timeout(() => {\n          this.onImageLoad(this.$element.find('img'));\n        }, 500);\n      }\n    }\n\n    private onConfigClick() {\n      this._oldOpacity = _.clone(this.opacity);\n      this.pipWidgetConfigDialogService.show({\n        dialogClass: 'pip-calendar-config',\n        locals: {\n          color: this.color,\n          size: this.options.size || {\n            colSpan: 1,\n            rowSpan: 1\n          },\n          date: this.options.date,\n          title: this.options.title,\n          text: this.options.text,\n          opacity: this.opacity,\n          onOpacitytest: (opacity) => {\n            this.opacity = opacity;\n          }\n        },\n        extensionUrl: 'widgets/event/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n\n        this.color = result.color;\n        this.options.color = result.color;\n        this.options.date = result.date;\n        this.options.title = result.title;\n        this.options.text = result.text;\n        this.options.opacity = result.opacity;\n      }, () => {\n        this.opacity = this._oldOpacity;\n      });\n    }\n\n    private onImageLoad(image) {\n      this.setImageMarginCSS(this.$element.parent(), image);\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      if (this.options.image) {\n        this.$timeout(() => {\n          this.setImageMarginCSS(this.$element.parent(), this.$element.find('img'));\n        }, 500);\n      }\n    }\n\n    // Later replace by pipImageUtils sevice's function\n    private setImageMarginCSS($element, image) {\n      let\n        containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\n        containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\n        imageWidth = image[0].naturalWidth || image.width,\n        imageHeight = image[0].naturalHeight || image.height,\n        margin = 0,\n        cssParams = {};\n\n      if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n        margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n        cssParams['margin-left'] = '' + margin + 'px';\n        cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n        cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n        cssParams['margin-top'] = '';\n      } else {\n        margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n        cssParams['margin-top'] = '' + margin + 'px';\n        cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n        cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n        cssParams['margin-left'] = '';\n      }\n\n      image.css(cssParams);\n    }\n  }\n\n\n  const EventWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: EventWidgetController,\n    templateUrl: 'widgets/event/WidgetEvent.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipEventWidget', EventWidget);\n}","(() => {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .directive('pipMenuWidget', pipMenuWidget);\n\n  function pipMenuWidget() {\n    return {\n      restrict        : 'EA',\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\n    };\n  }\n})();\n","import { DashboardWidget } from '../WidgetClass';\n\nexport class MenuWidgetService extends DashboardWidget {\n  public menu: any = [{\n    title: 'Change Size',\n    action: angular.noop,\n    submenu: [{\n        title: '1 x 1',\n        action: 'changeSize',\n        params: {\n          sizeX: 1,\n          sizeY: 1\n        }\n      },\n      {\n        title: '2 x 1',\n        action: 'changeSize',\n        params: {\n          sizeX: 2,\n          sizeY: 1\n        }\n      },\n      {\n        title: '2 x 2',\n        action: 'changeSize',\n        params: {\n          sizeX: 2,\n          sizeY: 2\n        }\n      }\n    ]\n  }];\n\n  constructor() {\n    \"ngInject\";\n\n    super();\n  }\n\n  public callAction(actionName, params, item) {\n    if (this[actionName]) {\n      this[actionName].call(this, params);\n    }\n\n    if (item['click']) {\n      item['click'].call(item, params, this);\n    }\n  };\n\n  public changeSize(params) {\n    this.options.size.colSpan = params.sizeX;\n    this.options.size.rowSpan = params.sizeY;\n  };\n}\n\n{\n  class MenuWidgetProvider {\n    private _service: MenuWidgetService;\n\n    constructor() {}\n\n    public $get() {\n      \"ngInject\";\n\n      if (this._service == null)\n        this._service = new MenuWidgetService();\n\n      return this._service;\n    }\n  }\n\n  angular\n    .module('pipWidget')\n    .provider('pipWidgetMenu', MenuWidgetProvider);\n}","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\n{\n  class NotesWidgetController extends MenuWidgetService {\n\n    constructor(\n      private pipWidgetConfigDialogService: IWidgetConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.color = this.options.color || 'orange';\n    }\n\n    private onConfigClick() {\n      this.pipWidgetConfigDialogService.show({\n        dialogClass: 'pip-calendar-config',\n        locals: {\n          color: this.color,\n          size: this.options.size,\n          title: this.options.title,\n          text: this.options.text,\n        },\n        extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.color = result.color;\n        this.options.color = result.color;\n        this.changeSize(result.size);\n        this.options.text = result.text;\n        this.options.title = result.title;\n      });\n    }\n  }\n\n  const NotesWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: NotesWidgetController,\n    templateUrl: 'widgets/notes/WidgetNotes.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipNotesWidget', NotesWidget);\n}","'use strict';\n\nimport {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\nimport {\n  IWidgetTemplateService\n} from '../../utility/WidgetTemplateUtility';\n\n{\n  class PictureSliderController extends MenuWidgetService {\n    public animationType: string = 'fading';\n    public animationInterval: number = 5000;\n\n    constructor(\n      private $scope: angular.IScope,\n      private $element: any,\n      private $timeout: angular.ITimeoutService,\n      private pipWidgetConfigDialogService: IWidgetConfigService,\n      private pipWidgetTemplate: IWidgetTemplateService\n    ) {\n      super();\n\n      if (this.options) {\n        this.animationType = this.options.animationType || this.animationType;\n        this.animationInterval = this.options.animationInterval || this.animationInterval;\n      }\n    }\n\n    public onImageLoad($event) {\n      this.$timeout(() => {\n        this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), $event.target);\n      });\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.$timeout(() => {\n        _.each(this.$element.find('img'), (image) => {\n          this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), image);\n        });\n      }, 500);\n    }\n  }\n\n  const PictureSliderWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: PictureSliderController,\n    templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipPictureSliderWidget', PictureSliderWidget);\n}","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\n{\n  class PositionWidgetController extends MenuWidgetService {\n    public showPosition: boolean = true;\n\n    constructor(\n      $scope: angular.IScope,\n      private $timeout: angular.ITimeoutService,\n      private $element: any,\n      private pipWidgetConfigDialogService: IWidgetConfigService,\n      private pipLocationEditDialog: any,\n    ) {\n      super();\n\n      if (this.options) {\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.menu.push({\n        title: 'Change location',\n        click: () => {\n          this.openLocationEditDialog();\n        }\n      });\n\n      this.options.location = this.options.location || this.options.position;\n\n      $scope.$watch('widgetCtrl.options.location', () => {\n        this.reDrawPosition();\n      });\n\n      // TODO it doesn't work\n      $scope.$watch(() => {\n        return $element.is(':visible');\n      }, (newVal) => {\n        if (newVal == true) this.reDrawPosition();\n      });\n    }\n\n    private onConfigClick() {\n      this.pipWidgetConfigDialogService.show({\n        dialogClass: 'pip-position-config',\n        locals: {\n          size: this.options.size,\n          locationName: this.options.locationName,\n          hideColors: true,\n        },\n        extensionUrl: 'widgets/position/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n        this.options.locationName = result.locationName;\n      });\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.reDrawPosition();\n    }\n\n    public openLocationEditDialog() {\n      this.pipLocationEditDialog.show({\n        locationName: this.options.locationName,\n        locationPos: this.options.location\n      }, (newPosition) => {\n        if (newPosition) {\n          this.options.location = newPosition.location;\n          this.options.locationName = newPosition.locatioName;\n        }\n      });\n    }\n\n    private reDrawPosition() {\n      this.showPosition = false;\n      this.$timeout(() => {\n        this.showPosition = true;\n      }, 50);\n    }\n  }\n\n\n  const PositionWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions',\n      index: '=',\n      group: '='\n    },\n    controller: PositionWidgetController,\n    templateUrl: 'widgets/position/WidgetPosition.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipPositionWidget', PositionWidget);\n}","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\n\n{\n  const SMALL_CHART: number = 70;\n  const BIG_CHART: number = 250;\n\n  class StatisticsWidgetController extends MenuWidgetService {\n    private _$scope: angular.IScope;\n    private _$timeout: angular.ITimeoutService;\n\n    public reset: boolean = false;\n    public chartSize: number = SMALL_CHART;\n\n    constructor(\n      pipWidgetMenu: any,\n      $scope: angular.IScope,\n      $timeout: angular.ITimeoutService\n    ) {\n      super();\n      this._$scope = $scope;\n      this._$timeout = $timeout;\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n      }\n\n      this.setChartSize();\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.reset = true;\n      this.setChartSize();\n      this._$timeout(() => {\n        this.reset = false;\n      }, 500);\n    }\n\n    private setChartSize() {\n      this.chartSize = this.options.size.colSpan == 2 && this.options.size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\n    }\n  }\n\n\n  const StatisticsWidget: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: StatisticsWidgetController,\n    templateUrl: 'widgets/statistics/WidgetStatistics.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipStatisticsWidget', StatisticsWidget);\n}","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"$ctrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"$ctrl.groupedWidgets\" pip-tiles-context=\"$ctrl.widgetsContext\" pip-draggable-grid=\"$ctrl.draggableGridOptions\" pip-group-menu-actions=\"$ctrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in $ctrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"$ctrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"$ctrl.onBlurTitleInput(group)\" ng-keypress=\"$ctrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"$ctrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in $ctrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.params.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ $ctrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ $ctrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ $ctrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><img ng-if=\"$ctrl.options.image\" ng-src=\"{{$ctrl.options.image}}\" alt=\"{{$ctrl.options.title || $ctrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ $ctrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"$ctrl.options.date\">{{ $ctrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ $ctrl.options.text || $ctrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"$ctrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"$ctrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"$ctrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ $ctrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"$ctrl.options.title || $ctrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span></div><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ $ctrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ $ctrl.options.title }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!$ctrl.options.locationName\"><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"$ctrl.options.locationName\"><span class=\"flex text-overflow\">{{ $ctrl.options.locationName }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"$ctrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"$ctrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.series && !$ctrl.reset\"><pip-pie-chart pip-series=\"$ctrl.options.series\" ng-if=\"!$ctrl.options.chartType || $ctrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"$ctrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}