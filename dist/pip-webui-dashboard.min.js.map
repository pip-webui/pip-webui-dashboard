{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableComponent.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","pipDashboard","bindings","gridOptions","groupAdditionalActions","groupedWidgets","controller","controllerAs","templateUrl","component","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","$inject","DEFAULT_GRID_OPTIONS","draggableOptions","tileWidth","tileHeight","gutter","inline","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","callback","groupIndex","_this","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","splice","_$scope","_$rootScope","_$attrs","_$element","_$timeout","_$interpolate","_pipAddComponentDialog","_pipWidgetTemplate","addClass","draggableGridOptions","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","data","activeGroup","addWidgets","widgets","push","widgetGroup","forEach","apply","Array","type","options","DashboardController","4","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","totalWidgets","_","isNumber","defaultWidgets","cloneDeep","add","hide","cancel","encrease","widgetIndex","decrease","./AddComponentProvider","5","AddComponentDialogController_1","DASHBOARD_ADD_COMPONENT_DIALOG_TITLE","DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS","DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP","AddComponentDialogService","bindToController","AddComponentDialogProvider","_widgetList","list","$get","_service","provider","6","TileColors","all","TileSizes","id","WidgetConfigDialogController","colors","sizes","sizeId","onCancel","onApply","updatedData","sizeX","Number","substr","sizeY","./ConfigDialogService","7","WidgetConfigExtendComponentBindings","pipExtensionUrl","pipDialogScope","pipApply","WidgetConfigExtendComponentChanges","WidgetConfigExtendComponentController","$templateRequest","$compile","$onChanges","changes","currentValue","then","html","find","replaceWith","pipWidgetConfigComponent","8","DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE","WidgetConfigDialogService","successCallback","cancelCallback","targetEvent","event","ConfigDialogController_1","clickOutsideToClose","key","config","service","./DraggableComponent","./DraggableTileService","./draggable_group/DraggableTilesGroupDirective","./draggable_group/DraggableTilesGroupService","10","DraggableTileService_1","DraggableTilesGroupService_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","merge","breakpoints","xs","tilesTemplates","tile","tileScope","createTileScope","IDragTileConstructor","DragTileService","tpl","$watch","newVal","watch","debounce","getContainerWidth","availableColumns","getAvailableColumns","availableWidth","tileGroups","setAvailableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","$postLink","$container","prevVal","changedGroupIndex","addGroup","removeGroups","newTiles","slice","groupWidgetDiff","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","draggableCtrl","onKyepressTitleInput","keyCode","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","value","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","$new","tilesContext","undefined","indexes","container","tiles","remove","gIndex","child","element","scope","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","addTile","newTile","append","getCompiledTemplate","appendTo","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","mobileBreakpoint","floor","getActiveGroupAndTile","active","foundTile","getTileByNode","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","belowElement","getTileByCoordinates","pageX","pageY","getTileIndex","belowElemIndex","draggedTileIndex","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","isSameDropzone","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","draggable","autoScroll","onmove","dropzone","ondropdeactivate","ondragleave","on","interact","trigger","DragComponent","11","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","zIndex","after","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","DraggableTileLink","$elem","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","restrict","directive","13","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","rightCornerCell","basicCol","getBasicRow","leftCornerCell","getCell","gridCopy","basicRow","rowShift","prevTileSize","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","generateCells","newCellCount","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","newGrid","widgetTemplateService","_$compile","_$templateRequest","strictCompile","result","interpolated","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","$parse","link","attrs","pipImageLoad","$event","ImageLoad","15","./event/WidgetEvent","./menu/WidgetMenuDirective","./menu/WidgetMenuService","./notes/WidgetNotes","./picture_slider/WidgetPictureSlider","./position/WidgetPosition","./statistics/WidgetStatistics","16","__extends","d","b","__","p","hasOwnProperty","Object","create","_super","pipWidgetMenu","pipWidgetConfigDialogService","_configDialog","union","onConfigClick","date","Date","color","dialogClass","extensionUrl","changeSize","CalendarWidgetController","WidgetMenuService_1","MenuWidgetService","pipCalendarWidget","17","EventWidgetController","opacity","drawImage","is","onImageLoad","_oldOpacity","text","onOpacitytest","pipEventWidget","18","pipMenuWidget","noop","action","callAction","actionName","MenuWidgetProvider","20","NotesWidgetController","pipNotesWidget","21","PictureSliderController","animationType","animationInterval","_widgetUtility","pipPictureSliderWidget","22","pipLocationEditDialog","showPosition","_locationDialog","openLocationEditDialog","location","position","reDrawPosition","PositionWidgetController","locationName","hideColors","locationPos","newPosition","locatioName","pipPositionWidget","../menu/WidgetMenuService","23","StatisticsWidgetController","reset","chartSize","SMALL_CHART","setChartSize","BIG_CHART","pipStatisticsWidget","24","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\r\nimport './draggable/Draggable';\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('pipDashboard', [\r\n    'pipWidget', \r\n    'pipDragged', \r\n    'pipWidgetConfigDialog', \r\n    'pipAddDashboardComponentDialog',\r\n    'pipDashboard.Templates',\r\n\r\n    // External pip modules\r\n    'pipLayout',\r\n    'pipLocations',\r\n    'pipDateTime',\r\n    'pipCharts',\r\n    'pipTranslate',\r\n    'pipControls'\r\n  ]);\r\n  \r\n})();\r\n\r\nimport './utility/WidgetTemplateUtility';\r\nimport './dialogs/widget_config/ConfigDialogController';\r\nimport './dialogs/add_component/AddComponentDialogController';\r\nimport './DashboardController';\r\nimport './DashboardComponent';\r\n","(function () {\r\n  'use strict';\r\n\r\n  const pipDashboard: ng.IComponentOptions = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: 'pipDashboardCtrl',\r\n    controllerAs: 'dashboardCtrl',\r\n    templateUrl: 'Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipDashboard', pipDashboard);\r\n})();","'use strict';\r\n\r\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\r\nimport { IAddComponentDialogService, IAddComponentDialogprovider } from './dialogs/add_component/AddComponentProvider'\r\n\r\nfunction setTranslations($injector: ng.auto.IInjectorService) {\r\n  const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n  if (pipTranslate) {\r\n    (<any>pipTranslate).setTranslations('en', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n    });\r\n    (<any>pipTranslate).setTranslations('ru', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n    });\r\n  }\r\n}\r\n\r\nfunction configureAvailableWidgets(pipAddComponentDialogProvider: IAddComponentDialogprovider) {\r\n  pipAddComponentDialogProvider.configWidgetList([\r\n    [{\r\n        title: 'Event',\r\n        icon: 'document',\r\n        name: 'event',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Position',\r\n        icon: 'location',\r\n        name: 'position',\r\n        amount: 0\r\n      }\r\n    ],\r\n    [{\r\n        title: 'Calendar',\r\n        icon: 'date',\r\n        name: 'calendar',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Sticky Notes',\r\n        icon: 'note-take',\r\n        name: 'notes',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Statistics',\r\n        icon: 'tr-statistics',\r\n        name: 'statistics',\r\n        amount: 0\r\n      }\r\n    ]\r\n  ]);\r\n}\r\n\r\nclass draggableOptions {\r\n  tileWidth: number;\r\n  tileHeight: number;\r\n  gutter: number;\r\n  inline: boolean;\r\n}\r\n\r\nconst DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n  tileWidth: 150, // 'px'\r\n  tileHeight: 150, // 'px'\r\n  gutter: 10, // 'px'\r\n  inline: false\r\n};\r\n\r\nclass DashboardController implements ng.IController {\r\n  private defaultGroupMenuActions: any = [{\r\n      title: 'Add Component',\r\n      callback: (groupIndex) => {\r\n        this.addComponent(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Remove',\r\n      callback: (groupIndex) => {\r\n        this.removeGroup(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Configurate',\r\n      callback: (groupIndex) => {\r\n        console.log('configurate group with index:', groupIndex);\r\n      }\r\n    }\r\n  ];\r\n  private _$scope: angular.IScope;\r\n  private _$rootScope: angular.IRootScopeService;\r\n  private _$attrs: any;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _$interpolate: angular.IInterpolateService;\r\n  private _pipAddComponentDialog: IAddComponentDialogService;\r\n  private _pipWidgetTemplate: IWidgetTemplateService;\r\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\r\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n    '</pip-{{ type }}-widget>';\r\n\r\n  public groupedWidgets: any;\r\n  public draggableGridOptions: draggableOptions;\r\n  public widgetsTemplates: any;\r\n  public groupMenuActions: any = this.defaultGroupMenuActions;\r\n  public widgetsContext: any;\r\n\r\n  constructor(\r\n    $scope: angular.IScope,\r\n    $rootScope: angular.IRootScopeService,\r\n    $attrs: any,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    $interpolate: angular.IInterpolateService,\r\n    pipAddComponentDialog: IAddComponentDialogService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    this._$scope = $scope;\r\n    this._$rootScope = $rootScope;\r\n    this._$attrs = $attrs;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._$interpolate = $interpolate;\r\n    this._pipAddComponentDialog = pipAddComponentDialog;\r\n    this._pipWidgetTemplate = pipWidgetTemplate;\r\n\r\n    // Add class to style scroll bar\r\n    $element.addClass('pip-scroll');\r\n\r\n    // Set tiles grid options\r\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\r\n\r\n    // Switch inline displaying\r\n    if (this.draggableGridOptions.inline === true) {\r\n      $element.addClass('inline-grid');\r\n    }\r\n    // Extend group's menu actions\r\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\r\n\r\n    // Compile widgets\r\n    this.widgetsContext = $scope;\r\n    this.compileWidgets();\r\n\r\n    this._$timeout(() => {\r\n      this._$element.addClass('visible');\r\n    }, 700);\r\n  }\r\n\r\n  private compileWidgets() {\r\n    _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n        group.source = group.source.map((widget, index) => {\r\n          // Establish default props\r\n          widget.size = widget.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          };\r\n          widget.index = index;\r\n          widget.groupIndex = groupIndex;\r\n          widget.menu = widget.menu || {};\r\n          angular.extend(widget.menu, [{\r\n            title: 'Remove',\r\n            click: (item, params, object) => {\r\n              this.removeWidget(item, params, object);\r\n            }\r\n          }]);\r\n\r\n          return {\r\n            opts: widget,\r\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\r\n          };\r\n        })\r\n    });\r\n  }\r\n\r\n  public addComponent(groupIndex) {\r\n    this._pipAddComponentDialog\r\n      .show(this.groupedWidgets, groupIndex)\r\n      .then((data) => {\r\n        var activeGroup;\r\n\r\n        if (!data) {\r\n          return;\r\n        }\r\n\r\n        if (data.groupIndex !== -1) {\r\n          activeGroup = this.groupedWidgets[data.groupIndex];\r\n        } else {\r\n          activeGroup = {\r\n            title: 'New group',\r\n            source: []\r\n          };\r\n        }\r\n\r\n        this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n        if (data.groupIndex === -1) {\r\n          this.groupedWidgets.push(activeGroup);\r\n        }\r\n\r\n        this.compileWidgets();\r\n      });\r\n  };\r\n\r\n  public removeGroup = (groupIndex) => {\r\n    console.log('removeGroup', groupIndex);\r\n    this.groupedWidgets.splice(groupIndex, 1);\r\n  }\r\n\r\n  private addWidgets(group, widgets) {\r\n    widgets.forEach((widgetGroup) => {\r\n      widgetGroup.forEach((widget) => {\r\n        if (widget.amount) {\r\n          Array.apply(null, Array(widget.amount)).forEach(() => {\r\n            group.push({\r\n              type: widget.name\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private removeWidget(item, params, object) {\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n    this._$timeout(() => {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    });\r\n  }\r\n\r\n}\r\n\r\nangular\r\n  .module('pipDashboard')\r\n  .config(configureAvailableWidgets)\r\n  .config(setTranslations)\r\n  .controller('pipDashboardCtrl', DashboardController);","export class widget {\r\n    title: string;\r\n    icon: string;\r\n    name: string;\r\n    amount: number;\r\n}\r\n\r\nexport class AddComponentDialogController implements ng.IController {\r\n    public defaultWidgets: [widget[]];\r\n    public groups: any;\r\n    public totalWidgets: number = 0;\r\n\r\n    constructor(\r\n        groups, // Later may be group type\r\n        public activeGroupIndex: number,\r\n        widgetList: [widget[]],\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultWidgets = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n            return group['title'];\r\n        });\r\n    }\r\n\r\n    public add() {\r\n        this.$mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets: this.defaultWidgets\r\n        });\r\n    };\r\n\r\n    public cancel() {\r\n        this.$mdDialog.cancel();\r\n    };\r\n\r\n    public encrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount++;\r\n        this.totalWidgets++;\r\n    };\r\n\r\n    public decrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n        this.totalWidgets = this.totalWidgets ? this.totalWidgets - 1 : 0;\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipAddDashboardComponentDialog', ['ngMaterial']);\r\n\r\nimport './AddComponentProvider';","import {\r\n  widget,\r\n  AddComponentDialogController\r\n} from './AddComponentDialogController';\r\n\r\nexport interface IAddComponentDialogService {\r\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\r\n}\r\n\r\nexport interface IAddComponentDialogprovider {\r\n  configWidgetList(list: [widget[]]): void;\r\n}\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  function setTranslations($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      (<any>pipTranslate).setTranslations('en', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Add component',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Create new group'\r\n      });\r\n      (<any>pipTranslate).setTranslations('ru', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Добавить компонент',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\r\n      });\r\n    }\r\n  }\r\n\r\n  class AddComponentDialogService implements IAddComponentDialogService {\r\n\r\n    public constructor(\r\n      private widgetList: [widget[]],\r\n      private $mdDialog: angular.material.IDialogService\r\n    ) {}\r\n\r\n    public show(groups, activeGroupIndex) {\r\n      return this.$mdDialog\r\n        .show({\r\n          templateUrl: 'dialogs/add_component/AddComponent.html',\r\n          bindToController: true,\r\n          controller: AddComponentDialogController,\r\n          controllerAs: 'dialogCtrl',\r\n          clickOutsideToClose: true,\r\n          resolve: {\r\n            groups: () => {\r\n              return groups;\r\n            },\r\n            activeGroupIndex: () => {\r\n              return activeGroupIndex;\r\n            },\r\n            widgetList: () => {\r\n              return (<any>this.widgetList);\r\n            }\r\n          }\r\n        });\r\n    };\r\n  }\r\n\r\n  class AddComponentDialogProvider implements IAddComponentDialogprovider {\r\n    private _service: AddComponentDialogService;\r\n    private _widgetList: [widget[]] = null;\r\n\r\n    constructor() {}\r\n\r\n    public configWidgetList = function (list: [widget[]]) {\r\n      this._widgetList = list;\r\n    };\r\n\r\n    public $get($mdDialog: angular.material.IDialogService) {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .config(setTranslations)\r\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\r\n})();","\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [{\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL',\r\n            id: '11'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE',\r\n            id: '21'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE',\r\n            id: '22'\r\n        }\r\n    ];\r\n}\r\n\r\nexport class WidgetConfigDialogController {\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n    public onCancel: Function;\r\n\r\n    constructor(\r\n        public params,\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n\r\n        this.onCancel = () => {\r\n            this.$mdDialog.cancel();\r\n        }\r\n    }\r\n\r\n    public onApply(updatedData) {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(updatedData);\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipWidgetConfigDialog', ['ngMaterial']);\r\n\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","\r\n(function() {\r\n    'use strict';\r\n    \r\n    interface IWidgetConfigExtendComponentBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtensionUrl: any;\r\n        pipDialogScope: any;\r\n        pipApply: any;\r\n    }\r\n\r\n    const WidgetConfigExtendComponentBindings: IWidgetConfigExtendComponentBindings = {\r\n        pipExtensionUrl: '<',\r\n        pipDialogScope: '<',\r\n        pipApply: '&'\r\n    }\r\n\r\n    class WidgetConfigExtendComponentChanges implements ng.IOnChangesObject, IWidgetConfigExtendComponentBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        pipExtensionUrl: ng.IChangesObject<string>;\r\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\r\n\r\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\r\n    }\r\n\r\n    interface IWidgetConfigExtendComponentAttributes extends ng.IAttributes {\r\n        pipExtensionUrl: string\r\n    }\r\n\r\n    class WidgetConfigExtendComponentController implements IWidgetConfigExtendComponentBindings {\r\n        public pipExtensionUrl: string;\r\n        public pipDialogScope: ng.IScope;\r\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\r\n\r\n        constructor(\r\n            private $templateRequest: angular.ITemplateRequestService,\r\n            private $compile: angular.ICompileService,\r\n            private $scope: angular.IScope, \r\n            private $element: JQuery, \r\n            private $attrs: IWidgetConfigExtendComponentAttributes\r\n        ) { }\r\n\r\n        public $onChanges(changes: WidgetConfigExtendComponentChanges) {\r\n            if (changes.pipDialogScope) {\r\n                angular.extend(this, changes.pipDialogScope.currentValue);\r\n            }\r\n            if (changes.pipExtensionUrl) {\r\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\r\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\r\n                });\r\n            }\r\n        }\r\n\r\n        public onApply() {\r\n            this.pipApply({updatedData: this});\r\n        }\r\n    }\r\n\r\n    const pipWidgetConfigComponent: ng.IComponentOptions = {\r\n        templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\r\n        controller: WidgetConfigExtendComponentController,\r\n        bindings: WidgetConfigExtendComponentBindings\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .component('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\r\n})();","import { WidgetConfigDialogController } from './ConfigDialogController';\r\n\r\nexport interface IWidgetConfigService {\r\n    show(params: any, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\r\n}\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    function setTranslations($injector: ng.auto.IInjectorService) {\r\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Edit tile',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Small',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Large'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Изменить виджет',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\r\n            });\r\n        }\r\n    }\r\n\r\n    class WidgetConfigDialogService {\r\n        public constructor(\r\n            public $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params, successCallback ? : (key) => void, cancelCallback ? : () => void) {\r\n            this.$mdDialog.show({\r\n                    targetEvent: params.event,\r\n                    templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\r\n                    controller: WidgetConfigDialogController,\r\n                    controllerAs: 'vm',\r\n                    locals: {\r\n                        params: params\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((key) => {\r\n                    if (successCallback) {\r\n                        successCallback(key);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .config(setTranslations)\r\n        .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\r\n\r\n})();","angular.module('pipDragged', []);\r\n\r\nimport './DraggableTileService';\r\nimport './DraggableComponent';\r\nimport './draggable_group/DraggableTilesGroupService'\r\nimport './draggable_group/DraggableTilesGroupDirective'","declare var interact;\r\n\r\nimport {\r\n  DragTileService,\r\n  IDragTileService,\r\n  IDragTileConstructor\r\n} from './DraggableTileService';\r\nimport {\r\n  TilesGridService,\r\n  ITilesGridService,\r\n  ITilesGridConstructor\r\n} from './draggable_group/DraggableTilesGroupService';\r\n\r\nexport const DEFAULT_TILE_WIDTH: number = 150;\r\nexport const DEFAULT_TILE_HEIGHT: number = 150;\r\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nconst DEFAULT_OPTIONS = {\r\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\r\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\r\n  gutter: 20, // 'px'\r\n  container: 'pip-draggable-grid:first-of-type',\r\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n  activeDropzoneClass: 'dropzone-active',\r\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\n{\r\n  interface IDraggableControllerScope extends ng.IScope {\r\n    draggableCtrl: any;\r\n    $container: JQuery;\r\n  }\r\n\r\n  interface ITileScope extends ng.IScope {\r\n    index: number | string;\r\n    groupIndex: number | string;\r\n  }\r\n\r\n  class DraggableController implements ng.IComponentController {\r\n    public opts: any;\r\n    public groups: any;\r\n    public sourceDropZoneElem: any = null;\r\n    public isSameDropzone: boolean = true;\r\n    public tileGroups: any = null;\r\n    public availableWidth: number;\r\n    public availableColumns: number;\r\n    public groupsContainers: any;\r\n    public container: any;\r\n    public activeDraggedGroup: any;\r\n    public draggedTile: any;\r\n    public containerOffset: any;\r\n\r\n    constructor(\r\n      private $scope: IDraggableControllerScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $compile: angular.ICompileService,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: JQuery,\r\n      pipDragTile: IDragTileService,\r\n      pipTilesGrid: ITilesGridService,\r\n      pipMedia: pip.layouts.IMediaService\r\n    ) {\r\n      this.opts = _.merge({\r\n        mobileBreakpoint: pipMedia.breakpoints.xs\r\n      }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\r\n\r\n      this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\r\n        return {\r\n          title: group.title,\r\n          editingName: false,\r\n          index: groupIndex,\r\n          source: group.source.map((tile) => {\r\n            const tileScope = this.createTileScope(tile);\r\n\r\n            return IDragTileConstructor(DragTileService, {\r\n              tpl: $compile(tile.template)(tileScope),\r\n              options: tile.opts,\r\n              size: tile.opts.size\r\n            });\r\n          })\r\n        };\r\n      });\r\n\r\n      // Add templates watcher\r\n      $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\r\n        this.watch(newVal);\r\n      }, true);\r\n\r\n      // Initialize data\r\n      this.initialize();\r\n\r\n      // Resize handler TODO: replace by pip resize watchers\r\n      $(window).on('resize', _.debounce(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n        this.tileGroups.forEach((group) => {\r\n          group\r\n            .setAvailableColumns(this.availableColumns)\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight();\r\n        });\r\n      }, 50));\r\n    }\r\n\r\n    // Post link function\r\n    public $postLink() {\r\n      this.$scope.$container = this.$element;\r\n    }\r\n\r\n    // Watch handler\r\n    private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n\r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this.$timeout(() => {\r\n          this.updateTilesGroups();\r\n        });\r\n      }\r\n    }\r\n\r\n    // Inline edit group handlers\r\n    public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this.$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n    }\r\n\r\n    public cancelEditing(group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput(group) {\r\n      this.$timeout(() => {\r\n        group.editingName = false;\r\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this.$scope.draggableCtrl.tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput(group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source ? : any) {\r\n      switch (updateType) {\r\n        case 'addGroup':\r\n          if (this.groups.length !== this.$scope.draggableCtrl.tilesTemplates.length) {\r\n            this.$scope.draggableCtrl.tilesTemplates.push(source);\r\n          }\r\n          break;\r\n        case 'moveTile':\r\n          const {\r\n            fromIndex,\r\n            toIndex,\r\n            tileOptions,\r\n            fromTileIndex\r\n          } = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this.$scope.draggableCtrl.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this.$scope.draggableCtrl.tilesTemplates[toIndex].source.push({\r\n            opts: tileOptions\r\n          });\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private createTileScope(tile: any): ITileScope {\r\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.$scope.draggableCtrl.tilesContext);\r\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\r\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      return tileScope;\r\n    }\r\n\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex ? ) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        const child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n        remain = [],\r\n        containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n        if (_.findIndex(newGroups, (g) => {\r\n            return g['title'] === group.title\r\n          }) < 0) {\r\n          removeIndexes.push(index);\r\n        } else {\r\n          remain.push(index);\r\n        }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n        this.groups.splice(index, 1);\r\n        this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n        containers.push(this.groupsContainers[index]);\r\n      });\r\n\r\n      this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n        this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      const group = {\r\n        title: sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          const tileScope = this.createTileScope(tile);\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl: this.$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size: tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this.$scope.$$phase) this.$scope.$apply();\r\n\r\n      this.$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this.createTileScope(tile);\r\n\r\n        const newTile = IDragTileConstructor(DragTileService, {\r\n          tpl: this.$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size: tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this.$scope.$container || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\r\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile'] = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n\r\n      this.$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top: event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this.$timeout(() => {\r\n          this.setGroupContainersHeight();\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this.$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top: containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this.createTileScope(tile);\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this.$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this.$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {\r\n        from: from,\r\n        to: to,\r\n        tile: movedTile\r\n      });\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({\r\n        title: 'New group',\r\n        source: []\r\n      });\r\n      this.$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this.$timeout(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            // enable autoScroll\r\n            autoScroll: true,\r\n            onstart: (event) => {\r\n              this.onDragStartListener(event)\r\n            },\r\n            onmove: (event) => {\r\n              this.onDragMoveListener(event)\r\n            },\r\n            onend: (event) => {\r\n              this.onDragEndListener()\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropToFictGroupListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          })\r\n\r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        this.$scope['$container']\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n      }, 0);\r\n    }\r\n\r\n  }\r\n\r\n  const DragComponent: ng.IComponentOptions = {\r\n    bindings: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    templateUrl: 'draggable/Draggable.html',\r\n    controllerAs: 'draggableCtrl',\r\n    controller: DraggableController\r\n  }\r\n\r\n  angular.module('pipDragged')\r\n    .component('pipDraggableGrid', DragComponent);\r\n}","'use strict';\r\n\r\nexport interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","{\r\n  interface DraggableTileAttributes extends ng.IAttributes {\r\n    pipDraggableTiles: any;\r\n  }\r\n\r\n  function DraggableTileLink(\r\n    $scope: ng.IScope,\r\n    $elem: JQuery,\r\n    $attr: DraggableTileAttributes\r\n  ) {\r\n    const docFrag = document.createDocumentFragment(),\r\n      group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n    group.forEach(function (tile) {\r\n      const tpl = wrapComponent(tile.getCompiledTemplate());\r\n      docFrag.appendChild(tpl);\r\n    });\r\n\r\n    $elem.append(docFrag);\r\n\r\n    function wrapComponent(elem) {\r\n      return $('<div>')\r\n        .addClass('pip-draggable-tile')\r\n        .append(elem)\r\n        .get(0);\r\n    }\r\n  }\r\n\r\n  function DraggableTile() {\r\n    return {\r\n      restrict: 'A',\r\n      link: DraggableTileLink\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('pipDragged')\r\n    .directive('pipDraggableTiles', DraggableTile);\r\n\r\n}","export interface TilesGridConstructor {\r\n  new(tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth ? ): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nconst MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      const prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell, col, row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    const self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth ? ): any {\r\n    const self = this,\r\n          tileWidth = singleTileWidth || this.opts.tileWidth,\r\n          offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let   colsInRow = 0,\r\n          rows = 0,\r\n          gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      const tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n      Array.apply(null, Array(newCellCount)).forEach(() => {\r\n        if (self.columns < colsInRow + 1) {\r\n          rows++;\r\n          colsInRow = 0;\r\n\r\n          self.gridCells.push(gridInRow);\r\n          gridInRow = [];\r\n        }\r\n\r\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n        // Describe grid cell size through block corners coordinates\r\n        gridInRow.push({\r\n          top: top,\r\n          left: left,\r\n          bottom: top + self.opts.tileHeight,\r\n          right: left + tileWidth,\r\n          row: rows,\r\n          col: colsInRow\r\n        });\r\n\r\n        colsInRow++;\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    const self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      const tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      const tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        const tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    const foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        const tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    const index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","export interface IWidgetTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n} \r\n\r\n{\r\n    class widgetTemplateService implements IWidgetTemplateService {\r\n        private _$interpolate: angular.IInterpolateService;\r\n        private _$compile: angular.ICompileService;\r\n        private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n        constructor(\r\n            $interpolate: angular.IInterpolateService,\r\n            $compile: angular.ICompileService,\r\n            $templateRequest: angular.ITemplateRequestService\r\n        ) {\r\n            this._$interpolate = $interpolate;\r\n            this._$compile = $compile;\r\n            this._$templateRequest = $templateRequest;\r\n        }\r\n\r\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n            const {\r\n                template,\r\n                templateUrl,\r\n                type\r\n            } = source;\r\n            let result;\r\n\r\n            if (type) {\r\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n                return strictCompile == true ?\r\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                    interpolated;\r\n            }\r\n\r\n            if (template) {\r\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n            }\r\n\r\n            if (templateUrl) {\r\n                this._$templateRequest(templateUrl, false).then((html) => {\r\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public setImageMarginCSS($element, image) {\r\n            let\r\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\r\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n                margin = 0,\r\n                cssParams = {};\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            $(image).css(cssParams);\r\n        }\r\n    }\r\n\r\n    // image load directive TODO: remove to pipImageUtils\r\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\r\n                const callback = $parse(attrs.pipImageLoad);\r\n\r\n                element.bind('load', (event) => {\r\n                    callback(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDashboard')\r\n        .service('pipWidgetTemplate', widgetTemplateService)\r\n        .directive('pipImageLoad', ImageLoad);\r\n}","(() => {\r\n  'use strict';\r\n\r\n  angular.module('pipWidget', []);\r\n})();\r\n\r\nimport './calendar/WidgetCalendar';\r\nimport './event/WidgetEvent';\r\nimport './menu/WidgetMenuService';\r\nimport './menu/WidgetMenuDirective';\r\nimport './notes/WidgetNotes';\r\nimport './position/WidgetPosition';\r\nimport './statistics/WidgetStatistics';\r\nimport './picture_slider/WidgetPictureSlider';\r\n","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\n{\r\n  class CalendarWidgetController extends MenuWidgetService {\r\n    private _$scope: angular.IScope;\r\n    private _configDialog: IWidgetConfigService;\r\n\r\n    public color: string = 'blue';\r\n\r\n    constructor(\r\n      pipWidgetMenu: any,\r\n      $scope: angular.IScope,\r\n      pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n        this.menu.push({\r\n          title: 'Configurate',\r\n          click: () => {\r\n            this.onConfigClick();\r\n          }\r\n        });\r\n        this['options'].date = this['options'].date || new Date();\r\n        this.color = this['options'].color || this.color;\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this._configDialog.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        color: this.color,\r\n        size: this['options'].size,\r\n        date: this['options'].date,\r\n        extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.color = result.color;\r\n        this['options'].color = result.color;\r\n        this.changeSize(result.size);\r\n        this['options'].date = result.date;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const pipCalendarWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n    },\r\n    controller: CalendarWidgetController,\r\n    controllerAs: 'widgetCtrl',\r\n    templateUrl: 'widgets/calendar/WidgetCalendar.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipCalendarWidget', pipCalendarWidget);\r\n\r\n}","import { MenuWidgetService} from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass EventWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _oldOpacity: number;\r\n\r\n  public color: string = 'gray';\r\n  public opacity: number = 0.57;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n    }});\r\n    this.color = this['options'].color || this.color;\r\n    this.opacity = this['options'].opacity || this.opacity;\r\n\r\n    this.drawImage();\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      this.drawImage();\r\n    });\r\n  }\r\n\r\n  private drawImage() {\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.onImageLoad(this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._oldOpacity = _.clone(this.opacity);\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\r\n      date: this['options'].date,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      opacity: this.opacity,\r\n      onOpacitytest: (opacity) => {\r\n        this.opacity = opacity;\r\n      },\r\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].date = result.date;\r\n      this['options'].title = result.title;\r\n      this['options'].text = result.text;\r\n      this['options'].opacity = result.opacity;\r\n    }, () => {\r\n      this.opacity = this._oldOpacity;\r\n    });\r\n  }\r\n\r\n  private onImageLoad(image) {\r\n    this.setImageMarginCSS(this._$element.parent(), image);\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  // Later replace by pipImageUtils sevice's function\r\n  private setImageMarginCSS($element, image) {\r\n    let\r\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n      imageWidth = image[0].naturalWidth || image.width,\r\n      imageHeight = image[0].naturalHeight || image.height,\r\n      margin = 0,\r\n      cssParams = {};\r\n\r\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n      cssParams['margin-left'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n      cssParams['margin-top'] = '';\r\n    } else {\r\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n      cssParams['margin-top'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n      cssParams['margin-left'] = '';\r\n    }\r\n\r\n    image.css(cssParams);\r\n  }\r\n}\r\n\r\n\r\n(() => {\r\n  let pipEventWidget =  {\r\n      bindings: {\r\n        options: '=pipOptions'\r\n      },\r\n      controller: EventWidgetController,\r\n      controllerAs: 'widgetCtrl',\r\n      templateUrl: 'widgets/event/WidgetEvent.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipEventWidget', pipEventWidget);\r\n})();","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .directive('pipMenuWidget', pipMenuWidget);\r\n\r\n  function pipMenuWidget() {\r\n    return {\r\n      restrict        : 'EA',\r\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\r\n    };\r\n  }\r\n})();\r\n","\r\nexport class MenuWidgetService {\r\n  public menu: any = [\r\n    {\r\n      title: 'Change Size',\r\n      action: angular.noop,\r\n      submenu: [{\r\n          title: '1 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 1,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 2',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 2\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\nclass MenuWidgetProvider {\r\n    private _service: MenuWidgetService;\r\n\r\n    constructor() {\r\n    }\r\n\r\n   public $get() {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new MenuWidgetService();\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .provider('pipWidgetMenu', MenuWidgetProvider);\r\n})();","'use strict';\r\n\r\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass NotesWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n\r\n  public color: string = 'orange';\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n      }});\r\n      this.color = this['options'].color || this.color;\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].text = result.text;\r\n      this['options'].title = result.title;\r\n    });\r\n  }\r\n}\r\n\r\n  let pipNotesWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      controller      : NotesWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipNotesWidget', pipNotesWidget);\r\n\r\n","'use strict';\r\n\r\nimport {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\nimport {\r\n  IWidgetTemplateService\r\n} from '../../utility/WidgetTemplateUtility';\r\n\r\nclass PictureSliderController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _widgetUtility: IWidgetTemplateService;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public animationType: string = 'fading';\r\n  public animationInterval: number = 5000;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._widgetUtility = pipWidgetTemplate;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    if (this['options']) {\r\n      this.animationType = this['options'].animationType || this.animationType;\r\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\r\n    }\r\n  }\r\n\r\n  public onImageLoad($event) {\r\n    this._$timeout(() => {\r\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this._$timeout(() => {\r\n      _.each(this._$element.find('img'), (image) => {\r\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\r\n      });\r\n    }, 500);\r\n  }\r\n}\r\n\r\nlet pipPictureSliderWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PictureSliderController,\r\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\r\n  controllerAs: 'widgetCtrl'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass PositionWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _locationDialog: any;\r\n\r\n  public showPosition: boolean = true;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService,\r\n    $element: any,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipLocationEditDialog: any,\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._locationDialog = pipLocationEditDialog;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({\r\n      title: 'Configurate',\r\n      click: () => {\r\n        this.onConfigClick();\r\n      }\r\n    });\r\n    this.menu.push({\r\n      title: 'Change location',\r\n      click: () => {\r\n        this.openLocationEditDialog();\r\n      }\r\n    });\r\n\r\n    this['options'].location = this['options'].location || this['options'].position;\r\n\r\n    $scope.$watch('widgetCtrl.options.location', () => {\r\n      this.reDrawPosition();\r\n    });\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      if (newVal == true) this.reDrawPosition();\r\n    });\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-position-config',\r\n      size: this['options'].size,\r\n      locationName: this['options'].locationName,\r\n      hideColors: true,\r\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.changeSize(result.size);\r\n      this['options'].locationName = result.locationName;\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reDrawPosition();\r\n  }\r\n\r\n  public openLocationEditDialog() {\r\n    this._locationDialog.show({\r\n      locationName: this['options'].locationName,\r\n      locationPos: this['options'].location\r\n    }, (newPosition) => {\r\n      if (newPosition) {\r\n        this['options'].location = newPosition.location;\r\n        this['options'].locationName = newPosition.locatioName;\r\n      }\r\n    });\r\n  }\r\n\r\n  private reDrawPosition() {\r\n    this.showPosition = false;\r\n    this._$timeout(() => {\r\n      this.showPosition = true;\r\n    }, 50);\r\n  }\r\n}\r\n\r\n\r\nlet pipPositionWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PositionWidgetController,\r\n  controllerAs: 'widgetCtrl',\r\n  templateUrl: 'widgets/position/WidgetPosition.html'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\r\n\r\nlet SMALL_CHART: number = 70;\r\nlet BIG_CHART: number = 250;\r\n\r\nclass StatisticsWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public reset: boolean = false;\r\n  public chartSize: number = SMALL_CHART;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reset = true;\r\n    this.setChartSize();\r\n    this._$timeout(() => {\r\n      this.reset = false;\r\n    }, 500);\r\n  }\r\n\r\n  private setChartSize() {\r\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n  }\r\n}\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  let pipStatisticsWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      bindToController: true,\r\n      controller      : StatisticsWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipStatisticsWidget', pipStatisticsWidget);\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.params.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}