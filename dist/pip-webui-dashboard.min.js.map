{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/add_component/index.ts","src/dialogs/index.ts","src/dialogs/tile_config/ConfigDialogController.ts","src/dialogs/tile_config/ConfigDialogExtendComponent.ts","src/dialogs/tile_config/ConfigDialogService.ts","src/dialogs/tile_config/index.ts","src/draggable/Draggable.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/draggable/index.ts","src/index.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/WidgetClass.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/index.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","$inject","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","DEFAULT_GRID_OPTIONS_1","draggableOptions","tileWidth","tileHeight","gutter","inline","DashboardController","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","_this","callback","groupIndex","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","groupedWidgets","splice","addClass","draggableGridOptions","gridOptions","groupAdditionalActions","angular","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","then","data","activeGroup","addWidgets","widgets","push","forEach","widgetGroup","Array","type","options","controller","templateUrl","config","2","AddComponentDialogWidget","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","totalWidgets","_","isNumber","defaultWidgets","cloneDeep","add","hide","cancel","encrease","widgetIndex","decrease","3","AddComponentDialogController_1","DASHBOARD_ADD_COMPONENT_DIALOG_TITLE","DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS","DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP","AddComponentDialogService_1","bindToController","AddComponentDialogProvider","_widgetList","list","$get","_service","4","./AddComponentProvider","5","./tile_config","6","TileColors","all","TileSizes","id","WidgetConfigDialogController","extensionUrl","colors","sizes","sizeId","onCancel","onApply","updatedData","sizeX","Number","substr","sizeY","WidgetConfigExtendComponentBindings","pipExtensionUrl","pipDialogScope","pipApply","WidgetConfigExtendComponentChanges","WidgetConfigExtendComponentController","$templateRequest","$compile","$onChanges","changes","currentValue","html","find","replaceWith","pipWidgetConfigComponent","component","8","DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE","DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE","WidgetConfigDialogService","successCallback","cancelCallback","event","ConfigDialogController_1","controllerAs","locals","clickOutsideToClose","key","service","./ConfigDialogController","9","./ConfigDialogExtendComponent","./ConfigDialogService","10","DraggableTileService_1","DraggableTilesGroupService_1","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","isSameDropzone","merge","breakpoints","xs","tilesTemplates","tile","tileScope","createTileScope","IDragTileConstructor","DragTileService","tpl","$watch","newVal","watch","debounce","getContainerWidth","getAvailableColumns","availableWidth","tileGroups","setAvailableColumns","availableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","$postLink","$container","prevVal","changedGroupIndex","addGroup","removeGroups","groupWidgetDiff","newTiles","slice","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","onKyepressTitleInput","keyCode","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","value","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","$new","tilesContext","undefined","indexes","container","tiles","remove","gIndex","child","element","scope","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","newTile","addTile","append","getCompiledTemplate","appendTo","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","mobileBreakpoint","Math","floor","getActiveGroupAndTile","foundTile","getTileByNode","active","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","belowElement","getTileByCoordinates","pageX","pageY","getTileIndex","draggedTileIndex","belowElemIndex","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","draggable","enabled","speed","onstart","onmove","onend","dropzone","ondrop","ondragenter","ondropdeactivate","ondragleave","on","interact","trigger","bindings","DragComponent","./DraggableTileService","./draggable_group/DraggableTilesGroupService","11","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","position","zIndex","after","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","DraggableTileLink","$elem","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","restrict","link","directive","13","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","leftCornerCell","basicCol","basicRow","getBasicRow","gridCopy","getCell","rowShift","prevTileSize","rightCornerCell","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","newCellCount","apply","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","generateCells","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","newGrid","14","./draggable_group/DraggableTilesGroupDirective","15","./dialogs/index","./draggable/index","./utility/WidgetTemplateUtility","./widgets/index","16","widgetTemplateService","_$interpolate","_$compile","_$templateRequest","strictCompile","result","interpolated","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","$parse","attrs","pipImageLoad","$event","ImageLoad","DashboardWidget","18","__extends","d","b","__","p","hasOwnProperty","Object","create","_super","pipWidgetConfigDialogService","union","onConfigClick","date","Date","color","dialogClass","changeSize","CalendarWidgetController","WidgetMenuService_1","MenuWidgetService","../menu/WidgetMenuService","19","opacity","drawImage","is","EventWidgetController","onImageLoad","text","onOpacitytest","_oldOpacity","EventWidget","20","./event/WidgetEvent","./menu/WidgetMenuDirective","./menu/WidgetMenuService","./notes/WidgetNotes","./picture_slider/WidgetPictureSlider","./position/WidgetPosition","./statistics/WidgetStatistics","21","22","noop","action","callAction","actionName","MenuWidgetProvider","../WidgetClass","23","NotesWidgetController","24","PictureSliderController","animationType","animationInterval","25","PositionWidgetController","pipLocationEditDialog","openLocationEditDialog","location","reDrawPosition","locationName","hideColors","locationPos","newPosition","locatioName","showPosition","PositionWidget","26","StatisticsWidgetController","pipWidgetMenu","chartSize","SMALL_CHART_1","_$scope","_$timeout","setChartSize","reset","BIG_CHART_1","StatisticsWidget","27","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {\r\n  IWidgetTemplateService\r\n} from './utility/WidgetTemplateUtility';\r\nimport {\r\n  IAddComponentDialogService,\r\n  IAddComponentDialogprovider\r\n} from './dialogs/add_component/AddComponentProvider'\r\n\r\n{\r\n  const setTranslations = function ($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      ( < any > pipTranslate).setTranslations('en', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n      });\r\n      ( < any > pipTranslate).setTranslations('ru', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n      });\r\n    }\r\n  }\r\n\r\n  const configureAvailableWidgets = function (pipAddComponentDialogProvider: IAddComponentDialogprovider) {\r\n    pipAddComponentDialogProvider.configWidgetList([\r\n      [{\r\n          title: 'Event',\r\n          icon: 'document',\r\n          name: 'event',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Position',\r\n          icon: 'location',\r\n          name: 'position',\r\n          amount: 0\r\n        }\r\n      ],\r\n      [{\r\n          title: 'Calendar',\r\n          icon: 'date',\r\n          name: 'calendar',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Sticky Notes',\r\n          icon: 'note-take',\r\n          name: 'notes',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Statistics',\r\n          icon: 'tr-statistics',\r\n          name: 'statistics',\r\n          amount: 0\r\n        }\r\n      ]\r\n    ]);\r\n  }\r\n\r\n  class draggableOptions {\r\n    tileWidth: number;\r\n    tileHeight: number;\r\n    gutter: number;\r\n    inline: boolean;\r\n  }\r\n\r\n  const DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n    tileWidth: 150, // 'px'\r\n    tileHeight: 150, // 'px'\r\n    gutter: 10, // 'px'\r\n    inline: false\r\n  };\r\n\r\n  interface DashboardBindings {\r\n      gridOptions: any;\r\n      groupAdditionalActions: any;\r\n      groupedWidgets: any;\r\n  }\r\n\r\n  class DashboardController implements ng.IController, DashboardBindings {\r\n    private defaultGroupMenuActions: any = [{\r\n        title: 'Add Component',\r\n        callback: (groupIndex) => {\r\n          this.addComponent(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Remove',\r\n        callback: (groupIndex) => {\r\n          this.removeGroup(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Configurate',\r\n        callback: (groupIndex) => {\r\n          console.log('configurate group with index:', groupIndex);\r\n        }\r\n      }\r\n    ];\r\n    private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\r\n      'pip-options=\"$parent.$ctrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n      '</pip-{{ type }}-widget>';\r\n\r\n    public groupedWidgets: any;\r\n    public draggableGridOptions: draggableOptions;\r\n    public widgetsTemplates: any;\r\n    public groupMenuActions: any = this.defaultGroupMenuActions;\r\n    public widgetsContext: any;\r\n    public gridOptions: any;\r\n    public groupAdditionalActions: any;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $attrs: any,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $interpolate: angular.IInterpolateService,\r\n      private pipAddComponentDialog: IAddComponentDialogService,\r\n      private pipWidgetTemplate: IWidgetTemplateService\r\n    ) {\r\n      // Add class to style scroll bar\r\n      $element.addClass('pip-scroll');\r\n\r\n      // Set tiles grid options\r\n      this.draggableGridOptions = this.gridOptions || DEFAULT_GRID_OPTIONS;\r\n\r\n      // Switch inline displaying\r\n      if (this.draggableGridOptions.inline === true) {\r\n        $element.addClass('inline-grid');\r\n      }\r\n      // Extend group's menu actions\r\n      if (this.groupAdditionalActions) angular.extend(this.groupMenuActions, this.groupAdditionalActions);\r\n\r\n      // Compile widgets\r\n      this.widgetsContext = $scope;\r\n      this.compileWidgets();\r\n\r\n      this.$timeout(() => {\r\n        this.$element.addClass('visible');\r\n      }, 700);\r\n    }\r\n\r\n    private compileWidgets() {\r\n      _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n          group.source = group.source.map((widget, index) => {\r\n            // Establish default props\r\n            widget.size = widget.size || {\r\n              colSpan: 1,\r\n              rowSpan: 1\r\n            };\r\n            widget.index = index;\r\n            widget.groupIndex = groupIndex;\r\n            widget.menu = widget.menu || {};\r\n            angular.extend(widget.menu, [{\r\n              title: 'Remove',\r\n              click: (item, params, object) => {\r\n                this.removeWidget(item, params, object);\r\n              }\r\n            }]);\r\n\r\n            return {\r\n              opts: widget,\r\n              template: this.pipWidgetTemplate.getTemplate(widget, this._includeTpl)\r\n            };\r\n          })\r\n      });\r\n    }\r\n\r\n    public addComponent(groupIndex) {\r\n      this.pipAddComponentDialog\r\n        .show(this.groupedWidgets, groupIndex)\r\n        .then((data) => {\r\n          var activeGroup;\r\n\r\n          if (!data) {\r\n            return;\r\n          }\r\n\r\n          if (data.groupIndex !== -1) {\r\n            activeGroup = this.groupedWidgets[data.groupIndex];\r\n          } else {\r\n            activeGroup = {\r\n              title: 'New group',\r\n              source: []\r\n            };\r\n          }\r\n\r\n          this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n          if (data.groupIndex === -1) {\r\n            this.groupedWidgets.push(activeGroup);\r\n          }\r\n\r\n          this.compileWidgets();\r\n        });\r\n    };\r\n\r\n    public removeGroup = (groupIndex) => {\r\n      console.log('removeGroup', groupIndex);\r\n      this.groupedWidgets.splice(groupIndex, 1);\r\n    }\r\n\r\n    private addWidgets(group, widgets) {\r\n      widgets.forEach((widgetGroup) => {\r\n        widgetGroup.forEach((widget) => {\r\n          if (widget.amount) {\r\n            Array.apply(null, Array(widget.amount)).forEach(() => {\r\n              group.push({\r\n                type: widget.name\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    private removeWidget(item, params, object) {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n      this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n      this.$timeout(() => {\r\n        this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const pipDashboard: ng.IComponentOptions = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: DashboardController,\r\n    templateUrl: 'Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .config(configureAvailableWidgets)\r\n    .config(setTranslations)\r\n    .component('pipDashboard', pipDashboard);\r\n\r\n}","export class AddComponentDialogWidget {\r\n    title: string;\r\n    icon: string;\r\n    name: string;\r\n    amount: number;\r\n}\r\n\r\nexport class AddComponentDialogController implements ng.IController {\r\n    public defaultWidgets: [AddComponentDialogWidget[]];\r\n    public groups: any;\r\n    public totalWidgets: number = 0;\r\n\r\n    constructor(\r\n        groups, // Later may be group type\r\n        public activeGroupIndex: number,\r\n        widgetList: [AddComponentDialogWidget[]],\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultWidgets = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n            return group['title'];\r\n        });\r\n    }\r\n\r\n    public add() {\r\n        this.$mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets: this.defaultWidgets\r\n        });\r\n    };\r\n\r\n    public cancel() {\r\n        this.$mdDialog.cancel();\r\n    };\r\n\r\n    public encrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount++;\r\n        this.totalWidgets++;\r\n    };\r\n\r\n    public decrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n        this.totalWidgets = this.totalWidgets ? this.totalWidgets - 1 : 0;\r\n    };\r\n}","import {\r\n  AddComponentDialogWidget,\r\n  AddComponentDialogController\r\n} from './AddComponentDialogController';\r\n\r\nexport interface IAddComponentDialogService {\r\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\r\n}\r\n\r\nexport interface IAddComponentDialogprovider {\r\n  configWidgetList(list: [AddComponentDialogWidget[]]): void;\r\n}\r\n\r\n{\r\n  const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      (<any>pipTranslate).setTranslations('en', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Add component',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Create new group'\r\n      });\r\n      (<any>pipTranslate).setTranslations('ru', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Добавить компонент',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\r\n      });\r\n    }\r\n  }\r\n\r\n  class AddComponentDialogService implements IAddComponentDialogService {\r\n\r\n    public constructor(\r\n      private widgetList: [AddComponentDialogWidget[]],\r\n      private $mdDialog: angular.material.IDialogService\r\n    ) {}\r\n\r\n    public show(groups, activeGroupIndex) {\r\n      return this.$mdDialog\r\n        .show({\r\n          templateUrl: 'dialogs/add_component/AddComponent.html',\r\n          bindToController: true,\r\n          controller: AddComponentDialogController,\r\n          controllerAs: 'dialogCtrl',\r\n          clickOutsideToClose: true,\r\n          resolve: {\r\n            groups: () => {\r\n              return groups;\r\n            },\r\n            activeGroupIndex: () => {\r\n              return activeGroupIndex;\r\n            },\r\n            widgetList: () => {\r\n              return (<any>this.widgetList);\r\n            }\r\n          }\r\n        });\r\n    };\r\n  }\r\n\r\n  class AddComponentDialogProvider implements IAddComponentDialogprovider {\r\n    private _service: AddComponentDialogService;\r\n    private _widgetList: [AddComponentDialogWidget[]] = null;\r\n\r\n    constructor() {}\r\n\r\n    public configWidgetList = function (list: [AddComponentDialogWidget[]]) {\r\n      this._widgetList = list;\r\n    };\r\n\r\n    public $get($mdDialog: angular.material.IDialogService) {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipAddDashboardComponentDialog')\r\n    .config(setTranslations)\r\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\r\n    console.log('add provider pipAddComponentDialog');\r\n}","angular\r\n    .module('pipAddDashboardComponentDialog', ['ngMaterial']);\r\n\r\nimport './AddComponentDialogController';\r\nimport './AddComponentProvider';","\r\nangular.module('pipDashboardDialogs', [\r\n    'pipAddDashboardComponentDialog', \r\n    'pipWidgetConfigDialog'\r\n]);\r\n\r\nimport './add_component';\r\nimport './tile_config';","\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [{\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL',\r\n            id: '11'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE',\r\n            id: '21'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE',\r\n            id: '22'\r\n        }\r\n    ];\r\n}\r\n\r\nexport class WidgetConfigDialogController {\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n    public onCancel: Function;\r\n\r\n    constructor(\r\n        public params,\r\n        public extensionUrl,\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n\r\n        this.onCancel = () => {\r\n            this.$mdDialog.cancel();\r\n        }\r\n    }\r\n\r\n    public onApply(updatedData) {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(updatedData);\r\n    }\r\n}","{    \r\n    interface IWidgetConfigExtendComponentBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtensionUrl: any;\r\n        pipDialogScope: any;\r\n        pipApply: any;\r\n    }\r\n\r\n    const WidgetConfigExtendComponentBindings: IWidgetConfigExtendComponentBindings = {\r\n        pipExtensionUrl: '<',\r\n        pipDialogScope: '<',\r\n        pipApply: '&'\r\n    }\r\n\r\n    class WidgetConfigExtendComponentChanges implements ng.IOnChangesObject, IWidgetConfigExtendComponentBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        pipExtensionUrl: ng.IChangesObject<string>;\r\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\r\n\r\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\r\n    }\r\n\r\n    interface IWidgetConfigExtendComponentAttributes extends ng.IAttributes {\r\n        pipExtensionUrl: string\r\n    }\r\n\r\n    class WidgetConfigExtendComponentController implements IWidgetConfigExtendComponentBindings {\r\n        public pipExtensionUrl: string;\r\n        public pipDialogScope: ng.IScope;\r\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\r\n\r\n        constructor(\r\n            private $templateRequest: angular.ITemplateRequestService,\r\n            private $compile: angular.ICompileService,\r\n            private $scope: angular.IScope, \r\n            private $element: JQuery, \r\n            private $attrs: IWidgetConfigExtendComponentAttributes\r\n        ) { }\r\n\r\n        public $onChanges(changes: WidgetConfigExtendComponentChanges) {\r\n            if (changes.pipDialogScope) {\r\n                delete changes.pipDialogScope.currentValue['$scope'];\r\n                angular.extend(this, changes.pipDialogScope.currentValue);\r\n            }\r\n            if (changes.pipExtensionUrl && changes.pipExtensionUrl.currentValue) {\r\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\r\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\r\n                });\r\n            }\r\n        }\r\n\r\n        public onApply() {\r\n            this.pipApply({updatedData: this});\r\n        }\r\n    }\r\n\r\n    const pipWidgetConfigComponent: ng.IComponentOptions = {\r\n        templateUrl: 'dialogs/tile_config/ConfigDialogExtendComponent.html',\r\n        controller: WidgetConfigExtendComponentController,\r\n        bindings: WidgetConfigExtendComponentBindings\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .component('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\r\n}","import { WidgetConfigDialogController } from './ConfigDialogController';\r\n\r\nexport interface IWidgetConfigService {\r\n    show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\r\n}\r\n\r\nexport interface IWidgetConfigDialogOptions extends angular.material.IDialogOptions {\r\n    dialogClass?: string;\r\n    extensionUrl?: string;\r\n    event?: any;\r\n}\r\n\r\n{\r\n    const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Edit tile',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Small',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Large'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Изменить виджет',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\r\n            });\r\n        }\r\n    }\r\n\r\n    class WidgetConfigDialogService {\r\n        public constructor(\r\n            public $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void) {\r\n            this.$mdDialog.show({\r\n                    targetEvent: params.event,\r\n                    templateUrl: params.templateUrl || 'dialogs/tile_config/ConfigDialog.html',\r\n                    controller: WidgetConfigDialogController,\r\n                    bindToController: true,\r\n                    controllerAs: 'vm',\r\n                    locals: {\r\n                        extensionUrl: params.extensionUrl,\r\n                        params: params.locals\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((key) => {\r\n                    if (successCallback) {\r\n                        successCallback(key);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .config(setTranslations)\r\n        .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\r\n}","\r\nangular\r\n    .module('pipWidgetConfigDialog', ['ngMaterial']);\r\n\r\nimport './ConfigDialogController';\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","declare var interact;\r\n\r\nimport {\r\n  DragTileService,\r\n  IDragTileService,\r\n  IDragTileConstructor\r\n} from './DraggableTileService';\r\nimport {\r\n  TilesGridService,\r\n  ITilesGridService,\r\n  ITilesGridConstructor\r\n} from './draggable_group/DraggableTilesGroupService';\r\n\r\nexport const DEFAULT_TILE_WIDTH: number = 150;\r\nexport const DEFAULT_TILE_HEIGHT: number = 150;\r\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nconst DEFAULT_OPTIONS = {\r\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\r\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\r\n  gutter: 20, // 'px'\r\n  container: 'pip-draggable-grid:first-of-type',\r\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n  activeDropzoneClass: 'dropzone-active',\r\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\n{\r\n  interface IDraggableBindings {\r\n      tilesTemplates: any;\r\n      tilesContext: any;\r\n      options: any;\r\n      groupMenuActions: any;\r\n      $container: JQuery;\r\n  }\r\n\r\n  interface IDraggableControllerScope extends ng.IScope {\r\n    $container: JQuery;\r\n    tilesTemplates: any;\r\n    options: any;\r\n  }\r\n\r\n  interface ITileScope extends ng.IScope {\r\n    index: number | string;\r\n    groupIndex: number | string;\r\n  }\r\n\r\n  class DraggableController implements ng.IComponentController, IDraggableBindings {\r\n    public opts: any;\r\n    public groups: any;\r\n    public sourceDropZoneElem: any = null;\r\n    public isSameDropzone: boolean = true;\r\n    public tileGroups: any = null;\r\n    public availableWidth: number;\r\n    public availableColumns: number;\r\n    public groupsContainers: any;\r\n    public container: any;\r\n    public activeDraggedGroup: any;\r\n    public draggedTile: any;\r\n    public containerOffset: any;\r\n    public tilesTemplates: any;\r\n    public tilesContext: any;\r\n    public options: any;\r\n    public groupMenuActions: any;\r\n    public $container: JQuery;\r\n\r\n    constructor(\r\n      private $scope: IDraggableControllerScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $compile: angular.ICompileService,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: JQuery,\r\n      pipDragTile: IDragTileService,\r\n      pipTilesGrid: ITilesGridService,\r\n      pipMedia: pip.layouts.IMediaService\r\n    ) {\r\n      this.opts = _.merge({\r\n        mobileBreakpoint: pipMedia.breakpoints.xs\r\n      }, DEFAULT_OPTIONS, this.options);\r\n\r\n      this.groups = this.tilesTemplates.map((group, groupIndex) => {\r\n        return {\r\n          title: group.title,\r\n          editingName: false,\r\n          index: groupIndex,\r\n          source: group.source.map((tile) => {\r\n            const tileScope = this.createTileScope(tile);\r\n\r\n            return IDragTileConstructor(DragTileService, {\r\n              tpl: $compile(tile.template)(tileScope),\r\n              options: tile.opts,\r\n              size: tile.opts.size\r\n            });\r\n          })\r\n        };\r\n      });\r\n\r\n      // Add templates watcher\r\n      $scope.$watch('$ctrl.tilesTemplates', (newVal) => {\r\n        this.watch(newVal);\r\n      }, true);\r\n\r\n      // Initialize data\r\n      this.initialize();\r\n\r\n      // Resize handler TODO: replace by pip resize watchers\r\n      $(window).on('resize', _.debounce(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n        this.tileGroups.forEach((group) => {\r\n          group\r\n            .setAvailableColumns(this.availableColumns)\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight();\r\n        });\r\n      }, 50));\r\n    }\r\n\r\n    // Post link function\r\n    public $postLink() {\r\n      this.$container = this.$element;\r\n    }\r\n\r\n    // Watch handler\r\n    private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n\r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this.$timeout(() => {\r\n          this.updateTilesGroups();\r\n        });\r\n      }\r\n    }\r\n\r\n    // Inline edit group handlers\r\n    public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this.$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n    }\r\n\r\n    public cancelEditing(group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput(group) {\r\n      this.$timeout(() => {\r\n        group.editingName = false;\r\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this.tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput(group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source ? : any) {\r\n      switch (updateType) {\r\n        case 'addGroup':\r\n          if (this.groups.length !== this.tilesTemplates.length) {\r\n            this.tilesTemplates.push(source);\r\n          }\r\n          break;\r\n        case 'moveTile':\r\n          const {\r\n            fromIndex,\r\n            toIndex,\r\n            tileOptions,\r\n            fromTileIndex\r\n          } = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this.tilesTemplates[toIndex].source.push({\r\n            opts: tileOptions\r\n          });\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private createTileScope(tile: any): ITileScope {\r\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.tilesContext);\r\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\r\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      return tileScope;\r\n    }\r\n\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex ? ) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        const child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n        remain = [],\r\n        containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n        if (_.findIndex(newGroups, (g) => {\r\n            return g['title'] === group.title\r\n          }) < 0) {\r\n          removeIndexes.push(index);\r\n        } else {\r\n          remain.push(index);\r\n        }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n        this.groups.splice(index, 1);\r\n        this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n        containers.push(this.groupsContainers[index]);\r\n      });\r\n\r\n      this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n        this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      const group = {\r\n        title: sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          const tileScope = this.createTileScope(tile);\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl: this.$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size: tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this.$scope.$$phase) this.$scope.$apply();\r\n\r\n      this.$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this.createTileScope(tile);\r\n\r\n        const newTile = IDragTileConstructor(DragTileService, {\r\n          tpl: this.$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size: tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this.$container || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\r\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile'] = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n\r\n      this.$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top: event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this.$timeout(() => {\r\n          this.setGroupContainersHeight();\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this.$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top: containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this.createTileScope(tile);\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this.$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this.$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {\r\n        from: from,\r\n        to: to,\r\n        tile: movedTile\r\n      });\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({\r\n        title: 'New group',\r\n        source: []\r\n      });\r\n      this.$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this.$timeout(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            autoScroll: {\r\n              enabled: true,\r\n              container: $('#content').get(0),\r\n              speed: 500\r\n            },\r\n            onstart: (event) => {\r\n              this.onDragStartListener(event)\r\n            },\r\n            onmove: (event) => {\r\n              this.onDragMoveListener(event)\r\n            },\r\n            onend: (event) => {\r\n              this.onDragEndListener()\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropToFictGroupListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        this.$container\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n          \r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  const DragComponent: ng.IComponentOptions = {\r\n    bindings: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    controllerAs: 'DraggedCtrl',\r\n    templateUrl: 'draggable/Draggable.html',\r\n    controller: DraggableController\r\n  }\r\n\r\n  angular.module('pipDragged')\r\n    .component('pipDraggableGrid', DragComponent);\r\n}","export interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","{\r\n  interface DraggableTileAttributes extends ng.IAttributes {\r\n    pipDraggableTiles: any;\r\n  }\r\n\r\n  function DraggableTileLink(\r\n    $scope: ng.IScope,\r\n    $elem: JQuery,\r\n    $attr: DraggableTileAttributes\r\n  ) {\r\n    const docFrag = document.createDocumentFragment(),\r\n      group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n    group.forEach(function (tile) {\r\n      const tpl = wrapComponent(tile.getCompiledTemplate());\r\n      docFrag.appendChild(tpl);\r\n    });\r\n\r\n    $elem.append(docFrag);\r\n\r\n    function wrapComponent(elem) {\r\n      return $('<div>')\r\n        .addClass('pip-draggable-tile')\r\n        .append(elem)\r\n        .get(0);\r\n    }\r\n  }\r\n\r\n  function DraggableTile() {\r\n    return {\r\n      restrict: 'A',\r\n      link: DraggableTileLink\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('pipDragged')\r\n    .directive('pipDraggableTiles', DraggableTile);\r\n\r\n}","export interface TilesGridConstructor {\r\n  new(tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth ? ): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nconst MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      const prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell, col, row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    const self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth ? ): any {\r\n    const self = this,\r\n          tileWidth = singleTileWidth || this.opts.tileWidth,\r\n          offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let   colsInRow = 0,\r\n          rows = 0,\r\n          gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      const tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n      Array.apply(null, Array(newCellCount)).forEach(() => {\r\n        if (self.columns < colsInRow + 1) {\r\n          rows++;\r\n          colsInRow = 0;\r\n\r\n          self.gridCells.push(gridInRow);\r\n          gridInRow = [];\r\n        }\r\n\r\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n        // Describe grid cell size through block corners coordinates\r\n        gridInRow.push({\r\n          top: top,\r\n          left: left,\r\n          bottom: top + self.opts.tileHeight,\r\n          right: left + tileWidth,\r\n          row: rows,\r\n          col: colsInRow\r\n        });\r\n\r\n        colsInRow++;\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    const self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      const tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      const tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        const tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    const foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        const tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    const index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","angular.module('pipDragged', []);\r\n\r\nimport './DraggableTileService';\r\nimport './Draggable';\r\nimport './draggable_group/DraggableTilesGroupService'\r\nimport './draggable_group/DraggableTilesGroupDirective'","import './widgets/index';\r\nimport './draggable/index';\r\n\r\nangular.module('pipDashboard', [\r\n  'pipWidget',\r\n  'pipDragged',\r\n  'pipDashboardDialogs',\r\n  'pipDashboard.Templates',\r\n\r\n  // External pip modules\r\n  'pipLayout',\r\n  'pipLocations',\r\n  'pipDateTime',\r\n  'pipCharts',\r\n  'pipTranslate',\r\n  'pipControls',\r\n  'pipButtons'\r\n]);\r\n\r\nimport './utility/WidgetTemplateUtility';\r\nimport './dialogs/index';\r\nimport './Dashboard';\r\n","export interface IWidgetTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n} \r\n\r\n{\r\n    class widgetTemplateService implements IWidgetTemplateService {\r\n        private _$interpolate: angular.IInterpolateService;\r\n        private _$compile: angular.ICompileService;\r\n        private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n        constructor(\r\n            $interpolate: angular.IInterpolateService,\r\n            $compile: angular.ICompileService,\r\n            $templateRequest: angular.ITemplateRequestService\r\n        ) {\r\n            this._$interpolate = $interpolate;\r\n            this._$compile = $compile;\r\n            this._$templateRequest = $templateRequest;\r\n        }\r\n\r\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n            const {\r\n                template,\r\n                templateUrl,\r\n                type\r\n            } = source;\r\n            let result;\r\n\r\n            if (type) {\r\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n                return strictCompile == true ?\r\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                    interpolated;\r\n            }\r\n\r\n            if (template) {\r\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n            }\r\n\r\n            if (templateUrl) {\r\n                this._$templateRequest(templateUrl, false).then((html) => {\r\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public setImageMarginCSS($element, image) {\r\n            let\r\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\r\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n                margin = 0,\r\n                cssParams = {};\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            $(image).css(cssParams);\r\n        }\r\n    }\r\n\r\n    // image load directive TODO: remove to pipImageUtils\r\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\r\n                const callback = $parse(attrs.pipImageLoad);\r\n\r\n                element.bind('load', (event) => {\r\n                    callback(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDashboard')\r\n        .service('pipWidgetTemplate', widgetTemplateService)\r\n        .directive('pipImageLoad', ImageLoad);\r\n}","export interface IDashboardWidget {\r\n    options: any;\r\n    color: string;\r\n    size: Object | string | number;\r\n}\r\n\r\nexport class DashboardWidget implements IDashboardWidget {\r\n    public options: any;\r\n    public color: string;\r\n    public size: Object | string | number;\r\n\r\n    constructor() { }\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class CalendarWidgetController extends MenuWidgetService {\r\n    constructor(\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n        this.menu.push({\r\n          title: 'Configurate',\r\n          click: () => {\r\n            this.onConfigClick();\r\n          }\r\n        });\r\n        this.options.date = this.options.date || new Date();\r\n        this.color = this.options.color || 'blue';\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          date: this.options.date,\r\n        },\r\n        extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const CalendarWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n    },\r\n    controller: CalendarWidgetController,\r\n    templateUrl: 'widgets/calendar/WidgetCalendar.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipCalendarWidget', CalendarWidget);\r\n\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService'; \r\n{\r\n  class EventWidgetController extends MenuWidgetService {\r\n    private _oldOpacity: number;\r\n\r\n    public opacity: number = 0.57;\r\n\r\n    constructor(\r\n      $scope: ng.IScope,\r\n      private $element: JQuery,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'gray';\r\n      this.opacity = this.options.opacity || this.opacity;\r\n\r\n      this.drawImage();\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        this.drawImage();\r\n      });\r\n    }\r\n\r\n    private drawImage() {\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.onImageLoad(this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this._oldOpacity = _.clone(this.opacity);\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          },\r\n          date: this.options.date,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n          opacity: this.opacity,\r\n          onOpacitytest: (opacity) => {\r\n            this.opacity = opacity;\r\n          }\r\n        },\r\n        extensionUrl: 'widgets/event/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n        this.options.title = result.title;\r\n        this.options.text = result.text;\r\n        this.options.opacity = result.opacity;\r\n      }, () => {\r\n        this.opacity = this._oldOpacity;\r\n      });\r\n    }\r\n\r\n    private onImageLoad(image) {\r\n      this.setImageMarginCSS(this.$element.parent(), image);\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.setImageMarginCSS(this.$element.parent(), this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    // Later replace by pipImageUtils sevice's function\r\n    private setImageMarginCSS($element, image) {\r\n      let\r\n        containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n        containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n        imageWidth = image[0].naturalWidth || image.width,\r\n        imageHeight = image[0].naturalHeight || image.height,\r\n        margin = 0,\r\n        cssParams = {};\r\n\r\n      if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n        margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n        cssParams['margin-left'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n        cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n        cssParams['margin-top'] = '';\r\n      } else {\r\n        margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n        cssParams['margin-top'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n        cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n        cssParams['margin-left'] = '';\r\n      }\r\n\r\n      image.css(cssParams);\r\n    }\r\n  }\r\n\r\n\r\n  const EventWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: EventWidgetController,\r\n    templateUrl: 'widgets/event/WidgetEvent.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipEventWidget', EventWidget);\r\n}","angular.module('pipWidget', []);\r\n\r\nimport './calendar/WidgetCalendar';\r\nimport './event/WidgetEvent';\r\nimport './menu/WidgetMenuService';\r\nimport './menu/WidgetMenuDirective';\r\nimport './notes/WidgetNotes';\r\nimport './position/WidgetPosition';\r\nimport './statistics/WidgetStatistics';\r\nimport './picture_slider/WidgetPictureSlider';\r\n","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .directive('pipMenuWidget', pipMenuWidget);\r\n\r\n  function pipMenuWidget() {\r\n    return {\r\n      restrict        : 'EA',\r\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\r\n    };\r\n  }\r\n})();\r\n","import { DashboardWidget } from '../WidgetClass';\r\n\r\nexport class MenuWidgetService extends DashboardWidget {\r\n  public menu: any = [{\r\n    title: 'Change Size',\r\n    action: angular.noop,\r\n    submenu: [{\r\n        title: '1 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 1,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 2',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 2\r\n        }\r\n      }\r\n    ]\r\n  }];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n\r\n    super();\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this.options.size.colSpan = params.sizeX;\r\n    this.options.size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\n{\r\n  class MenuWidgetProvider {\r\n    private _service: MenuWidgetService;\r\n\r\n    constructor() {}\r\n\r\n    public $get() {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new MenuWidgetService();\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .provider('pipWidgetMenu', MenuWidgetProvider);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class NotesWidgetController extends MenuWidgetService {\r\n\r\n    constructor(\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'orange';\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n        },\r\n        extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.changeSize(result.size);\r\n        this.options.text = result.text;\r\n        this.options.title = result.title;\r\n      });\r\n    }\r\n  }\r\n\r\n  const NotesWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: NotesWidgetController,\r\n    templateUrl: 'widgets/notes/WidgetNotes.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipNotesWidget', NotesWidget);\r\n}","'use strict';\r\n\r\nimport {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\nimport {\r\n  IWidgetTemplateService\r\n} from '../../utility/WidgetTemplateUtility';\r\n\r\n{\r\n  class PictureSliderController extends MenuWidgetService {\r\n    public animationType: string = 'fading';\r\n    public animationInterval: number = 5000;\r\n\r\n    constructor(\r\n      private $scope: angular.IScope,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService,\r\n      private pipWidgetTemplate: IWidgetTemplateService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.animationType = this.options.animationType || this.animationType;\r\n        this.animationInterval = this.options.animationInterval || this.animationInterval;\r\n      }\r\n    }\r\n\r\n    public onImageLoad($event) {\r\n      this.$timeout(() => {\r\n        this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), $event.target);\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.$timeout(() => {\r\n        _.each(this.$element.find('img'), (image) => {\r\n          this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), image);\r\n        });\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  const PictureSliderWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: PictureSliderController,\r\n    templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipPictureSliderWidget', PictureSliderWidget);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class PositionWidgetController extends MenuWidgetService {\r\n    public showPosition: boolean = true;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: any,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService,\r\n      private pipLocationEditDialog: any,\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.menu.push({\r\n        title: 'Change location',\r\n        click: () => {\r\n          this.openLocationEditDialog();\r\n        }\r\n      });\r\n\r\n      this.options.location = this.options.location || this.options.position;\r\n\r\n      $scope.$watch('widgetCtrl.options.location', () => {\r\n        this.reDrawPosition();\r\n      });\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        if (newVal == true) this.reDrawPosition();\r\n      });\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-position-config',\r\n        locals: {\r\n          size: this.options.size,\r\n          locationName: this.options.locationName,\r\n          hideColors: true,\r\n        },\r\n        extensionUrl: 'widgets/position/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n        this.options.locationName = result.locationName;\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reDrawPosition();\r\n    }\r\n\r\n    public openLocationEditDialog() {\r\n      this.pipLocationEditDialog.show({\r\n        locationName: this.options.locationName,\r\n        locationPos: this.options.location\r\n      }, (newPosition) => {\r\n        if (newPosition) {\r\n          this.options.location = newPosition.location;\r\n          this.options.locationName = newPosition.locatioName;\r\n        }\r\n      });\r\n    }\r\n\r\n    private reDrawPosition() {\r\n      this.showPosition = false;\r\n      this.$timeout(() => {\r\n        this.showPosition = true;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n\r\n  const PositionWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n      index: '=',\r\n      group: '='\r\n    },\r\n    controller: PositionWidgetController,\r\n    templateUrl: 'widgets/position/WidgetPosition.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipPositionWidget', PositionWidget);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\n\r\n{\r\n  const SMALL_CHART: number = 70;\r\n  const BIG_CHART: number = 250;\r\n\r\n  class StatisticsWidgetController extends MenuWidgetService {\r\n    private _$scope: angular.IScope;\r\n    private _$timeout: angular.ITimeoutService;\r\n\r\n    public reset: boolean = false;\r\n    public chartSize: number = SMALL_CHART;\r\n\r\n    constructor(\r\n      pipWidgetMenu: any,\r\n      $scope: angular.IScope,\r\n      $timeout: angular.ITimeoutService\r\n    ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reset = true;\r\n      this.setChartSize();\r\n      this._$timeout(() => {\r\n        this.reset = false;\r\n      }, 500);\r\n    }\r\n\r\n    private setChartSize() {\r\n      this.chartSize = this.options.size.colSpan == 2 && this.options.size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n    }\r\n  }\r\n\r\n\r\n  const StatisticsWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: StatisticsWidgetController,\r\n    templateUrl: 'widgets/statistics/WidgetStatistics.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipStatisticsWidget', StatisticsWidget);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"$ctrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"$ctrl.groupedWidgets\" pip-tiles-context=\"$ctrl.widgetsContext\" pip-draggable-grid=\"$ctrl.draggableGridOptions\" pip-group-menu-actions=\"$ctrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in DraggedCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"DraggedCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"DraggedCtrl.onBlurTitleInput(group)\" ng-keypress=\"DraggedCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"DraggedCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in DraggedCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/tile_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/tile_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ $ctrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ $ctrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ $ctrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><img ng-if=\"$ctrl.options.image\" ng-src=\"{{$ctrl.options.image}}\" alt=\"{{$ctrl.options.title || $ctrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ $ctrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"$ctrl.options.date\">{{ $ctrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ $ctrl.options.text || $ctrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ $ctrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"$ctrl.options.title || $ctrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span></div><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ $ctrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"$ctrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"$ctrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"$ctrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ $ctrl.options.title }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!$ctrl.options.locationName\"><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"$ctrl.options.locationName\"><span class=\"flex text-overflow\">{{ $ctrl.options.locationName }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"$ctrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"$ctrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.series && !$ctrl.reset\"><pip-pie-chart pip-series=\"$ctrl.options.series\" ng-if=\"!$ctrl.options.chartType || $ctrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"$ctrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}