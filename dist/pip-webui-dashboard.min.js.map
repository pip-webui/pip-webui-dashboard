{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableController.ts","src/draggable/DraggableDirective.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dashboard","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","pipDashboard","bindings","gridOptions","groupAdditionalActions","groupedWidgets","controller","controllerAs","templateUrl","component","setTranslations","$injector","pipTranslate","has","get","DROP_TO_CREATE_NEW_GROUP","configureAvailableWidgets","pipAddComponentDialogProvider","configWidgetList","title","icon","name","amount","$inject","DEFAULT_GRID_OPTIONS","draggableOptions","tileWidth","tileHeight","gutter","inline","$scope","$rootScope","$attrs","$element","$timeout","$interpolate","pipAddComponentDialog","pipWidgetTemplate","callback","groupIndex","_this","addComponent","removeGroup","console","log","_includeTpl","groupMenuActions","defaultGroupMenuActions","splice","_$scope","_$rootScope","_$attrs","_$element","_$timeout","_$interpolate","_pipAddComponentDialog","_pipWidgetTemplate","addClass","draggableGridOptions","extend","widgetsContext","compileWidgets","prototype","group","removedWidgets","source","map","widget","index","size","colSpan","rowSpan","menu","click","item","params","object","removeWidget","opts","template","getTemplate","show","data","activeGroup","addWidgets","widgets","push","widgetGroup","forEach","apply","Array","type","options","DashboardController","run","4","AddComponentDialogController","groups","activeGroupIndex","widgetList","$mdDialog","_","isNumber","defaultWidgets","cloneDeep","_mdDialog","add","hide","cancel","encrease","widgetIndex","decrease","5","AddComponentDialogService","_widgetList","AddComponentDialogProvider","list","$get","_service","provider","6","TileColors","all","TileSizes","id","WidgetConfigDialogController","$compile","dialogTitle","colors","sizes","sizeId","onApply","sizeX","Number","substr","sizeY","onCancel","./ConfigDialogService","7","$templateRequest","scope","link","pipExtensionUrl","then","html","find","replaceWith","directive","pipWidgetConfigComponent","8","WidgetConfigDialogService","successCallback","cancelCallback","event","locals","clickOutsideToClose","key","service","9","./DraggableController","./DraggableDirective","./DraggableTileService","./draggable_group/DraggableTilesGroupDirective","./draggable_group/DraggableTilesGroupService","10","DraggableTileService_1","DraggableTilesGroupService_1","SIMPLE_LAYOUT_COLUMNS_COUNT","DEFAULT_TILE_WIDTH","DEFAULT_TILE_HEIGHT","UPDATE_GROUPS_EVENT","DEFAULT_OPTIONS","DraggableController","pipDragTile","pipTilesGrid","pipMedia","sourceDropZoneElem","isSameDropzone","tileGroups","merge","mobileBreakpoint","breakpoints","xs","tilesTemplates","tile","tileScope","$new","tilesContext","IDragTileConstructor","DragTileService","tpl","newVal","debounce","availableWidth","getContainerWidth","availableColumns","getAvailableColumns","setAvailableColumns","generateGrid","getSingleTileWidthForMobile","setTilesDimensions","calcContainerHeight","watch","prevVal","changedGroupIndex","addGroup","groupWidgetDiff","newTiles","slice","each","addTilesIntoGroup","groupsContainers","updateTilesGroups","removeTiles","updateTilesOptions","onTitleClick","editingName","oldTitle","clone","$","currentTarget","children","focus","cancelEditing","onBlurTitleInput","$broadcast","onKyepressTitleInput","updateTilesTemplates","updateType","_a","fromIndex","from","elem","attributes","value","toIndex","to","tileOptions","fromTileIndex","reIndexTiles","indexes","container","tiles","remove","gIndex","undefined","child","element","removeGroups","newGroups","removeIndexes","remain","containers","findIndex","reverse","sourceGroup","_$compile","$$phase","$apply","document","querySelectorAll","groupContaninerSelector","ITilesGridConstructor","TilesGridService","groupContainer","addTile","newTile","append","getCompiledTemplate","optionsGroup","optionGroup","updateTileOptions","initTilesGroups","onlyPosition","draggedTile","width","floor","getActiveGroupAndTile","active","foundTile","getTileByNode","onDragStartListener","activeEntities","target","parent","activeDraggedGroup","startDrag","onDragMoveListener","x","parseFloat","style","left","dx","y","top","dy","containerOffset","getContainerOffset","getTileByCoordinates","pageX","pageY","draggedTileIndex","getTileIndex","belowElemIndex","belowElement","swapTiles","setGroupContainersHeight","onDragEndListener","stopDrag","removeClass","containerRect","getBoundingClientRect","tileGroup","moveTile","movedTile","removeTile","getElem","bind","onDropListener","droppedGroupIndex","droppedGroup","onDropToFictGroupListener","onDropEnterListener","dragEvent","dragEnter","classList","css","onDropDeactivateListener","activeDropzoneClass","onDropLeaveListener","initialize","draggable","autoScroll","onstart","onmove","onend","dropzone","ondrop","ondragenter","ondropdeactivate","ondragleave","on","interact","trigger","11","DragDirective","restrict","$elem","$container","12","constructor","DEFAULT_TILE_SIZE","getSize","setSize","height","setPosition","updateElem","preview","zIndex","isAnimate","onTransitionEnd","off","setPreviewPosition","coords","getOptions","setOptions","$attr","wrapComponent","docFrag","createDocumentFragment","$eval","pipDraggableTiles","appendChild","DraggableTile","14","columns","gridCells","isMobileLayout","MOBILE_LAYOUT_COLUMNS","getCellByPosition","row","col","getCells","prevCell","getAvailableCellsMobile","getAvailableCellsDesktop","leftCornerCell","rightCornerCell","getBasicRow","getCell","gridCopy","basicRow","basicCol","rowShift","prevTileSize","isCellFree","start","end","src","cell","getCellIndex","srcCell","rowIndex","reserveCells","clearElements","singleTileWidth","generateCells","newCellCount","colsInRow","rows","gridInRow","offset","bottom","right","querySelector","srcTiles","tileSize","currIndex","startCell","cells","maxHeightSize","maxWidthSize","maxBy","node","filter","beforeTile","movedTileIndex","beforeTileIndex","droppedTile","newGrid","15","ImageLoad","$parse","attrs","pipImageLoad","widgetTemplateService","strictCompile","result","interpolated","_$templateRequest","setImageMarginCSS","image","containerWidth","clientWidth","containerHeight","clientHeight","imageWidth","naturalWidth","imageHeight","naturalHeight","margin","cssParams","16","./event/WidgetEvent","./menu/WidgetMenuDirective","./menu/WidgetMenuService","./notes/WidgetNotes","./picture_slider/WidgetPictureSlider","./position/WidgetPosition","./statistics/WidgetStatistics","17","__extends","d","b","__","p","hasOwnProperty","Object","create","_super","CalendarWidgetController","pipWidgetMenu","pipWidgetConfigDialogService","color","_configDialog","union","onConfigClick","date","Date","dialogClass","extensionUrl","changeSize","MenuWidgetService","pipCalendarWidget","18","opacity","$watch","is","drawImage","EventWidgetController","onImageLoad","text","onOpacitytest","_oldOpacity","pipEventWidget","19","pipMenuWidget","noop","action","callAction","actionName","MenuWidgetProvider","21","NotesWidgetController","pipNotesWidget","22","PictureSliderController","animationType","_widgetUtility","animationInterval","$event","WidgetMenuService_1","pipPictureSliderWidget","23","PositionWidgetController","pipLocationEditDialog","showPosition","_locationDialog","openLocationEditDialog","location","position","reDrawPosition","locationName","hideColors","locationPos","newPosition","locatioName","pipPositionWidget","../menu/WidgetMenuService","24","reset","chartSize","SMALL_CHART","setChartSize","StatisticsWidgetController","BIG_CHART","bindToController","pipStatisticsWidget","25","$templateCache","put"],"mappings":"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","file":"pip-webui-dashboard.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\r\nimport './draggable/Draggable';\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('pipDashboard', [\r\n    'pipWidget', \r\n    'pipDragged', \r\n    'pipWidgetConfigDialog', \r\n    'pipAddDashboardComponentDialog',\r\n    'pipDashboard.Templates',\r\n\r\n    // External pip modules\r\n    'pipLayout',\r\n    'pipLocations',\r\n    'pipDateTime',\r\n    'pipCharts',\r\n    'pipTranslate',\r\n    'pipControls'\r\n  ]);\r\n  \r\n})();\r\n\r\nimport './utility/WidgetTemplateUtility';\r\nimport './dialogs/widget_config/ConfigDialogController';\r\nimport './dialogs/add_component/AddComponentDialogController';\r\nimport './DashboardController';\r\nimport './DashboardComponent';\r\n","(function () {\r\n  'use strict';\r\n\r\n  const pipDashboard = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: 'pipDashboardCtrl',\r\n    controllerAs: 'dashboardCtrl',\r\n    templateUrl: 'Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipDashboard', pipDashboard);\r\n})();","'use strict';\r\n\r\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\r\n\r\nfunction setTranslations($injector) {\r\n  var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n  if (pipTranslate) {\r\n    pipTranslate.setTranslations('en', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n    });\r\n    pipTranslate.setTranslations('ru', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n    });\r\n  }\r\n}\r\n\r\nfunction configureAvailableWidgets(pipAddComponentDialogProvider) {\r\n  pipAddComponentDialogProvider.configWidgetList([\r\n    [{\r\n        title: 'Event',\r\n        icon: 'document',\r\n        name: 'event',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Position',\r\n        icon: 'location',\r\n        name: 'position',\r\n        amount: 0\r\n      }\r\n    ],\r\n    [{\r\n        title: 'Calendar',\r\n        icon: 'date',\r\n        name: 'calendar',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Sticky Notes',\r\n        icon: 'note-take',\r\n        name: 'notes',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Statistics',\r\n        icon: 'tr-statistics',\r\n        name: 'statistics',\r\n        amount: 0\r\n      }\r\n    ]\r\n  ]);\r\n}\r\n\r\nimport { IAddComponentDialogService } from './dialogs/add_component/AddComponentProvider'\r\n\r\nclass draggableOptions {\r\n  tileWidth: number;\r\n  tileHeight: number;\r\n  gutter: number;\r\n  inline: boolean;\r\n}\r\n\r\nlet DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n  tileWidth: 150, // 'px'\r\n  tileHeight: 150, // 'px'\r\n  gutter: 10, // 'px'\r\n  inline: false\r\n};\r\n\r\nclass DashboardController {\r\n  private defaultGroupMenuActions: any = [{\r\n      title: 'Add Component',\r\n      callback: (groupIndex) => {\r\n        this.addComponent(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Remove',\r\n      callback: (groupIndex) => {\r\n        this.removeGroup(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Configurate',\r\n      callback: (groupIndex) => {\r\n        console.log('configurate group with index:', groupIndex);\r\n      }\r\n    }\r\n  ];\r\n  private _$scope: angular.IScope;\r\n  private _$rootScope: angular.IRootScopeService;\r\n  private _$attrs: any;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _$interpolate: angular.IInterpolateService;\r\n  private _pipAddComponentDialog: IAddComponentDialogService;\r\n  private _pipWidgetTemplate: IWidgetTemplateService;\r\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\r\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n    '</pip-{{ type }}-widget>';\r\n\r\n  public groupedWidgets: any;\r\n  public draggableGridOptions: draggableOptions;\r\n  public widgetsTemplates: any;\r\n  public groupMenuActions: any = this.defaultGroupMenuActions;\r\n  public widgetsContext: any;\r\n\r\n  constructor(\r\n    $scope: angular.IScope,\r\n    $rootScope: angular.IRootScopeService,\r\n    $attrs: any,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    $interpolate: angular.IInterpolateService,\r\n    pipAddComponentDialog: IAddComponentDialogService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    this._$scope = $scope;\r\n    this._$rootScope = $rootScope;\r\n    this._$attrs = $attrs;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._$interpolate = $interpolate;\r\n    this._pipAddComponentDialog = pipAddComponentDialog;\r\n    this._pipWidgetTemplate = pipWidgetTemplate;\r\n\r\n    // Add class to style scroll bar\r\n    $element.addClass('pip-scroll');\r\n\r\n    // Set tiles grid options\r\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\r\n\r\n    // Switch inline displaying\r\n    if (this.draggableGridOptions.inline === true) {\r\n      $element.addClass('inline-grid');\r\n    }\r\n    // Extend group's menu actions\r\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\r\n\r\n    // Compile widgets\r\n    this.widgetsContext = $scope;\r\n    this.compileWidgets();\r\n\r\n    this._$timeout(() => {\r\n      this._$element.addClass('visible');\r\n    }, 700);\r\n  }\r\n\r\n  private compileWidgets() {\r\n    _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n        group.source = group.source.map((widget, index) => {\r\n          // Establish default props\r\n          widget.size = widget.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          };\r\n          widget.index = index;\r\n          widget.groupIndex = groupIndex;\r\n          widget.menu = widget.menu || {};\r\n          angular.extend(widget.menu, [{\r\n            title: 'Remove',\r\n            click: (item, params, object) => {\r\n              this.removeWidget(item, params, object);\r\n            }\r\n          }]);\r\n\r\n          return {\r\n            opts: widget,\r\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\r\n          };\r\n        })\r\n    });\r\n  }\r\n\r\n  public addComponent(groupIndex) {\r\n    this._pipAddComponentDialog\r\n      .show(this.groupedWidgets, groupIndex)\r\n      .then((data) => {\r\n        var activeGroup;\r\n\r\n        if (!data) {\r\n          return;\r\n        }\r\n\r\n        if (data.groupIndex !== -1) {\r\n          activeGroup = this.groupedWidgets[data.groupIndex];\r\n        } else {\r\n          activeGroup = {\r\n            title: 'New group',\r\n            source: []\r\n          };\r\n        }\r\n\r\n        this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n        if (data.groupIndex === -1) {\r\n          this.groupedWidgets.push(activeGroup);\r\n        }\r\n\r\n        this.compileWidgets();\r\n      });\r\n  };\r\n\r\n  public removeGroup = (groupIndex) => {\r\n    console.log('removeGroup', groupIndex);\r\n    this.groupedWidgets.splice(groupIndex, 1);\r\n  }\r\n\r\n  private addWidgets(group, widgets) {\r\n    widgets.forEach((widgetGroup) => {\r\n      widgetGroup.forEach((widget) => {\r\n        if (widget.amount) {\r\n          Array.apply(null, Array(widget.amount)).forEach(() => {\r\n            group.push({\r\n              type: widget.name\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private removeWidget(item, params, object) {\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n    this._$timeout(() => {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    });\r\n  }\r\n\r\n}\r\n\r\nangular\r\n  .module('pipDashboard')\r\n  .config(configureAvailableWidgets)\r\n  .run(setTranslations)\r\n  .controller('pipDashboardCtrl', DashboardController);","'use strict';\r\n\r\nexport class AddComponentDialogController {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public activeGroupIndex: number;\r\n    public defaultWidgets: any;\r\n    public groups: any;\r\n\r\n    constructor(\r\n        groups, \r\n        activeGroupIndex, \r\n        widgetList,\r\n        $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultWidgets   = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n          return group['title'];\r\n        });\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public add () {\r\n          this._mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets   : this.defaultWidgets\r\n          });\r\n        };\r\n\r\n    public cancel () {\r\n          this._mdDialog.cancel();\r\n        };\r\n\r\n    public encrease (groupIndex, widgetIndex) {\r\n          var widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n          widget.amount++;\r\n    };\r\n\r\n    public decrease (groupIndex, widgetIndex) {\r\n          var widget    = this.defaultWidgets[groupIndex][widgetIndex];\r\n          widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipAddDashboardComponentDialog', ['ngMaterial'])\r\n    .controller('pipAddDashboardComponentDialogController', AddComponentDialogController);\r\n\r\nimport './AddComponentProvider';","'use strict';\r\n\r\nexport interface IAddComponentDialogService {\r\n  show(groups, activeGroupIndex): any;\r\n}\r\n\r\nclass AddComponentDialogService implements IAddComponentDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    private _widgetList: any;\r\n\r\n    public constructor(widgetList: any, $mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n        this._widgetList = widgetList;\r\n    }\r\n\r\n    public show(groups, activeGroupIndex) {\r\n        return this._mdDialog\r\n          .show({\r\n            templateUrl     : 'dialogs/add_component/AddComponent.html',\r\n            bindToController: true,\r\n            controller      : 'pipAddDashboardComponentDialogController',\r\n            controllerAs    : 'dialogCtrl',\r\n            resolve: {\r\n              groups: () => {\r\n                return groups;\r\n              },\r\n              activeGroupIndex: () => {\r\n                return activeGroupIndex;\r\n              },\r\n              widgetList: () => {\r\n                return this._widgetList;\r\n              }\r\n           }\r\n          });\r\n      };\r\n}\r\n\r\nclass AddComponentDialogProvider {\r\n  private _service: AddComponentDialogService;\r\n  private _widgetList: any = null;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public configWidgetList = function (list) {\r\n      this._widgetList = list;\r\n  };\r\n\r\n  public $get($mdDialog: angular.material.IDialogService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\r\n        \r\n        return this._service;\r\n  }\r\n}\r\n\r\nangular\r\n    .module('pipDashboard')\r\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\r\n","'use strict';\r\n\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [\r\n        {name: 'SMALL', id: '11'},\r\n        {name: 'WIDE', id: '21'},\r\n        {name: 'LARGE', id: '22'}\r\n    ];\r\n}\r\n\r\nexport class WidgetConfigDialogController {\r\n    public dialogTitle: string = \"Edit tile\";\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public transclude: any;\r\n    public params: any;\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n\r\n    private _$element: any;\r\n    private _$timeout: angular.ITimeoutService;\r\n\r\n    constructor(\r\n        params,\r\n        $mdDialog: angular.material.IDialogService,\r\n        $compile: angular.ICompileService,\r\n        $timeout: angular.ITimeoutService,\r\n        $injector,\r\n        $scope: angular.IScope,\r\n        $rootScope) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this._$timeout = $timeout;\r\n\r\n        this.params = params;\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n    }\r\n\r\n    public onApply(): void {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(this);\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipWidgetConfigDialog', ['ngMaterial'])\r\n    .controller('pipWidgetConfigDialogController', WidgetConfigDialogController);\r\n\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","\r\n(() => {\r\n    'use strict';\r\n    \r\n    function pipWidgetConfigComponent(\r\n        $templateRequest: angular.ITemplateRequestService,\r\n        $compile: angular.ICompileService\r\n    ) {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\r\n            scope: false,\r\n            link: ($scope: angular.IScope, $element: any, $attrs: any) => {\r\n                $templateRequest($attrs.pipExtensionUrl, false).then((html) => {\r\n                    $element.find('pip-extension-point').replaceWith($compile(html)($scope));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .directive('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\r\n\r\n})();","export interface IWidgetConfigService {\r\n    show(params: any, successCallback?: (key) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass WidgetConfigDialogService {\r\n  public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (key) => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\r\n            controller: 'pipWidgetConfigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((key) => {\r\n            if (successCallback) {\r\n                successCallback(key);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });         \r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidgetConfigDialog')\r\n    .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\r\n  \r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('pipDragged', []);\r\n})();\r\n\r\nimport './DraggableTileService';\r\nimport './DraggableController';\r\nimport './DraggableDirective';\r\nimport './draggable_group/DraggableTilesGroupService'\r\nimport './draggable_group/DraggableTilesGroupDirective'","'use strict';\r\n\r\ndeclare var interact;\r\n\r\nimport { DragTileService, IDragTileService, IDragTileConstructor } from './DraggableTileService';\r\nimport { TilesGridService, ITilesGridService, ITilesGridConstructor } from './draggable_group/DraggableTilesGroupService';\r\n\r\nlet SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nexport let DEFAULT_TILE_WIDTH: number = 150;\r\nexport let DEFAULT_TILE_HEIGHT: number = 150;\r\nexport let UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nlet DEFAULT_OPTIONS = {\r\n    tileWidth              : DEFAULT_TILE_WIDTH,   // 'px'\r\n    tileHeight             : DEFAULT_TILE_HEIGHT,   // 'px'\r\n    gutter                 : 20,    // 'px'\r\n    container              : 'pip-draggable-grid:first-of-type',\r\n    //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n    activeDropzoneClass    : 'dropzone-active',\r\n    groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\nclass DraggableController {\r\n  public opts: any;\r\n  public groups: any;\r\n  public sourceDropZoneElem: any = null;\r\n  public isSameDropzone: boolean = true;\r\n  public tileGroups: any = null;\r\n  public availableWidth: any;\r\n  public availableColumns: any;\r\n  public groupsContainers: any;\r\n  public container: any;\r\n  public activeDraggedGroup: any;\r\n  public draggedTile: any;\r\n  public containerOffset: any;\r\n\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _$rootScope: angular.IRootScopeService;\r\n  private _$scope: angular.IScope;\r\n  private _$compile: angular.ICompileService;\r\n  private _$element: any;\r\n\r\n  constructor(\r\n    $scope: angular.IScope, \r\n    $rootScope: angular.IRootScopeService, \r\n    $compile: angular.ICompileService, \r\n    $timeout: angular.ITimeoutService,\r\n    $element: any, \r\n    pipDragTile: IDragTileService, \r\n    pipTilesGrid: ITilesGridService,\r\n    pipMedia: pip.layouts.IMediaService\r\n  ) {\r\n    this._$timeout = $timeout;\r\n    this._$rootScope = $rootScope;\r\n    this._$scope = $scope;\r\n    this._$compile = $compile;\r\n    this._$element = $element;\r\n\r\n    this.opts = _.merge({ mobileBreakpoint: pipMedia.breakpoints.xs }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\r\n\r\n    this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\r\n      return {\r\n        title : group.title,\r\n        editingName : false,\r\n        index: groupIndex,\r\n        source: group.source.map((tile) => {\r\n          let tileScope = $rootScope.$new(false, $scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex;\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl    : $compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size   : tile.opts.size\r\n          });\r\n        })\r\n      };\r\n    });\r\n\r\n    // Add templates watcher\r\n    $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\r\n      this.watch(newVal);\r\n    }, true);\r\n\r\n    // Initialize data\r\n    this.initialize();\r\n\r\n    // Resize handler TODO: replace by pip resize watchers\r\n    $(window).on('resize', _.debounce(() => {\r\n      this.availableWidth   = this.getContainerWidth();\r\n      this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        group\r\n          .setAvailableColumns(this.availableColumns)\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }, 50));\r\n  }\r\n\r\n  // Watch handler\r\n  private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n            \r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this._$timeout(() => { this.updateTilesGroups(); });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this._$timeout(() => { this.updateTilesGroups(); });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this._$timeout(() => { this.updateTilesGroups(); });\r\n      }\r\n  }\r\n\r\n  // Inline edit group handlers\r\n  public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this._$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n  }\r\n\r\n  public cancelEditing (group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput (group) {\r\n      this._$timeout(() => {\r\n        group.editingName = false;\r\n        this._$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this._$scope['draggableCtrl'].tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput (group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source?: any) {\r\n      switch(updateType) {\r\n        case 'addGroup': \r\n          if (this.groups.length !== this._$scope['draggableCtrl'].tilesTemplates.length) {\r\n              this._$scope['draggableCtrl'].tilesTemplates.push(source);\r\n          }          \r\n          break;\r\n        case 'moveTile': \r\n          const {fromIndex, toIndex, tileOptions, fromTileIndex} = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this._$scope['draggableCtrl'].tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this._$scope['draggableCtrl'].tilesTemplates[toIndex].source.push({opts: tileOptions});\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex?) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n            groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        let child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n            remain = [],\r\n            containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n          if (_.findIndex(newGroups, (g) => { return g['title'] === group.title}) < 0) {\r\n            removeIndexes.push(index);\r\n          } else {\r\n            remain.push(index);\r\n          }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n          this.groups.splice(index, 1);\r\n          this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n          containers.push(this.groupsContainers[index]);\r\n      });\r\n      \r\n       this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n          this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      let group = {\r\n        title : sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          let tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl    : this._$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size   : tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this._$scope.$$phase) this._$scope.$apply();\r\n\r\n      this._$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n        tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n        tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n        const newTile = IDragTileConstructor(DragTileService,{\r\n          tpl    : this._$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size   : tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition?, draggedTile?) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this._$scope['$container'] || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT\r\n        : Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile']  = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container          = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile        = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n      \r\n      this._$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x      = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y      = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top  = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top : event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex   = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this._$timeout(() => { this.setGroupContainersHeight(); }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this._$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile        = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top : containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this._$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this._$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {from: from, to: to, tile: movedTile});\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup      = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({title: 'New group', source: []});\r\n      this._$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this._$timeout(() => {\r\n        this.availableWidth   = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups       = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            // enable autoScroll\r\n            autoScroll: true,\r\n            onstart: (event) => { this.onDragStartListener(event) },\r\n            onmove : (event) => { this.onDragMoveListener(event) },\r\n            onend  : (event) => { this.onDragEndListener() }\r\n          });\r\n        \r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => { console.log('here');  this.onDropToFictGroupListener(event) },\r\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\r\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\r\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\r\n          })\r\n        \r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop          : (event) => { this.onDropListener(event) },\r\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\r\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\r\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\r\n          });\r\n\r\n        this._$scope['$container']\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n      }, 0);\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipDragged')\r\n    .controller('pipDraggableCtrl', DraggableController);\r\n","'use strict';\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .directive('pipDraggableGrid', DragDirective);\r\n\r\nfunction DragDirective() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    templateUrl: 'draggable/Draggable.html',\r\n    bindToController: true,\r\n    controllerAs: 'draggableCtrl',\r\n    controller: 'pipDraggableCtrl',\r\n    link: function ($scope, $elem) {\r\n      $scope.$container = $elem;\r\n    }\r\n  };\r\n}","'use strict';\r\n\r\nexport interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","'use strict';\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .directive('pipDraggableTiles', DraggableTile);\r\n\r\nfunction DraggableTile() {\r\n  return {\r\n    restrict: 'A',\r\n    link: function ($scope, $elem, $attr) {\r\n      var docFrag = document.createDocumentFragment();\r\n      var group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n      group.forEach(function (tile) {\r\n        var tpl = wrapComponent(tile.getCompiledTemplate());\r\n        docFrag.appendChild(tpl);\r\n      });\r\n\r\n      $elem.append(docFrag);\r\n\r\n      function wrapComponent(elem) {\r\n        return $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(elem)\r\n          .get(0);\r\n      }\r\n    }\r\n  };\r\n}","'use strict';\r\n\r\nexport interface TilesGridConstructor {\r\n  new (tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem):ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth?): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nlet MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    let basicCol = prevCell && prevCell.col || 0;\r\n    let basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      let gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          let rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      let prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell;\r\n    let col;\r\n    let row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    let basicRow = this.getBasicRow(prevCell);\r\n    let basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      let gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          let rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    let self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth?): any {\r\n    let self = this;\r\n    let colsInRow = 0;\r\n    let rows = 0;\r\n    let tileWidth = singleTileWidth || this.opts.tileWidth;\r\n    let offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      let tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n        Array.apply(null, Array(newCellCount)).forEach(() => {\r\n          if (self.columns < colsInRow + 1) {\r\n            rows++;\r\n            colsInRow = 0;\r\n\r\n            self.gridCells.push(gridInRow);\r\n            gridInRow = [];\r\n          }\r\n\r\n          let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n          let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n          // Describe grid cell size through block corners coordinates\r\n          gridInRow.push({\r\n            top: top,\r\n            left: left,\r\n            bottom: top + self.opts.tileHeight,\r\n            right: left + tileWidth,\r\n            row: rows,\r\n            col: colsInRow\r\n          });\r\n\r\n          colsInRow++;\r\n        });\r\n      }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    let self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      let tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      let tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        let tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    let foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        let tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    let movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    let beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    let index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","export interface IWidgetTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n}\r\n\r\nclass widgetTemplateService implements IWidgetTemplateService {\r\n    private _$interpolate: angular.IInterpolateService;\r\n    private _$compile: angular.ICompileService;\r\n    private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n    constructor(\r\n        $interpolate: angular.IInterpolateService,\r\n        $compile: angular.ICompileService,\r\n        $templateRequest: angular.ITemplateRequestService\r\n    ) {\r\n        this._$interpolate = $interpolate;\r\n        this._$compile = $compile;\r\n        this._$templateRequest = $templateRequest;\r\n    }\r\n\r\n    public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n        const {\r\n            template,\r\n            templateUrl,\r\n            type\r\n        } = source;\r\n        let result;\r\n\r\n        if (type) {\r\n            const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n            return strictCompile == true ?\r\n                (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                interpolated;\r\n        }\r\n\r\n        if (template) {\r\n            return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n        }\r\n\r\n        if (templateUrl) {\r\n            this._$templateRequest(templateUrl, false).then((html) => {\r\n                result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public setImageMarginCSS($element, image) {\r\n        let\r\n            containerWidth = $element.width ? $element.width() : $element.clientWidth, \r\n            containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n            imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n            imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n            margin = 0,\r\n            cssParams = {};\r\n\r\n        if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n            margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n            cssParams['margin-left'] = '' + margin + 'px';\r\n            cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n            cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n            cssParams['margin-top'] = '';\r\n        } else {\r\n            margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n            cssParams['margin-top'] = '' + margin + 'px';\r\n            cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n            cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n            cssParams['margin-left'] = '';\r\n        }\r\n\r\n        $(image).css(cssParams);\r\n    }\r\n}\r\n\r\n// image load directive TODO: remove to pipImageUtils\r\nfunction ImageLoad($parse) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element, attrs) {\r\n            var callback = $parse(attrs.pipImageLoad);\r\n            element.bind('load', (event) => {\r\n                callback(scope, {$event: event});\r\n            });\r\n        } \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDashboard')\r\n    .service('pipWidgetTemplate', widgetTemplateService)\r\n    .directive('pipImageLoad', ImageLoad);","(() => {\r\n  'use strict';\r\n\r\n  angular.module('pipWidget', []);\r\n})();\r\n\r\nimport './calendar/WidgetCalendar';\r\nimport './event/WidgetEvent';\r\nimport './menu/WidgetMenuService';\r\nimport './menu/WidgetMenuDirective';\r\nimport './notes/WidgetNotes';\r\nimport './position/WidgetPosition';\r\nimport './statistics/WidgetStatistics';\r\nimport './picture_slider/WidgetPictureSlider';\r\n","import { MenuWidgetService } from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass CalendarWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n\r\n  public color: string = 'blue';\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n        this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n        }});\r\n        this['options'].date = this['options'].date || new Date();\r\n        this.color = this['options'].color || this.color;\r\n      }\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size,\r\n      date: this['options'].date,\r\n      extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].date = result.date;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n(() => {\r\n\r\n  let pipCalendarWidget = {\r\n      bindings        : {\r\n        options: '=pipOptions',\r\n      },\r\n      controller      : CalendarWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/calendar/WidgetCalendar.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipCalendarWidget', pipCalendarWidget);\r\n\r\n})();\r\n","import { MenuWidgetService} from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass EventWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _oldOpacity: number;\r\n\r\n  public color: string = 'gray';\r\n  public opacity: number = 0.57;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n    }});\r\n    this.color = this['options'].color || this.color;\r\n    this.opacity = this['options'].opacity || this.opacity;\r\n\r\n    this.drawImage();\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      this.drawImage();\r\n    });\r\n  }\r\n\r\n  private drawImage() {\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.onImageLoad(this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._oldOpacity = _.clone(this.opacity);\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\r\n      date: this['options'].date,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      opacity: this.opacity,\r\n      onOpacitytest: (opacity) => {\r\n        this.opacity = opacity;\r\n      },\r\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].date = result.date;\r\n      this['options'].title = result.title;\r\n      this['options'].text = result.text;\r\n      this['options'].opacity = result.opacity;\r\n    }, () => {\r\n      this.opacity = this._oldOpacity;\r\n    });\r\n  }\r\n\r\n  private onImageLoad(image) {\r\n    this.setImageMarginCSS(this._$element.parent(), image);\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  // Later replace by pipImageUtils sevice's function\r\n  private setImageMarginCSS($element, image) {\r\n    let\r\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n      imageWidth = image[0].naturalWidth || image.width,\r\n      imageHeight = image[0].naturalHeight || image.height,\r\n      margin = 0,\r\n      cssParams = {};\r\n\r\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n      cssParams['margin-left'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n      cssParams['margin-top'] = '';\r\n    } else {\r\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n      cssParams['margin-top'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n      cssParams['margin-left'] = '';\r\n    }\r\n\r\n    image.css(cssParams);\r\n  }\r\n}\r\n\r\n\r\n(() => {\r\n  let pipEventWidget =  {\r\n      bindings: {\r\n        options: '=pipOptions'\r\n      },\r\n      controller: EventWidgetController,\r\n      controllerAs: 'widgetCtrl',\r\n      templateUrl: 'widgets/event/WidgetEvent.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipEventWidget', pipEventWidget);\r\n})();","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .directive('pipMenuWidget', pipMenuWidget);\r\n\r\n  function pipMenuWidget() {\r\n    return {\r\n      restrict        : 'EA',\r\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\r\n    };\r\n  }\r\n})();\r\n","\r\nexport class MenuWidgetService {\r\n  public menu: any = [\r\n    {\r\n      title: 'Change Size',\r\n      action: angular.noop,\r\n      submenu: [{\r\n          title: '1 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 1,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 2',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 2\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\nclass MenuWidgetProvider {\r\n    private _service: MenuWidgetService;\r\n\r\n    constructor() {\r\n    }\r\n\r\n   public $get() {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new MenuWidgetService();\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .provider('pipWidgetMenu', MenuWidgetProvider);\r\n})();","'use strict';\r\n\r\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass NotesWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n\r\n  public color: string = 'orange';\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n      }});\r\n      this.color = this['options'].color || this.color;\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].text = result.text;\r\n      this['options'].title = result.title;\r\n    });\r\n  }\r\n}\r\n\r\n  let pipNotesWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      controller      : NotesWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipNotesWidget', pipNotesWidget);\r\n\r\n","'use strict';\r\n\r\nimport {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\nimport {\r\n  IWidgetTemplateService\r\n} from '../../utility/WidgetTemplateUtility';\r\n\r\nclass PictureSliderController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _widgetUtility: IWidgetTemplateService;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public animationType: string = 'fading';\r\n  public animationInterval: number = 5000;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._widgetUtility = pipWidgetTemplate;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    if (this['options']) {\r\n      this.animationType = this['options'].animationType || this.animationType;\r\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\r\n    }\r\n  }\r\n\r\n  public onImageLoad($event) {\r\n    this._$timeout(() => {\r\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this._$timeout(() => {\r\n      _.each(this._$element.find('img'), (image) => {\r\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\r\n      });\r\n    }, 500);\r\n  }\r\n}\r\n\r\nlet pipPictureSliderWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PictureSliderController,\r\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\r\n  controllerAs: 'widgetCtrl'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass PositionWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _locationDialog: any;\r\n\r\n  public showPosition: boolean = true;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService,\r\n    $element: any,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipLocationEditDialog: any,\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._locationDialog = pipLocationEditDialog;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({\r\n      title: 'Configurate',\r\n      click: () => {\r\n        this.onConfigClick();\r\n      }\r\n    });\r\n    this.menu.push({\r\n      title: 'Change location',\r\n      click: () => {\r\n        this.openLocationEditDialog();\r\n      }\r\n    });\r\n\r\n    this['options'].location = this['options'].location || this['options'].position;\r\n\r\n    $scope.$watch('widgetCtrl.options.location', () => {\r\n      this.reDrawPosition();\r\n    });\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      if (newVal == true) this.reDrawPosition();\r\n    });\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-position-config',\r\n      size: this['options'].size,\r\n      locationName: this['options'].locationName,\r\n      hideColors: true,\r\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.changeSize(result.size);\r\n      this['options'].locationName = result.locationName;\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reDrawPosition();\r\n  }\r\n\r\n  public openLocationEditDialog() {\r\n    this._locationDialog.show({\r\n      locationName: this['options'].locationName,\r\n      locationPos: this['options'].location\r\n    }, (newPosition) => {\r\n      if (newPosition) {\r\n        this['options'].location = newPosition.location;\r\n        this['options'].locationName = newPosition.locatioName;\r\n      }\r\n    });\r\n  }\r\n\r\n  private reDrawPosition() {\r\n    this.showPosition = false;\r\n    this._$timeout(() => {\r\n      this.showPosition = true;\r\n    }, 50);\r\n  }\r\n}\r\n\r\n\r\nlet pipPositionWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PositionWidgetController,\r\n  controllerAs: 'widgetCtrl',\r\n  templateUrl: 'widgets/position/WidgetPosition.html'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\r\n\r\nlet SMALL_CHART: number = 70;\r\nlet BIG_CHART: number = 250;\r\n\r\nclass StatisticsWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public reset: boolean = false;\r\n  public chartSize: number = SMALL_CHART;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reset = true;\r\n    this.setChartSize();\r\n    this._$timeout(() => {\r\n      this.reset = false;\r\n    }, 500);\r\n  }\r\n\r\n  private setChartSize() {\r\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n  }\r\n}\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  let pipStatisticsWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      bindToController: true,\r\n      controller      : StatisticsWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipStatisticsWidget', pipStatisticsWidget);\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">Add component<md-input-container class=\"layout-row flex-auto m0\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"Create New Group\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Add\">Cancel</md-button><md-button ng-click=\"dialogCtrl.add()\" arial-label=\"Cancel\">Add</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-extension-url=\"{{ vm.params.extensionUrl }}\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{vm.dialogTitle}}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!vm.hideSizes\" pip-buttons=\"vm.sizes\" ng-model=\"vm.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!vm.hideColors\" pip-colors=\"vm.colors\" ng-model=\"vm.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onApply()\">Apply</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container>Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"vm.opacity\" ng-change=\"vm.onOpacitytest(vm.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"vm.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"]}