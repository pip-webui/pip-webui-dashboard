{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/add_tile_dialog/AddTileDialogController.ts","src/add_tile_dialog/AddTileProvider.ts","src/add_tile_dialog/index.ts","src/calendar_tile/CalendarTile.ts","src/common_tile/Tile.ts","src/config_tile_dialog/ConfigDialogController.ts","src/config_tile_dialog/ConfigDialogExtendComponent.ts","src/config_tile_dialog/ConfigDialogService.ts","src/config_tile_dialog/index.ts","src/dashboard/Dashboard.ts","src/draggable/Draggable.ts","src/draggable/DraggableTileService.ts","src/draggable/index.ts","src/event_tile/EventTile.ts","src/index.ts","src/menu_tile/MenuTileDirective.ts","src/menu_tile/MenuTileService.ts","src/menu_tile/index.ts","src/note_tile/NoteTile.ts","src/picture_slider_tile/PictureSliderTile.ts","src/position_tile/PositionTile.ts","src/statistics_tile/StatisticsTile.ts","src/tile_group/TileGroupDirective.ts","src/tile_group/TileGroupService.ts","src/tile_group/index.ts","src/utility/TileTemplateUtility.ts","temp/pip-webui-dashboard-html.min.js"],"names":[],"mappings":"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EAAE,KAAU;gBACzD,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAE5C,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;oBACvB,QAAQ,CAAC,KAAK,EAAE;wBACZ,MAAM,EAAE,KAAK;qBAChB,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAA;IACL,CAAC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,cAAc,CAAC;SACtB,OAAO,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;SAC/C,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AAC9C,CAAC;;AChGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class AddTileDialog {\r\n    title: string;\r\n    icon: string;\r\n    name: string;\r\n    amount: number;\r\n}\r\n\r\nexport class AddTileDialogController implements ng.IController {\r\n    public defaultTiles: [AddTileDialog[]];\r\n    public groups: any;\r\n    public totalTiles: number = 0;\r\n\r\n    constructor(\r\n        groups: any,\r\n        public activeGroupIndex: number,\r\n        widgetList: [AddTileDialog[]],\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultTiles = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n            return group['title'];\r\n        });\r\n    }\r\n\r\n    public $onInit() {}\r\n    \r\n    public add() {\r\n        this.$mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets: this.defaultTiles\r\n        });\r\n    };\r\n\r\n    public cancel() {\r\n        this.$mdDialog.cancel();\r\n    };\r\n\r\n    public encrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultTiles[groupIndex][widgetIndex];\r\n        widget.amount++;\r\n        this.totalTiles++;\r\n    };\r\n\r\n    public decrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultTiles[groupIndex][widgetIndex];\r\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n        this.totalTiles = this.totalTiles ? this.totalTiles - 1 : 0;\r\n    };\r\n}","import {\r\n  AddTileDialog,\r\n  AddTileDialogController\r\n} from './AddTileDialogController';\r\n\r\nexport interface IAddTileDialogService {\r\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\r\n}\r\n\r\nexport interface IAddTileDialogprovider {\r\n  configWidgetList(list: [AddTileDialog[]]): void;\r\n}\r\n\r\n{\r\n  const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      (<any>pipTranslate).setTranslations('en', {\r\n        DASHBOARD_ADD_TILE_DIALOG_TITLE: 'Add component',\r\n        DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\r\n        DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP: 'Create new group'\r\n      });\r\n      (<any>pipTranslate).setTranslations('ru', {\r\n        DASHBOARD_ADD_TILE_DIALOG_TITLE: 'Добавить компонент',\r\n        DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\r\n        DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\r\n      });\r\n    }\r\n  }\r\n\r\n  class AddTileDialogService implements IAddTileDialogService {\r\n    public constructor(\r\n      private widgetList: [AddTileDialog[]],\r\n      private $mdDialog: angular.material.IDialogService\r\n    ) {}\r\n\r\n    public show(groups, activeGroupIndex) {\r\n      return this.$mdDialog\r\n        .show({\r\n          templateUrl: 'add_tile_dialog/AddTile.html',\r\n          bindToController: true,\r\n          controller: AddTileDialogController,\r\n          controllerAs: 'dialogCtrl',\r\n          clickOutsideToClose: true,\r\n          resolve: {\r\n            groups: () => {\r\n              return groups;\r\n            },\r\n            activeGroupIndex: () => {\r\n              return activeGroupIndex;\r\n            },\r\n            widgetList: () => {\r\n              return (<any>this.widgetList);\r\n            }\r\n          }\r\n        });\r\n    };\r\n  }\r\n\r\n  class AddTileDialogProvider implements IAddTileDialogprovider {\r\n    private _service: AddTileDialogService;\r\n    private _widgetList: [AddTileDialog[]] = null;\r\n\r\n    constructor() {}\r\n\r\n    public configWidgetList = function (list: [AddTileDialog[]]) {\r\n      this._widgetList = list;\r\n    };\r\n\r\n    public $get($mdDialog: angular.material.IDialogService) {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new AddTileDialogService(this._widgetList, $mdDialog);\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipAddDashboardTileDialog')\r\n    .config(setTranslations)\r\n    .provider('pipAddTileDialog', AddTileDialogProvider);\r\n}","angular\r\n    .module('pipAddDashboardTileDialog', ['ngMaterial']);\r\n\r\nimport './AddTileDialogController';\r\nimport './AddTileProvider';","import {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\nimport {\r\n  ITileConfigService\r\n} from '../config_tile_dialog/ConfigDialogService';\r\n\r\n{\r\n  class CalendarTileController extends MenuTileService {\r\n    constructor(\r\n      private pipTileConfigDialogService: ITileConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n        this.menu.push({\r\n          title: 'Configurate',\r\n          click: () => {\r\n            this.onConfigClick();\r\n          }\r\n        });\r\n        this.options.date = this.options.date || new Date();\r\n        this.color = this.options.color || 'blue';\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipTileConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          date: this.options.date,\r\n        },\r\n        extensionUrl: 'calendar_tile/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const CalendarTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n    },\r\n    controller: CalendarTileController,\r\n    templateUrl: 'calendar_tile/CalendarTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipCalendarTile', CalendarTile);\r\n\r\n}","export interface IDashboardTile {\r\n    options: any;\r\n    color: string;\r\n    size: Object | string | number;\r\n}\r\n\r\nexport class DashboardTile implements IDashboardTile {\r\n    public options: any;\r\n    public color: string;\r\n    public size: Object | string | number;\r\n\r\n    constructor() { }\r\n}","\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [{\r\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL',\r\n            id: '11'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE',\r\n            id: '21'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE',\r\n            id: '22'\r\n        }\r\n    ];\r\n}\r\n\r\nexport class TileConfigDialogController {\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n    public onCancel: Function;\r\n\r\n    constructor(\r\n        public params,\r\n        public extensionUrl,\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n\r\n        this.onCancel = () => {\r\n            this.$mdDialog.cancel();\r\n        }\r\n    }\r\n\r\n    public onApply(updatedData) {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(updatedData);\r\n    }\r\n}","{    \r\n    interface ITileConfigExtendComponentBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtensionUrl: any;\r\n        pipDialogScope: any;\r\n        pipApply: any;\r\n    }\r\n\r\n    const TileConfigExtendComponentBindings: ITileConfigExtendComponentBindings = {\r\n        pipExtensionUrl: '<',\r\n        pipDialogScope: '<',\r\n        pipApply: '&'\r\n    }\r\n\r\n    class TileConfigExtendComponentChanges implements ng.IOnChangesObject, ITileConfigExtendComponentBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        pipExtensionUrl: ng.IChangesObject<string>;\r\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\r\n\r\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\r\n    }\r\n\r\n    interface ITileConfigExtendComponentAttributes extends ng.IAttributes {\r\n        pipExtensionUrl: string\r\n    }\r\n\r\n    class TileConfigExtendComponentController implements ITileConfigExtendComponentBindings {\r\n        public pipExtensionUrl: string;\r\n        public pipDialogScope: ng.IScope;\r\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\r\n\r\n        constructor(\r\n            private $templateRequest: angular.ITemplateRequestService,\r\n            private $compile: angular.ICompileService,\r\n            private $scope: angular.IScope, \r\n            private $element: JQuery, \r\n            private $attrs: ITileConfigExtendComponentAttributes\r\n        ) { }\r\n\r\n        public $onChanges(changes: TileConfigExtendComponentChanges) {\r\n            if (changes.pipDialogScope) {\r\n                delete changes.pipDialogScope.currentValue['$scope'];\r\n                angular.extend(this, changes.pipDialogScope.currentValue);\r\n            }\r\n            if (changes.pipExtensionUrl && changes.pipExtensionUrl.currentValue) {\r\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\r\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\r\n                });\r\n            }\r\n        }\r\n\r\n        public onApply() {\r\n            this.pipApply({updatedData: this});\r\n        }\r\n    }\r\n\r\n    const pipTileConfigComponent: ng.IComponentOptions = {\r\n        templateUrl: 'config_tile_dialog/ConfigDialogExtendComponent.html',\r\n        controller: TileConfigExtendComponentController,\r\n        bindings: TileConfigExtendComponentBindings\r\n    }\r\n\r\n    angular\r\n        .module('pipConfigDashboardTileDialog')\r\n        .component('pipTileConfigExtendComponent', pipTileConfigComponent);\r\n}","import { TileConfigDialogController } from './ConfigDialogController';\r\n\r\nexport interface ITileConfigService {\r\n    show(params: ITileConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\r\n}\r\n\r\nexport interface ITileConfigDialogOptions extends angular.material.IDialogOptions {\r\n    dialogClass?: string;\r\n    extensionUrl?: string;\r\n    event?: any;\r\n}\r\n\r\n{\r\n    const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                DASHBOARD_TILE_CONFIG_DIALOG_TITLE: 'Edit tile',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL: 'Small',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE: 'Large'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                DASHBOARD_TILE_CONFIG_DIALOG_TITLE: 'Изменить виджет',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\r\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\r\n            });\r\n        }\r\n    }\r\n\r\n    class TileConfigDialogService {\r\n        public constructor(\r\n            public $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params: ITileConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void) {\r\n            this.$mdDialog.show({\r\n                    targetEvent: params.event,\r\n                    templateUrl: params.templateUrl || 'dialogs/tile_config/ConfigDialog.html',\r\n                    controller: TileConfigDialogController,\r\n                    bindToController: true,\r\n                    controllerAs: 'vm',\r\n                    locals: {\r\n                        extensionUrl: params.extensionUrl,\r\n                        params: params.locals\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((key) => {\r\n                    if (successCallback) {\r\n                        successCallback(key);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipConfigDashboardTileDialog')\r\n        .config(setTranslations)\r\n        .service('pipTileConfigDialogService', TileConfigDialogService);\r\n}","\r\nangular\r\n    .module('pipConfigDashboardTileDialog', ['ngMaterial']);\r\n\r\nimport './ConfigDialogController';\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","import {\r\n  ITileTemplateService\r\n} from '../utility/TileTemplateUtility';\r\nimport {\r\n  IAddTileDialogService,\r\n  IAddTileDialogprovider\r\n} from '../add_tile_dialog/AddTileProvider'\r\n\r\n{\r\n  const setTranslations = function ($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      ( < any > pipTranslate).setTranslations('en', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n      });\r\n      ( < any > pipTranslate).setTranslations('ru', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n      });\r\n    }\r\n  }\r\n\r\n  const configureAvailableWidgets = function (pipAddTileDialogProvider: IAddTileDialogprovider) {\r\n    pipAddTileDialogProvider.configWidgetList([\r\n      [{\r\n          title: 'Event',\r\n          icon: 'document',\r\n          name: 'event',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Position',\r\n          icon: 'location',\r\n          name: 'position',\r\n          amount: 0\r\n        }\r\n      ],\r\n      [{\r\n          title: 'Calendar',\r\n          icon: 'date',\r\n          name: 'calendar',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Sticky Notes',\r\n          icon: 'note-take',\r\n          name: 'notes',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Statistics',\r\n          icon: 'tr-statistics',\r\n          name: 'statistics',\r\n          amount: 0\r\n        }\r\n      ]\r\n    ]);\r\n  }\r\n\r\n  class draggableOptions {\r\n    tileWidth: number;\r\n    tileHeight: number;\r\n    gutter: number;\r\n    inline: boolean;\r\n  }\r\n\r\n  const DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n    tileWidth: 150, // 'px'\r\n    tileHeight: 150, // 'px'\r\n    gutter: 10, // 'px'\r\n    inline: false\r\n  };\r\n\r\n  interface DashboardBindings {\r\n      gridOptions: any;\r\n      groupAdditionalActions: any;\r\n      groupedWidgets: any;\r\n  }\r\n\r\n  class DashboardController implements ng.IController, DashboardBindings {\r\n    private defaultGroupMenuActions: any = [{\r\n        title: 'Add Component',\r\n        callback: (groupIndex) => {\r\n          this.addComponent(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Remove',\r\n        callback: (groupIndex) => {\r\n          this.removeGroup(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Configurate',\r\n        callback: (groupIndex) => {\r\n          console.log('configurate group with index:', groupIndex);\r\n        }\r\n      }\r\n    ];\r\n    private _includeTpl: string = '<pip-{{ type }}-tile group=\"groupIndex\" index=\"index\"' +\r\n      'pip-options=\"$parent.$ctrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n      '</pip-{{ type }}-tile>';\r\n\r\n    public groupedWidgets: any;\r\n    public draggableGridOptions: draggableOptions;\r\n    public widgetsTemplates: any;\r\n    public groupMenuActions: any = this.defaultGroupMenuActions;\r\n    public widgetsContext: any;\r\n    public gridOptions: any;\r\n    public groupAdditionalActions: any;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $attrs: any,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $interpolate: angular.IInterpolateService,\r\n      private pipAddTileDialog: IAddTileDialogService,\r\n      private pipTileTemplate: ITileTemplateService\r\n    ) {\r\n      // Add class to style scroll bar\r\n      $element.addClass('pip-scroll');\r\n\r\n      // Set tiles grid options\r\n      this.draggableGridOptions = this.gridOptions || DEFAULT_GRID_OPTIONS;\r\n\r\n      // Switch inline displaying\r\n      if (this.draggableGridOptions.inline === true) {\r\n        $element.addClass('inline-grid');\r\n      }\r\n      // Extend group's menu actions\r\n      if (this.groupAdditionalActions) angular.extend(this.groupMenuActions, this.groupAdditionalActions);\r\n\r\n      // Compile widgets\r\n      this.widgetsContext = $scope;\r\n      this.compileWidgets();\r\n\r\n      this.$timeout(() => {\r\n        this.$element.addClass('visible');\r\n      }, 700);\r\n    }\r\n\r\n    private compileWidgets() {\r\n      _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n          group.source = group.source.map((widget, index) => {\r\n            // Establish default props\r\n            widget.size = widget.size || {\r\n              colSpan: 1,\r\n              rowSpan: 1\r\n            };\r\n            widget.index = index;\r\n            widget.groupIndex = groupIndex;\r\n            widget.menu = widget.menu || {};\r\n            angular.extend(widget.menu, [{\r\n              title: 'Remove',\r\n              click: (item, params, object) => {\r\n                this.removeWidget(item, params, object);\r\n              }\r\n            }]);\r\n\r\n            return {\r\n              opts: widget,\r\n              template: this.pipTileTemplate.getTemplate(widget, this._includeTpl)\r\n            };\r\n          })\r\n      });\r\n    }\r\n\r\n    public addComponent(groupIndex) {\r\n      this.pipAddTileDialog\r\n        .show(this.groupedWidgets, groupIndex)\r\n        .then((data) => {\r\n          var activeGroup;\r\n\r\n          if (!data) {\r\n            return;\r\n          }\r\n\r\n          if (data.groupIndex !== -1) {\r\n            activeGroup = this.groupedWidgets[data.groupIndex];\r\n          } else {\r\n            activeGroup = {\r\n              title: 'New group',\r\n              source: []\r\n            };\r\n          }\r\n\r\n          this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n          if (data.groupIndex === -1) {\r\n            this.groupedWidgets.push(activeGroup);\r\n          }\r\n\r\n          this.compileWidgets();\r\n        });\r\n    };\r\n\r\n    public removeGroup = (groupIndex) => {\r\n      console.log('removeGroup', groupIndex);\r\n      this.groupedWidgets.splice(groupIndex, 1);\r\n    }\r\n\r\n    private addWidgets(group, widgets) {\r\n      widgets.forEach((widgetGroup) => {\r\n        widgetGroup.forEach((widget) => {\r\n          if (widget.amount) {\r\n            Array.apply(null, Array(widget.amount)).forEach(() => {\r\n              group.push({\r\n                type: widget.name\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    private removeWidget(item, params, object) {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n      this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n      this.$timeout(() => {\r\n        this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const Dashboard: ng.IComponentOptions = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: DashboardController,\r\n    templateUrl: 'dashboard/Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .config(configureAvailableWidgets)\r\n    .config(setTranslations)\r\n    .component('pipDashboard', Dashboard);\r\n\r\n}","declare var interact;\r\n\r\nimport {\r\n  DragTileService,\r\n  IDragTileService,\r\n  IDragTileConstructor\r\n} from './DraggableTileService';\r\nimport {\r\n  TilesGridService,\r\n  ITilesGridService,\r\n  ITilesGridConstructor\r\n} from '../tile_group/TileGroupService';\r\n\r\nexport const DEFAULT_TILE_WIDTH: number = 150;\r\nexport const DEFAULT_TILE_HEIGHT: number = 150;\r\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nconst DEFAULT_OPTIONS = {\r\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\r\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\r\n  gutter: 20, // 'px'\r\n  container: 'pip-draggable-grid:first-of-type',\r\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n  activeDropzoneClass: 'dropzone-active',\r\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\n{\r\n  interface IDraggableBindings {\r\n      tilesTemplates: any;\r\n      tilesContext: any;\r\n      options: any;\r\n      groupMenuActions: any;\r\n      $container: JQuery;\r\n  }\r\n\r\n  interface IDraggableControllerScope extends ng.IScope {\r\n    $container: JQuery;\r\n    tilesTemplates: any;\r\n    options: any;\r\n  }\r\n\r\n  interface ITileScope extends ng.IScope {\r\n    index: number | string;\r\n    groupIndex: number | string;\r\n  }\r\n\r\n  class DraggableController implements ng.IComponentController, IDraggableBindings {\r\n    public opts: any;\r\n    public groups: any;\r\n    public sourceDropZoneElem: any = null;\r\n    public isSameDropzone: boolean = true;\r\n    public tileGroups: any = null;\r\n    public availableWidth: number;\r\n    public availableColumns: number;\r\n    public groupsContainers: any;\r\n    public container: any;\r\n    public activeDraggedGroup: any;\r\n    public draggedTile: any;\r\n    public containerOffset: any;\r\n    public tilesTemplates: any;\r\n    public tilesContext: any;\r\n    public options: any;\r\n    public groupMenuActions: any;\r\n    public $container: JQuery;\r\n\r\n    constructor(\r\n      private $scope: IDraggableControllerScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $compile: angular.ICompileService,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: JQuery,\r\n      pipDragTile: IDragTileService,\r\n      pipTilesGrid: ITilesGridService,\r\n      pipMedia: pip.layouts.IMediaService\r\n    ) {\r\n      this.opts = _.merge({\r\n        mobileBreakpoint: pipMedia.breakpoints.xs\r\n      }, DEFAULT_OPTIONS, this.options);\r\n\r\n      this.groups = this.tilesTemplates.map((group, groupIndex) => {\r\n        return {\r\n          title: group.title,\r\n          editingName: false,\r\n          index: groupIndex,\r\n          source: group.source.map((tile) => {\r\n            const tileScope = this.createTileScope(tile);\r\n\r\n            return IDragTileConstructor(DragTileService, {\r\n              tpl: $compile(tile.template)(tileScope),\r\n              options: tile.opts,\r\n              size: tile.opts.size\r\n            });\r\n          })\r\n        };\r\n      });\r\n\r\n      // Add templates watcher\r\n      $scope.$watch('$ctrl.tilesTemplates', (newVal) => {\r\n        this.watch(newVal);\r\n      }, true);\r\n\r\n      // Initialize data\r\n      this.initialize();\r\n\r\n      // Resize handler TODO: replace by pip resize watchers\r\n      $(window).on('resize', _.debounce(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n        this.tileGroups.forEach((group) => {\r\n          group\r\n            .setAvailableColumns(this.availableColumns)\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight();\r\n        });\r\n      }, 50));\r\n    }\r\n\r\n    // Post link function\r\n    public $postLink() {\r\n      this.$container = this.$element;\r\n    }\r\n\r\n    // Watch handler\r\n    private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n\r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this.$timeout(() => {\r\n          this.updateTilesGroups();\r\n        });\r\n      }\r\n    }\r\n\r\n    // Inline edit group handlers\r\n    public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this.$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n    }\r\n\r\n    public cancelEditing(group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput(group) {\r\n      this.$timeout(() => {\r\n        group.editingName = false;\r\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this.tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput(group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source ? : any) {\r\n      switch (updateType) {\r\n        case 'addGroup':\r\n          if (this.groups.length !== this.tilesTemplates.length) {\r\n            this.tilesTemplates.push(source);\r\n          }\r\n          break;\r\n        case 'moveTile':\r\n          const {\r\n            fromIndex,\r\n            toIndex,\r\n            tileOptions,\r\n            fromTileIndex\r\n          } = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this.tilesTemplates[toIndex].source.push({\r\n            opts: tileOptions\r\n          });\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private createTileScope(tile: any): ITileScope {\r\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.tilesContext);\r\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\r\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      return tileScope;\r\n    }\r\n\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex ? ) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        const child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n        remain = [],\r\n        containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n        if (_.findIndex(newGroups, (g) => {\r\n            return g['title'] === group.title\r\n          }) < 0) {\r\n          removeIndexes.push(index);\r\n        } else {\r\n          remain.push(index);\r\n        }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n        this.groups.splice(index, 1);\r\n        this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n        containers.push(this.groupsContainers[index]);\r\n      });\r\n\r\n      this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n        this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      const group = {\r\n        title: sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          const tileScope = this.createTileScope(tile);\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl: this.$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size: tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this.$scope.$$phase) this.$scope.$apply();\r\n\r\n      this.$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this.createTileScope(tile);\r\n\r\n        const newTile = IDragTileConstructor(DragTileService, {\r\n          tpl: this.$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size: tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this.$container || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\r\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile'] = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n\r\n      this.$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top: event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this.$timeout(() => {\r\n          this.setGroupContainersHeight();\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this.$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top: containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this.createTileScope(tile);\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this.$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this.$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {\r\n        from: from,\r\n        to: to,\r\n        tile: movedTile\r\n      });\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({\r\n        title: 'New group',\r\n        source: []\r\n      });\r\n      this.$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this.$timeout(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            autoScroll: {\r\n              enabled: true,\r\n              container: $('#content').get(0),\r\n              speed: 500\r\n            },\r\n            onstart: (event) => {\r\n              this.onDragStartListener(event)\r\n            },\r\n            onmove: (event) => {\r\n              this.onDragMoveListener(event)\r\n            },\r\n            onend: (event) => {\r\n              this.onDragEndListener()\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropToFictGroupListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        this.$container\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n          \r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  const DragComponent: ng.IComponentOptions = {\r\n    bindings: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    //controllerAs: 'DraggedCtrl',\r\n    templateUrl: 'draggable/Draggable.html',\r\n    controller: DraggableController\r\n  }\r\n\r\n  angular.module('pipDraggableTiles')\r\n    .component('pipDraggableGrid', DragComponent);\r\n}","export interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDraggableTiles')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","angular.module('pipDraggableTiles', []);\r\n\r\nimport './DraggableTileService';\r\nimport './Draggable';","import {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\nimport {\r\n  ITileConfigService\r\n} from '../config_tile_dialog/ConfigDialogService';\r\n{\r\n  class EventTileController extends MenuTileService {\r\n    private _oldOpacity: number;\r\n\r\n    public opacity: number = 0.57;\r\n\r\n    constructor(\r\n      $scope: ng.IScope,\r\n      private $element: JQuery,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipTileConfigDialogService: ITileConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'gray';\r\n      this.opacity = this.options.opacity || this.opacity;\r\n\r\n      this.drawImage();\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        this.drawImage();\r\n      });\r\n    }\r\n\r\n    private drawImage() {\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.onImageLoad(this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this._oldOpacity = _.clone(this.opacity);\r\n      this.pipTileConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          },\r\n          date: this.options.date,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n          opacity: this.opacity,\r\n          onOpacitytest: (opacity) => {\r\n            this.opacity = opacity;\r\n          }\r\n        },\r\n        extensionUrl: 'event_tile/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n        this.options.title = result.title;\r\n        this.options.text = result.text;\r\n        this.options.opacity = result.opacity;\r\n      }, () => {\r\n        this.opacity = this._oldOpacity;\r\n      });\r\n    }\r\n\r\n    private onImageLoad(image) {\r\n      this.setImageMarginCSS(this.$element.parent(), image);\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.setImageMarginCSS(this.$element.parent(), this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    // Later replace by pipImageUtils sevice's function\r\n    private setImageMarginCSS($element, image) {\r\n      let\r\n        containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n        containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n        imageWidth = image[0].naturalWidth || image.width,\r\n        imageHeight = image[0].naturalHeight || image.height,\r\n        margin = 0,\r\n        cssParams = {};\r\n\r\n      if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n        margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n        cssParams['margin-left'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n        cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n        cssParams['margin-top'] = '';\r\n      } else {\r\n        margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n        cssParams['margin-top'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n        cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n        cssParams['margin-left'] = '';\r\n      }\r\n\r\n      image.css(cssParams);\r\n    }\r\n  }\r\n\r\n\r\n  const EventTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: EventTileController,\r\n    templateUrl: 'event_tile/EventTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipEventTile', EventTile);\r\n}","// Import services\r\nimport './tile_group/index';\r\nimport './draggable';\r\n\r\n// Import tile services\r\nimport './menu_tile';\r\n\r\n// Import dialogs\r\nimport './add_tile_dialog';\r\nimport './config_tile_dialog';\r\n\r\nangular.module('pipDashboard', [\r\n  // Services\r\n  'pipDraggableTiles',\r\n  'pipDraggableTilesGroup',\r\n  // Tile services\r\n  'pipMenuTile',\r\n  // Dialogs\r\n  'pipConfigDashboardTileDialog',\r\n  'pipAddDashboardTileDialog',\r\n  //Templates\r\n  'pipDashboard.Templates',\r\n  // External pip modules\r\n  'pipLayout',\r\n  'pipLocations',\r\n  'pipDateTime',\r\n  'pipCharts',\r\n  'pipTranslate',\r\n  'pipControls',\r\n  'pipButtons'\r\n]);\r\n\r\n// Import utility \r\nimport './utility/TileTemplateUtility';\r\n// Import tiles\r\nimport './common_tile/Tile';\r\nimport './calendar_tile/CalendarTile';\r\nimport './event_tile/EventTile';\r\nimport './note_tile/NoteTile';\r\nimport './picture_slider_tile/PictureSliderTile';\r\nimport './position_tile/PositionTile';\r\nimport './statistics_tile/StatisticsTile';\r\n// Import common component\r\nimport './dashboard/Dashboard';\r\n","{\r\n  const TileMenu = ():ng.IDirective => {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: 'menu_tile/MenuTile.html'\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('pipMenuTile')\r\n    .directive('pipTileMenu', TileMenu);\r\n}","import { DashboardTile } from '../common_tile/Tile';\r\n\r\nexport class MenuTileService extends DashboardTile {\r\n  public menu: any = [{\r\n    title: 'Change Size',\r\n    action: angular.noop,\r\n    submenu: [{\r\n        title: '1 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 1,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 2',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 2\r\n        }\r\n      }\r\n    ]\r\n  }];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n\r\n    super();\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this.options.size.colSpan = params.sizeX;\r\n    this.options.size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\n{\r\n  class MenuTileProvider {\r\n    private _service: MenuTileService;\r\n\r\n    constructor() {}\r\n\r\n    public $get() {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new MenuTileService();\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipMenuTile')\r\n    .provider('pipMenuTile', MenuTileProvider);\r\n}","angular\r\n    .module('pipMenuTile', []);\r\n\r\nimport './MenuTileDirective';\r\nimport './MenuTileService';\r\n\r\nexport * from './MenuTileService';","import {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\nimport {\r\n  ITileConfigService\r\n} from '../config_tile_dialog/ConfigDialogService';\r\n\r\n{\r\n  class NoteTileController extends MenuTileService {\r\n\r\n    constructor(\r\n      private pipTileConfigDialogService: ITileConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'orange';\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipTileConfigDialogService.show({\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n        },\r\n        extensionUrl: 'note_tile/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.changeSize(result.size);\r\n        this.options.text = result.text;\r\n        this.options.title = result.title;\r\n      });\r\n    }\r\n  }\r\n\r\n  const NoteTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: NoteTileController,\r\n    templateUrl: 'note_tile/NoteTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipNoteTile', NoteTile);\r\n}","'use strict';\r\n\r\nimport {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\nimport {\r\n  ITileConfigService\r\n} from '../config_tile_dialog/ConfigDialogService';\r\nimport {\r\n  ITileTemplateService\r\n} from '../utility/TileTemplateUtility';\r\n\r\n{\r\n  class PictureSliderController extends MenuTileService {\r\n    public animationType: string = 'fading';\r\n    public animationInterval: number = 5000;\r\n\r\n    constructor(\r\n      private $scope: angular.IScope,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipTileTemplate: ITileTemplateService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.animationType = this.options.animationType || this.animationType;\r\n        this.animationInterval = this.options.animationInterval || this.animationInterval;\r\n      }\r\n    }\r\n\r\n    public onImageLoad($event) {\r\n      this.$timeout(() => {\r\n        this.pipTileTemplate.setImageMarginCSS(this.$element.parent(), $event.target);\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.$timeout(() => {\r\n        _.each(this.$element.find('img'), (image) => {\r\n          this.pipTileTemplate.setImageMarginCSS(this.$element.parent(), image);\r\n        });\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  const PictureSliderTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: PictureSliderController,\r\n    templateUrl: 'picture_slider_tile/PictureSliderTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipPictureSliderTile', PictureSliderTile);\r\n}","import {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\nimport {\r\n  ITileConfigService\r\n} from '../config_tile_dialog/ConfigDialogService';\r\n\r\n{\r\n  class PositionTileController extends MenuTileService {\r\n    public showPosition: boolean = true;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: any,\r\n      private pipTileConfigDialogService: ITileConfigService,\r\n      private pipLocationEditDialog: any,\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.menu.push({\r\n        title: 'Change location',\r\n        click: () => {\r\n          this.openLocationEditDialog();\r\n        }\r\n      });\r\n\r\n      this.options.location = this.options.location || this.options.position;\r\n\r\n      $scope.$watch('$ctrl.options.location', () => {\r\n        this.reDrawPosition();\r\n      });\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        if (newVal == true) this.reDrawPosition();\r\n      });\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipTileConfigDialogService.show({\r\n        dialogClass: 'pip-position-config',\r\n        locals: {\r\n          size: this.options.size,\r\n          locationName: this.options.locationName,\r\n          hideColors: true,\r\n        },\r\n        extensionUrl: 'position_tile/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n        this.options.locationName = result.locationName;\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reDrawPosition();\r\n    }\r\n\r\n    public openLocationEditDialog() {\r\n      this.pipLocationEditDialog.show({\r\n        locationName: this.options.locationName,\r\n        locationPos: this.options.location\r\n      }, (newPosition) => {\r\n        if (newPosition) {\r\n          this.options.location = newPosition.location;\r\n          this.options.locationName = newPosition.locatioName;\r\n        }\r\n      });\r\n    }\r\n\r\n    private reDrawPosition() {\r\n      this.showPosition = false;\r\n      this.$timeout(() => {\r\n        this.showPosition = true;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n\r\n  const PositionTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: PositionTileController,\r\n    templateUrl: 'position_tile/PositionTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipPositionTile', PositionTile);\r\n}","import {\r\n  MenuTileService\r\n} from '../menu_tile/MenuTileService';\r\n\r\n{\r\n  const SMALL_CHART: number = 70;\r\n  const BIG_CHART: number = 250;\r\n\r\n  class StatisticsTileController extends MenuTileService {\r\n    private _$scope: angular.IScope;\r\n    private _$timeout: angular.ITimeoutService;\r\n\r\n    public reset: boolean = false;\r\n    public chartSize: number = SMALL_CHART;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      $timeout: angular.ITimeoutService\r\n    ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reset = true;\r\n      this.setChartSize();\r\n      this._$timeout(() => {\r\n        this.reset = false;\r\n      }, 500);\r\n    }\r\n\r\n    private setChartSize() {\r\n      this.chartSize = this.options.size.colSpan == 2 && this.options.size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n    }\r\n  }\r\n\r\n\r\n  const StatisticsTile: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: StatisticsTileController,\r\n    templateUrl: 'statistics_tile/StatisticsTile.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipStatisticsTile', StatisticsTile);\r\n}","{\r\n  interface DraggableTileAttributes extends ng.IAttributes {\r\n    pipDraggableTiles: any;\r\n  }\r\n\r\n  function DraggableTileLink(\r\n    $scope: ng.IScope,\r\n    $elem: JQuery,\r\n    $attr: DraggableTileAttributes\r\n  ) {\r\n    const docFrag = document.createDocumentFragment(),\r\n      group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n    group.forEach(function (tile) {\r\n      const tpl = wrapComponent(tile.getCompiledTemplate());\r\n      docFrag.appendChild(tpl);\r\n    });\r\n\r\n    $elem.append(docFrag);\r\n\r\n    function wrapComponent(elem) {\r\n      return $('<div>')\r\n        .addClass('pip-draggable-tile')\r\n        .append(elem)\r\n        .get(0);\r\n    }\r\n  }\r\n\r\n  function DraggableTiles(): ng.IDirective {\r\n    return {\r\n      restrict: 'A',\r\n      link: function(\r\n        $scope: ng.IScope,\r\n        $elem: JQuery,\r\n        $attr: DraggableTileAttributes\r\n      ) {\r\n          new DraggableTileLink($scope, $elem, $attr);\r\n      }\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('pipDraggableTilesGroup')\r\n    .directive('pipDraggableTiles', DraggableTiles);\r\n}","export interface TilesGridConstructor {\r\n  new(tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth ? ): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nconst MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      const prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell, col, row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    const self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth ? ): any {\r\n    const self = this,\r\n      tileWidth = singleTileWidth || this.opts.tileWidth,\r\n      offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let colsInRow = 0,\r\n      rows = 0,\r\n      gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      const tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n      Array.apply(null, Array(newCellCount)).forEach(() => {\r\n        if (self.columns < colsInRow + 1) {\r\n          rows++;\r\n          colsInRow = 0;\r\n\r\n          self.gridCells.push(gridInRow);\r\n          gridInRow = [];\r\n        }\r\n\r\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n        // Describe grid cell size through block corners coordinates\r\n        gridInRow.push({\r\n          top: top,\r\n          left: left,\r\n          bottom: top + self.opts.tileHeight,\r\n          right: left + tileWidth,\r\n          row: rows,\r\n          col: colsInRow\r\n        });\r\n\r\n        colsInRow++;\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    const self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      const tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      const tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        const tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    const foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        const tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    const index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\n\r\nangular\r\n  .module('pipDraggableTilesGroup')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      const newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","angular\r\n    .module('pipDraggableTilesGroup', []);\r\n\r\nimport './TileGroupDirective';\r\nimport './TileGroupService';","export interface ITileTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n} \r\n\r\n{\r\n    class tileTemplateService implements ITileTemplateService {\r\n        private _$interpolate: angular.IInterpolateService;\r\n        private _$compile: angular.ICompileService;\r\n        private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n        constructor(\r\n            $interpolate: angular.IInterpolateService,\r\n            $compile: angular.ICompileService,\r\n            $templateRequest: angular.ITemplateRequestService\r\n        ) {\r\n            this._$interpolate = $interpolate;\r\n            this._$compile = $compile;\r\n            this._$templateRequest = $templateRequest;\r\n        }\r\n\r\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n            const {\r\n                template,\r\n                templateUrl,\r\n                type\r\n            } = source;\r\n            let result;\r\n\r\n            if (type) {\r\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n                return strictCompile == true ?\r\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                    interpolated;\r\n            }\r\n\r\n            if (template) {\r\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n            }\r\n\r\n            if (templateUrl) {\r\n                this._$templateRequest(templateUrl, false).then((html) => {\r\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public setImageMarginCSS($element, image) {\r\n            let\r\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\r\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n                margin = 0,\r\n                cssParams = {};\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            $(image).css(cssParams);\r\n        }\r\n    }\r\n\r\n    // image load directive TODO: remove to pipImageUtils\r\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\r\n                const callback = $parse(attrs.pipImageLoad);\r\n\r\n                element.bind('load', (event) => {\r\n                    callback(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDashboard')\r\n        .service('pipTileTemplate', tileTemplateService)\r\n        .directive('pipImageLoad', ImageLoad);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('add_tile_dialog/AddTile.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_TILE_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('calendar_tile/CalendarTile.html',\n    '<div class=\"widget-box pip-calendar-widget {{ $ctrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-tile-menu></pip-tile-menu></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ $ctrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ $ctrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('calendar_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('config_tile_dialog/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-tile-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-tile-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-tile-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('config_tile_dialog/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_TILE_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in $ctrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"$ctrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"$ctrl.onBlurTitleInput(group)\" ng-keypress=\"$ctrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"$ctrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in $ctrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dashboard/Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"$ctrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"$ctrl.groupedWidgets\" pip-tiles-context=\"$ctrl.widgetsContext\" pip-draggable-grid=\"$ctrl.draggableGridOptions\" pip-group-menu-actions=\"$ctrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('event_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('event_tile/EventTile.html',\n    '<div class=\"widget-box pip-event-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><img ng-if=\"$ctrl.options.image\" ng-src=\"{{$ctrl.options.image}}\" alt=\"{{$ctrl.options.title || $ctrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ $ctrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"$ctrl.options.date\">{{ $ctrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ $ctrl.options.text || $ctrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu_tile/MenuTile.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"$ctrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"$ctrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"$ctrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('note_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('note_tile/NoteTile.html',\n    '<div class=\"widget-box pip-notes-widget {{ $ctrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"$ctrl.options.title || $ctrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span></div><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu><div class=\"text-container flex-auto pip-scroll\"><p>{{ $ctrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('position_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('position_tile/PositionTile.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!$ctrl.options.locationName\"><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"$ctrl.options.locationName\"><span class=\"flex text-overflow\">{{ $ctrl.options.locationName }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><pip-location-map class=\"flex\" ng-if=\"$ctrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"$ctrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('picture_slider_tile/PictureSliderTile.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ $ctrl.options.title }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics_tile/StatisticsTile.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-tile-menu></pip-tile-menu></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.series && !$ctrl.reset\"><pip-pie-chart pip-series=\"$ctrl.options.series\" ng-if=\"!$ctrl.options.chartType || $ctrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"$ctrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYWRkX3RpbGVfZGlhbG9nL0FkZFRpbGVEaWFsb2dDb250cm9sbGVyLnRzIiwic3JjL2FkZF90aWxlX2RpYWxvZy9BZGRUaWxlUHJvdmlkZXIudHMiLCJzcmMvYWRkX3RpbGVfZGlhbG9nL2luZGV4LnRzIiwic3JjL2NhbGVuZGFyX3RpbGUvQ2FsZW5kYXJUaWxlLnRzIiwic3JjL2NvbW1vbl90aWxlL1RpbGUudHMiLCJzcmMvY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ0NvbnRyb2xsZXIudHMiLCJzcmMvY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ0V4dGVuZENvbXBvbmVudC50cyIsInNyYy9jb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nU2VydmljZS50cyIsInNyYy9jb25maWdfdGlsZV9kaWFsb2cvaW5kZXgudHMiLCJzcmMvZGFzaGJvYXJkL0Rhc2hib2FyZC50cyIsInNyYy9kcmFnZ2FibGUvRHJhZ2dhYmxlLnRzIiwic3JjL2RyYWdnYWJsZS9EcmFnZ2FibGVUaWxlU2VydmljZS50cyIsInNyYy9kcmFnZ2FibGUvaW5kZXgudHMiLCJzcmMvZXZlbnRfdGlsZS9FdmVudFRpbGUudHMiLCJzcmMvaW5kZXgudHMiLCJzcmMvbWVudV90aWxlL01lbnVUaWxlRGlyZWN0aXZlLnRzIiwic3JjL21lbnVfdGlsZS9NZW51VGlsZVNlcnZpY2UudHMiLCJzcmMvbWVudV90aWxlL2luZGV4LnRzIiwic3JjL25vdGVfdGlsZS9Ob3RlVGlsZS50cyIsInNyYy9waWN0dXJlX3NsaWRlcl90aWxlL1BpY3R1cmVTbGlkZXJUaWxlLnRzIiwic3JjL3Bvc2l0aW9uX3RpbGUvUG9zaXRpb25UaWxlLnRzIiwic3JjL3N0YXRpc3RpY3NfdGlsZS9TdGF0aXN0aWNzVGlsZS50cyIsInNyYy90aWxlX2dyb3VwL1RpbGVHcm91cERpcmVjdGl2ZS50cyIsInNyYy90aWxlX2dyb3VwL1RpbGVHcm91cFNlcnZpY2UudHMiLCJzcmMvdGlsZV9ncm91cC9pbmRleC50cyIsInNyYy91dGlsaXR5L1RpbGVUZW1wbGF0ZVV0aWxpdHkudHMiLCJ0ZW1wL3BpcC13ZWJ1aS1kYXNoYm9hcmQtaHRtbC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0lBQUE7SUFLQSxDQUFDO0lBQUQsb0JBQUM7QUFBRCxDQUxBLEFBS0MsSUFBQTtBQUxZLHNDQUFhO0FBTzFCO0lBS0ksaUNBQ0ksTUFBVyxFQUNKLGdCQUF3QixFQUMvQixVQUE2QixFQUN0QixTQUEwQztRQUYxQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQVE7UUFFeEIsY0FBUyxHQUFULFNBQVMsQ0FBaUM7UUFOOUMsZUFBVSxHQUFXLENBQUMsQ0FBQztRQVExQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSztZQUN2QyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLHlDQUFPLEdBQWQsY0FBa0IsQ0FBQztJQUVaLHFDQUFHLEdBQVY7UUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztZQUNoQixVQUFVLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtZQUNqQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVk7U0FDN0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUFBLENBQUM7SUFFSyx3Q0FBTSxHQUFiO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUM1QixD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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydCBjbGFzcyBBZGRUaWxlRGlhbG9nIHtcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBpY29uOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBhbW91bnQ6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFkZFRpbGVEaWFsb2dDb250cm9sbGVyIGltcGxlbWVudHMgbmcuSUNvbnRyb2xsZXIge1xyXG4gICAgcHVibGljIGRlZmF1bHRUaWxlczogW0FkZFRpbGVEaWFsb2dbXV07XHJcbiAgICBwdWJsaWMgZ3JvdXBzOiBhbnk7XHJcbiAgICBwdWJsaWMgdG90YWxUaWxlczogbnVtYmVyID0gMDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBncm91cHM6IGFueSxcclxuICAgICAgICBwdWJsaWMgYWN0aXZlR3JvdXBJbmRleDogbnVtYmVyLFxyXG4gICAgICAgIHdpZGdldExpc3Q6IFtBZGRUaWxlRGlhbG9nW11dLFxyXG4gICAgICAgIHB1YmxpYyAkbWREaWFsb2c6IGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ1NlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlR3JvdXBJbmRleCA9IF8uaXNOdW1iZXIoYWN0aXZlR3JvdXBJbmRleCkgPyBhY3RpdmVHcm91cEluZGV4IDogLTE7XHJcbiAgICAgICAgdGhpcy5kZWZhdWx0VGlsZXMgPSBfLmNsb25lRGVlcCh3aWRnZXRMaXN0KTtcclxuICAgICAgICB0aGlzLmdyb3VwcyA9IF8ubWFwKGdyb3VwcywgZnVuY3Rpb24gKGdyb3VwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBncm91cFsndGl0bGUnXTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJG9uSW5pdCgpIHt9XHJcbiAgICBcclxuICAgIHB1YmxpYyBhZGQoKSB7XHJcbiAgICAgICAgdGhpcy4kbWREaWFsb2cuaGlkZSh7XHJcbiAgICAgICAgICAgIGdyb3VwSW5kZXg6IHRoaXMuYWN0aXZlR3JvdXBJbmRleCxcclxuICAgICAgICAgICAgd2lkZ2V0czogdGhpcy5kZWZhdWx0VGlsZXNcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIGNhbmNlbCgpIHtcclxuICAgICAgICB0aGlzLiRtZERpYWxvZy5jYW5jZWwoKTtcclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIGVuY3JlYXNlKGdyb3VwSW5kZXg6IG51bWJlciwgd2lkZ2V0SW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IHdpZGdldCA9IHRoaXMuZGVmYXVsdFRpbGVzW2dyb3VwSW5kZXhdW3dpZGdldEluZGV4XTtcclxuICAgICAgICB3aWRnZXQuYW1vdW50Kys7XHJcbiAgICAgICAgdGhpcy50b3RhbFRpbGVzKys7XHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyBkZWNyZWFzZShncm91cEluZGV4OiBudW1iZXIsIHdpZGdldEluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCB3aWRnZXQgPSB0aGlzLmRlZmF1bHRUaWxlc1tncm91cEluZGV4XVt3aWRnZXRJbmRleF07XHJcbiAgICAgICAgd2lkZ2V0LmFtb3VudCA9IHdpZGdldC5hbW91bnQgPyB3aWRnZXQuYW1vdW50IC0gMSA6IDA7XHJcbiAgICAgICAgdGhpcy50b3RhbFRpbGVzID0gdGhpcy50b3RhbFRpbGVzID8gdGhpcy50b3RhbFRpbGVzIC0gMSA6IDA7XHJcbiAgICB9O1xyXG59IiwiaW1wb3J0IHtcclxuICBBZGRUaWxlRGlhbG9nLFxyXG4gIEFkZFRpbGVEaWFsb2dDb250cm9sbGVyXHJcbn0gZnJvbSAnLi9BZGRUaWxlRGlhbG9nQ29udHJvbGxlcic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBZGRUaWxlRGlhbG9nU2VydmljZSB7XHJcbiAgc2hvdyhncm91cHMsIGFjdGl2ZUdyb3VwSW5kZXgpOiBhbmd1bGFyLklQcm9taXNlIDwgYW55ID4gO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBZGRUaWxlRGlhbG9ncHJvdmlkZXIge1xyXG4gIGNvbmZpZ1dpZGdldExpc3QobGlzdDogW0FkZFRpbGVEaWFsb2dbXV0pOiB2b2lkO1xyXG59XHJcblxyXG57XHJcbiAgY29uc3Qgc2V0VHJhbnNsYXRpb25zID0gZnVuY3Rpb24oJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UpIHtcclxuICAgIGNvbnN0IHBpcFRyYW5zbGF0ZSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZVByb3ZpZGVyJykgPyAkaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGVQcm92aWRlcicpIDogbnVsbDtcclxuICAgIGlmIChwaXBUcmFuc2xhdGUpIHtcclxuICAgICAgKDxhbnk+cGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ2VuJywge1xyXG4gICAgICAgIERBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfVElUTEU6ICdBZGQgY29tcG9uZW50JyxcclxuICAgICAgICBEQVNIQk9BUkRfQUREX1RJTEVfRElBTE9HX1VTRV9IT1RfS0VZUzogJ1VzZSBcIkVudGVyXCIgb3IgXCIrXCIgYnV0dG9ucyBvbiBrZXlib2FyZCB0byBlbmNyZWFzZSBhbmQgXCJEZWxldGVcIiBvciBcIi1cIiB0byBkZWNyZWFzZSB0aWxlcyBhbW91bnQnLFxyXG4gICAgICAgIERBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfQ1JFQVRFX05FV19HUk9VUDogJ0NyZWF0ZSBuZXcgZ3JvdXAnXHJcbiAgICAgIH0pO1xyXG4gICAgICAoPGFueT5waXBUcmFuc2xhdGUpLnNldFRyYW5zbGF0aW9ucygncnUnLCB7XHJcbiAgICAgICAgREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19USVRMRTogJ9CU0L7QsdCw0LLQuNGC0Ywg0LrQvtC80L/QvtC90LXQvdGCJyxcclxuICAgICAgICBEQVNIQk9BUkRfQUREX1RJTEVfRElBTE9HX1VTRV9IT1RfS0VZUzogJ9CY0YHQv9C+0LvRjNC30YPQudGC0LUgXCJFbnRlclwiINC40LvQuCBcIitcIiDQutC70LDQstC40YjQuCDQvdCwINC60LvQsNCy0LjQsNGC0YPRgNC1INGH0YLQvtCx0Ysg0YPQstC10LvQuNGH0LjRgtGMINC4IFwiRGVsZXRlXCIgb3IgXCItXCIg0YfRgtC+0LHRiyDRg9C80LXQvdGI0LjRgtGMINC60L7Qu9C40YfQtdGB0YLQstC+INGC0LDQudC70L7QsicsXHJcbiAgICAgICAgREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19DUkVBVEVfTkVXX0dST1VQOiAn0KHQvtC30LTQsNGC0Ywg0L3QvtCy0YPRjiDQs9GA0YPQv9C/0YMnXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY2xhc3MgQWRkVGlsZURpYWxvZ1NlcnZpY2UgaW1wbGVtZW50cyBJQWRkVGlsZURpYWxvZ1NlcnZpY2Uge1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICBwcml2YXRlIHdpZGdldExpc3Q6IFtBZGRUaWxlRGlhbG9nW11dLFxyXG4gICAgICBwcml2YXRlICRtZERpYWxvZzogYW5ndWxhci5tYXRlcmlhbC5JRGlhbG9nU2VydmljZVxyXG4gICAgKSB7fVxyXG5cclxuICAgIHB1YmxpYyBzaG93KGdyb3VwcywgYWN0aXZlR3JvdXBJbmRleCkge1xyXG4gICAgICByZXR1cm4gdGhpcy4kbWREaWFsb2dcclxuICAgICAgICAuc2hvdyh7XHJcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2FkZF90aWxlX2RpYWxvZy9BZGRUaWxlLmh0bWwnLFxyXG4gICAgICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcclxuICAgICAgICAgIGNvbnRyb2xsZXI6IEFkZFRpbGVEaWFsb2dDb250cm9sbGVyLFxyXG4gICAgICAgICAgY29udHJvbGxlckFzOiAnZGlhbG9nQ3RybCcsXHJcbiAgICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiB0cnVlLFxyXG4gICAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICBncm91cHM6ICgpID0+IHtcclxuICAgICAgICAgICAgICByZXR1cm4gZ3JvdXBzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBhY3RpdmVHcm91cEluZGV4OiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2ZUdyb3VwSW5kZXg7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHdpZGdldExpc3Q6ICgpID0+IHtcclxuICAgICAgICAgICAgICByZXR1cm4gKDxhbnk+dGhpcy53aWRnZXRMaXN0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGNsYXNzIEFkZFRpbGVEaWFsb2dQcm92aWRlciBpbXBsZW1lbnRzIElBZGRUaWxlRGlhbG9ncHJvdmlkZXIge1xyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogQWRkVGlsZURpYWxvZ1NlcnZpY2U7XHJcbiAgICBwcml2YXRlIF93aWRnZXRMaXN0OiBbQWRkVGlsZURpYWxvZ1tdXSA9IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgIHB1YmxpYyBjb25maWdXaWRnZXRMaXN0ID0gZnVuY3Rpb24gKGxpc3Q6IFtBZGRUaWxlRGlhbG9nW11dKSB7XHJcbiAgICAgIHRoaXMuX3dpZGdldExpc3QgPSBsaXN0O1xyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgJGdldCgkbWREaWFsb2c6IGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ1NlcnZpY2UpIHtcclxuICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IEFkZFRpbGVEaWFsb2dTZXJ2aWNlKHRoaXMuX3dpZGdldExpc3QsICRtZERpYWxvZyk7XHJcblxyXG4gICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcEFkZERhc2hib2FyZFRpbGVEaWFsb2cnKVxyXG4gICAgLmNvbmZpZyhzZXRUcmFuc2xhdGlvbnMpXHJcbiAgICAucHJvdmlkZXIoJ3BpcEFkZFRpbGVEaWFsb2cnLCBBZGRUaWxlRGlhbG9nUHJvdmlkZXIpO1xyXG59IiwiYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwQWRkRGFzaGJvYXJkVGlsZURpYWxvZycsIFsnbmdNYXRlcmlhbCddKTtcclxuXHJcbmltcG9ydCAnLi9BZGRUaWxlRGlhbG9nQ29udHJvbGxlcic7XHJcbmltcG9ydCAnLi9BZGRUaWxlUHJvdmlkZXInOyIsImltcG9ydCB7XHJcbiAgTWVudVRpbGVTZXJ2aWNlXHJcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XHJcbmltcG9ydCB7XHJcbiAgSVRpbGVDb25maWdTZXJ2aWNlXHJcbn0gZnJvbSAnLi4vY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ1NlcnZpY2UnO1xyXG5cclxue1xyXG4gIGNsYXNzIENhbGVuZGFyVGlsZUNvbnRyb2xsZXIgZXh0ZW5kcyBNZW51VGlsZVNlcnZpY2Uge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgIHByaXZhdGUgcGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2U6IElUaWxlQ29uZmlnU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICBpZiAodGhpcy5vcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5tZW51ID0gdGhpcy5vcHRpb25zLm1lbnUgPyBfLnVuaW9uKHRoaXMubWVudSwgdGhpcy5vcHRpb25zLm1lbnUpIDogdGhpcy5tZW51O1xyXG4gICAgICAgIHRoaXMubWVudS5wdXNoKHtcclxuICAgICAgICAgIHRpdGxlOiAnQ29uZmlndXJhdGUnLFxyXG4gICAgICAgICAgY2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5vbkNvbmZpZ0NsaWNrKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLmRhdGUgPSB0aGlzLm9wdGlvbnMuZGF0ZSB8fCBuZXcgRGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3IgfHwgJ2JsdWUnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkNvbmZpZ0NsaWNrKCkge1xyXG4gICAgICB0aGlzLnBpcFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlLnNob3coe1xyXG4gICAgICAgIGRpYWxvZ0NsYXNzOiAncGlwLWNhbGVuZGFyLWNvbmZpZycsXHJcbiAgICAgICAgbG9jYWxzOiB7XHJcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvcixcclxuICAgICAgICAgIHNpemU6IHRoaXMub3B0aW9ucy5zaXplLFxyXG4gICAgICAgICAgZGF0ZTogdGhpcy5vcHRpb25zLmRhdGUsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBleHRlbnNpb25Vcmw6ICdjYWxlbmRhcl90aWxlL0NvbmZpZ0RpYWxvZ0V4dGVuc2lvbi5odG1sJ1xyXG4gICAgICB9LCAocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICB0aGlzLmNoYW5nZVNpemUocmVzdWx0LnNpemUpO1xyXG5cclxuICAgICAgICB0aGlzLmNvbG9yID0gcmVzdWx0LmNvbG9yO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5jb2xvciA9IHJlc3VsdC5jb2xvcjtcclxuICAgICAgICB0aGlzLm9wdGlvbnMuZGF0ZSA9IHJlc3VsdC5kYXRlO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICBjb25zdCBDYWxlbmRhclRpbGU6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xyXG4gICAgYmluZGluZ3M6IHtcclxuICAgICAgb3B0aW9uczogJz1waXBPcHRpb25zJyxcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiBDYWxlbmRhclRpbGVDb250cm9sbGVyLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdjYWxlbmRhcl90aWxlL0NhbGVuZGFyVGlsZS5odG1sJ1xyXG4gIH1cclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcclxuICAgIC5jb21wb25lbnQoJ3BpcENhbGVuZGFyVGlsZScsIENhbGVuZGFyVGlsZSk7XHJcblxyXG59IiwiZXhwb3J0IGludGVyZmFjZSBJRGFzaGJvYXJkVGlsZSB7XHJcbiAgICBvcHRpb25zOiBhbnk7XHJcbiAgICBjb2xvcjogc3RyaW5nO1xyXG4gICAgc2l6ZTogT2JqZWN0IHwgc3RyaW5nIHwgbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkVGlsZSBpbXBsZW1lbnRzIElEYXNoYm9hcmRUaWxlIHtcclxuICAgIHB1YmxpYyBvcHRpb25zOiBhbnk7XHJcbiAgICBwdWJsaWMgY29sb3I6IHN0cmluZztcclxuICAgIHB1YmxpYyBzaXplOiBPYmplY3QgfCBzdHJpbmcgfCBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxufSIsIlxyXG5jbGFzcyBUaWxlQ29sb3JzIHtcclxuICAgIHN0YXRpYyBhbGw6IHN0cmluZ1tdID0gWydwdXJwbGUnLCAnZ3JlZW4nLCAnZ3JheScsICdvcmFuZ2UnLCAnYmx1ZSddO1xyXG59XHJcblxyXG5jbGFzcyBUaWxlU2l6ZXMge1xyXG4gICAgc3RhdGljIGFsbDogYW55ID0gW3tcclxuICAgICAgICAgICAgbmFtZTogJ0RBU0hCT0FSRF9USUxFX0NPTkZJR19ESUFMT0dfU0laRV9TTUFMTCcsXHJcbiAgICAgICAgICAgIGlkOiAnMTEnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfV0lERScsXHJcbiAgICAgICAgICAgIGlkOiAnMjEnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfTEFSR0UnLFxyXG4gICAgICAgICAgICBpZDogJzIyJ1xyXG4gICAgICAgIH1cclxuICAgIF07XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUaWxlQ29uZmlnRGlhbG9nQ29udHJvbGxlciB7XHJcbiAgICBwdWJsaWMgY29sb3JzOiBzdHJpbmdbXSA9IFRpbGVDb2xvcnMuYWxsO1xyXG4gICAgcHVibGljIHNpemVzOiBhbnkgPSBUaWxlU2l6ZXMuYWxsO1xyXG4gICAgcHVibGljIHNpemVJZDogc3RyaW5nID0gVGlsZVNpemVzLmFsbFswXS5pZDtcclxuICAgIHB1YmxpYyBvbkNhbmNlbDogRnVuY3Rpb247XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIHBhcmFtcyxcclxuICAgICAgICBwdWJsaWMgZXh0ZW5zaW9uVXJsLFxyXG4gICAgICAgIHB1YmxpYyAkbWREaWFsb2c6IGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ1NlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgYW5ndWxhci5leHRlbmQodGhpcywgdGhpcy5wYXJhbXMpO1xyXG4gICAgICAgIHRoaXMuc2l6ZUlkID0gJycgKyB0aGlzLnBhcmFtcy5zaXplLmNvbFNwYW4gKyB0aGlzLnBhcmFtcy5zaXplLnJvd1NwYW47XHJcblxyXG4gICAgICAgIHRoaXMub25DYW5jZWwgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLmNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25BcHBseSh1cGRhdGVkRGF0YSkge1xyXG4gICAgICAgIHRoaXNbJ3NpemUnXS5zaXplWCA9IE51bWJlcih0aGlzLnNpemVJZC5zdWJzdHIoMCwgMSkpO1xyXG4gICAgICAgIHRoaXNbJ3NpemUnXS5zaXplWSA9IE51bWJlcih0aGlzLnNpemVJZC5zdWJzdHIoMSwgMSkpO1xyXG4gICAgICAgIHRoaXMuJG1kRGlhbG9nLmhpZGUodXBkYXRlZERhdGEpO1xyXG4gICAgfVxyXG59IiwieyAgICBcclxuICAgIGludGVyZmFjZSBJVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudEJpbmRpbmdzIHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XHJcblxyXG4gICAgICAgIHBpcEV4dGVuc2lvblVybDogYW55O1xyXG4gICAgICAgIHBpcERpYWxvZ1Njb3BlOiBhbnk7XHJcbiAgICAgICAgcGlwQXBwbHk6IGFueTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3M6IElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3MgPSB7XHJcbiAgICAgICAgcGlwRXh0ZW5zaW9uVXJsOiAnPCcsXHJcbiAgICAgICAgcGlwRGlhbG9nU2NvcGU6ICc8JyxcclxuICAgICAgICBwaXBBcHBseTogJyYnXHJcbiAgICB9XHJcblxyXG4gICAgY2xhc3MgVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudENoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudEJpbmRpbmdzIHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBuZy5JQ2hhbmdlc09iamVjdDxhbnk+O1xyXG5cclxuICAgICAgICBwaXBFeHRlbnNpb25Vcmw6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XHJcbiAgICAgICAgcGlwRGlhbG9nU2NvcGU6IG5nLklDaGFuZ2VzT2JqZWN0PG5nLklTY29wZT47XHJcblxyXG4gICAgICAgIHBpcEFwcGx5OiBuZy5JQ2hhbmdlc09iamVjdDwoe3VwZGF0ZWREYXRhOiBhbnl9KSA9PiBuZy5JUHJvbWlzZTx2b2lkPj47XHJcbiAgICB9XHJcblxyXG4gICAgaW50ZXJmYWNlIElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcclxuICAgICAgICBwaXBFeHRlbnNpb25Vcmw6IHN0cmluZ1xyXG4gICAgfVxyXG5cclxuICAgIGNsYXNzIFRpbGVDb25maWdFeHRlbmRDb21wb25lbnRDb250cm9sbGVyIGltcGxlbWVudHMgSVRpbGVDb25maWdFeHRlbmRDb21wb25lbnRCaW5kaW5ncyB7XHJcbiAgICAgICAgcHVibGljIHBpcEV4dGVuc2lvblVybDogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBwaXBEaWFsb2dTY29wZTogbmcuSVNjb3BlO1xyXG4gICAgICAgIHB1YmxpYyBwaXBBcHBseTogKHBhcmFtOiB7dXBkYXRlZERhdGE6IGFueX0pID0+IG5nLklQcm9taXNlPHZvaWQ+O1xyXG5cclxuICAgICAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAgICAgcHJpdmF0ZSAkdGVtcGxhdGVSZXF1ZXN0OiBhbmd1bGFyLklUZW1wbGF0ZVJlcXVlc3RTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwcml2YXRlICRjb21waWxlOiBhbmd1bGFyLklDb21waWxlU2VydmljZSxcclxuICAgICAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLCBcclxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5LCBcclxuICAgICAgICAgICAgcHJpdmF0ZSAkYXR0cnM6IElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QXR0cmlidXRlc1xyXG4gICAgICAgICkgeyB9XHJcblxyXG4gICAgICAgIHB1YmxpYyAkb25DaGFuZ2VzKGNoYW5nZXM6IFRpbGVDb25maWdFeHRlbmRDb21wb25lbnRDaGFuZ2VzKSB7XHJcbiAgICAgICAgICAgIGlmIChjaGFuZ2VzLnBpcERpYWxvZ1Njb3BlKSB7XHJcbiAgICAgICAgICAgICAgICBkZWxldGUgY2hhbmdlcy5waXBEaWFsb2dTY29wZS5jdXJyZW50VmFsdWVbJyRzY29wZSddO1xyXG4gICAgICAgICAgICAgICAgYW5ndWxhci5leHRlbmQodGhpcywgY2hhbmdlcy5waXBEaWFsb2dTY29wZS5jdXJyZW50VmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjaGFuZ2VzLnBpcEV4dGVuc2lvblVybCAmJiBjaGFuZ2VzLnBpcEV4dGVuc2lvblVybC5jdXJyZW50VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuJHRlbXBsYXRlUmVxdWVzdChjaGFuZ2VzLnBpcEV4dGVuc2lvblVybC5jdXJyZW50VmFsdWUsIGZhbHNlKS50aGVuKChodG1sKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCdwaXAtZXh0ZW5zaW9uLXBvaW50JykucmVwbGFjZVdpdGgodGhpcy4kY29tcGlsZShodG1sKSh0aGlzLiRzY29wZSkpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBvbkFwcGx5KCkge1xyXG4gICAgICAgICAgICB0aGlzLnBpcEFwcGx5KHt1cGRhdGVkRGF0YTogdGhpc30pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwaXBUaWxlQ29uZmlnQ29tcG9uZW50OiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2NvbmZpZ190aWxlX2RpYWxvZy9Db25maWdEaWFsb2dFeHRlbmRDb21wb25lbnQuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudENvbnRyb2xsZXIsXHJcbiAgICAgICAgYmluZGluZ3M6IFRpbGVDb25maWdFeHRlbmRDb21wb25lbnRCaW5kaW5nc1xyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBDb25maWdEYXNoYm9hcmRUaWxlRGlhbG9nJylcclxuICAgICAgICAuY29tcG9uZW50KCdwaXBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50JywgcGlwVGlsZUNvbmZpZ0NvbXBvbmVudCk7XHJcbn0iLCJpbXBvcnQgeyBUaWxlQ29uZmlnRGlhbG9nQ29udHJvbGxlciB9IGZyb20gJy4vQ29uZmlnRGlhbG9nQ29udHJvbGxlcic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElUaWxlQ29uZmlnU2VydmljZSB7XHJcbiAgICBzaG93KHBhcmFtczogSVRpbGVDb25maWdEaWFsb2dPcHRpb25zLCBzdWNjZXNzQ2FsbGJhY2sgPyA6IChrZXkpID0+IHZvaWQsIGNhbmNlbENhbGxiYWNrID8gOiAoKSA9PiB2b2lkKTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElUaWxlQ29uZmlnRGlhbG9nT3B0aW9ucyBleHRlbmRzIGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ09wdGlvbnMge1xyXG4gICAgZGlhbG9nQ2xhc3M/OiBzdHJpbmc7XHJcbiAgICBleHRlbnNpb25Vcmw/OiBzdHJpbmc7XHJcbiAgICBldmVudD86IGFueTtcclxufVxyXG5cclxue1xyXG4gICAgY29uc3Qgc2V0VHJhbnNsYXRpb25zID0gZnVuY3Rpb24oJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UpIHtcclxuICAgICAgICBjb25zdCBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGVQcm92aWRlcicpID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlUHJvdmlkZXInKSA6IG51bGw7XHJcbiAgICAgICAgaWYgKHBpcFRyYW5zbGF0ZSkge1xyXG4gICAgICAgICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ2VuJywge1xyXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19USVRMRTogJ0VkaXQgdGlsZScsXHJcbiAgICAgICAgICAgICAgICBEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfU01BTEw6ICdTbWFsbCcsXHJcbiAgICAgICAgICAgICAgICBEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfV0lERTogJ1dpZGUnLFxyXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX0xBUkdFOiAnTGFyZ2UnXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ3J1Jywge1xyXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19USVRMRTogJ9CY0LfQvNC10L3QuNGC0Ywg0LLQuNC00LbQtdGCJyxcclxuICAgICAgICAgICAgICAgIERBU0hCT0FSRF9USUxFX0NPTkZJR19ESUFMT0dfU0laRV9TTUFMTDogJ9Cc0LDQu9C10L0uJyxcclxuICAgICAgICAgICAgICAgIERBU0hCT0FSRF9USUxFX0NPTkZJR19ESUFMT0dfU0laRV9XSURFOiAn0KjQuNGA0L7QutC40LknLFxyXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX0xBUkdFOiAn0JHQvtC70YzRiNC+0LknXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbGFzcyBUaWxlQ29uZmlnRGlhbG9nU2VydmljZSB7XHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICBwdWJsaWMgJG1kRGlhbG9nOiBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dTZXJ2aWNlXHJcbiAgICAgICAgKSB7fVxyXG5cclxuICAgICAgICBwdWJsaWMgc2hvdyhwYXJhbXM6IElUaWxlQ29uZmlnRGlhbG9nT3B0aW9ucywgc3VjY2Vzc0NhbGxiYWNrID8gOiAoa2V5KSA9PiB2b2lkLCBjYW5jZWxDYWxsYmFjayA/IDogKCkgPT4gdm9pZCkge1xyXG4gICAgICAgICAgICB0aGlzLiRtZERpYWxvZy5zaG93KHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRFdmVudDogcGFyYW1zLmV2ZW50LFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBwYXJhbXMudGVtcGxhdGVVcmwgfHwgJ2RpYWxvZ3MvdGlsZV9jb25maWcvQ29uZmlnRGlhbG9nLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6IFRpbGVDb25maWdEaWFsb2dDb250cm9sbGVyLFxyXG4gICAgICAgICAgICAgICAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvY2Fsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25Vcmw6IHBhcmFtcy5leHRlbnNpb25VcmwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLmxvY2Fsc1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tPdXRzaWRlVG9DbG9zZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50aGVuKChrZXkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDYWxsYmFjayhrZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FuY2VsQ2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsQ2FsbGJhY2soKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcENvbmZpZ0Rhc2hib2FyZFRpbGVEaWFsb2cnKVxyXG4gICAgICAgIC5jb25maWcoc2V0VHJhbnNsYXRpb25zKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdwaXBUaWxlQ29uZmlnRGlhbG9nU2VydmljZScsIFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlKTtcclxufSIsIlxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBDb25maWdEYXNoYm9hcmRUaWxlRGlhbG9nJywgWyduZ01hdGVyaWFsJ10pO1xyXG5cclxuaW1wb3J0ICcuL0NvbmZpZ0RpYWxvZ0NvbnRyb2xsZXInO1xyXG5pbXBvcnQgJy4vQ29uZmlnRGlhbG9nU2VydmljZSc7XHJcbmltcG9ydCAnLi9Db25maWdEaWFsb2dFeHRlbmRDb21wb25lbnQnOyIsImltcG9ydCB7XHJcbiAgSVRpbGVUZW1wbGF0ZVNlcnZpY2VcclxufSBmcm9tICcuLi91dGlsaXR5L1RpbGVUZW1wbGF0ZVV0aWxpdHknO1xyXG5pbXBvcnQge1xyXG4gIElBZGRUaWxlRGlhbG9nU2VydmljZSxcclxuICBJQWRkVGlsZURpYWxvZ3Byb3ZpZGVyXHJcbn0gZnJvbSAnLi4vYWRkX3RpbGVfZGlhbG9nL0FkZFRpbGVQcm92aWRlcidcclxuXHJcbntcclxuICBjb25zdCBzZXRUcmFuc2xhdGlvbnMgPSBmdW5jdGlvbiAoJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UpIHtcclxuICAgIGNvbnN0IHBpcFRyYW5zbGF0ZSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZVByb3ZpZGVyJykgPyAkaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGVQcm92aWRlcicpIDogbnVsbDtcclxuICAgIGlmIChwaXBUcmFuc2xhdGUpIHtcclxuICAgICAgKCA8IGFueSA+IHBpcFRyYW5zbGF0ZSkuc2V0VHJhbnNsYXRpb25zKCdlbicsIHtcclxuICAgICAgICBEUk9QX1RPX0NSRUFURV9ORVdfR1JPVVA6ICdEcm9wIGhlcmUgdG8gY3JlYXRlIG5ldyBncm91cCcsXHJcbiAgICAgIH0pO1xyXG4gICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ3J1Jywge1xyXG4gICAgICAgIERST1BfVE9fQ1JFQVRFX05FV19HUk9VUDogJ9Cf0LXRgNC10YLQsNGJ0LjRgtC1INGB0Y7QtNCwINC00LvRjyDRgdC+0LfQtNCw0L3QuNGPINC90L7QstC+0Lkg0LPRgNGD0L/Qv9GLJ1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IGNvbmZpZ3VyZUF2YWlsYWJsZVdpZGdldHMgPSBmdW5jdGlvbiAocGlwQWRkVGlsZURpYWxvZ1Byb3ZpZGVyOiBJQWRkVGlsZURpYWxvZ3Byb3ZpZGVyKSB7XHJcbiAgICBwaXBBZGRUaWxlRGlhbG9nUHJvdmlkZXIuY29uZmlnV2lkZ2V0TGlzdChbXHJcbiAgICAgIFt7XHJcbiAgICAgICAgICB0aXRsZTogJ0V2ZW50JyxcclxuICAgICAgICAgIGljb246ICdkb2N1bWVudCcsXHJcbiAgICAgICAgICBuYW1lOiAnZXZlbnQnLFxyXG4gICAgICAgICAgYW1vdW50OiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aXRsZTogJ1Bvc2l0aW9uJyxcclxuICAgICAgICAgIGljb246ICdsb2NhdGlvbicsXHJcbiAgICAgICAgICBuYW1lOiAncG9zaXRpb24nLFxyXG4gICAgICAgICAgYW1vdW50OiAwXHJcbiAgICAgICAgfVxyXG4gICAgICBdLFxyXG4gICAgICBbe1xyXG4gICAgICAgICAgdGl0bGU6ICdDYWxlbmRhcicsXHJcbiAgICAgICAgICBpY29uOiAnZGF0ZScsXHJcbiAgICAgICAgICBuYW1lOiAnY2FsZW5kYXInLFxyXG4gICAgICAgICAgYW1vdW50OiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aXRsZTogJ1N0aWNreSBOb3RlcycsXHJcbiAgICAgICAgICBpY29uOiAnbm90ZS10YWtlJyxcclxuICAgICAgICAgIG5hbWU6ICdub3RlcycsXHJcbiAgICAgICAgICBhbW91bnQ6IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHRpdGxlOiAnU3RhdGlzdGljcycsXHJcbiAgICAgICAgICBpY29uOiAndHItc3RhdGlzdGljcycsXHJcbiAgICAgICAgICBuYW1lOiAnc3RhdGlzdGljcycsXHJcbiAgICAgICAgICBhbW91bnQ6IDBcclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgY2xhc3MgZHJhZ2dhYmxlT3B0aW9ucyB7XHJcbiAgICB0aWxlV2lkdGg6IG51bWJlcjtcclxuICAgIHRpbGVIZWlnaHQ6IG51bWJlcjtcclxuICAgIGd1dHRlcjogbnVtYmVyO1xyXG4gICAgaW5saW5lOiBib29sZWFuO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgREVGQVVMVF9HUklEX09QVElPTlM6IGRyYWdnYWJsZU9wdGlvbnMgPSB7XHJcbiAgICB0aWxlV2lkdGg6IDE1MCwgLy8gJ3B4J1xyXG4gICAgdGlsZUhlaWdodDogMTUwLCAvLyAncHgnXHJcbiAgICBndXR0ZXI6IDEwLCAvLyAncHgnXHJcbiAgICBpbmxpbmU6IGZhbHNlXHJcbiAgfTtcclxuXHJcbiAgaW50ZXJmYWNlIERhc2hib2FyZEJpbmRpbmdzIHtcclxuICAgICAgZ3JpZE9wdGlvbnM6IGFueTtcclxuICAgICAgZ3JvdXBBZGRpdGlvbmFsQWN0aW9uczogYW55O1xyXG4gICAgICBncm91cGVkV2lkZ2V0czogYW55O1xyXG4gIH1cclxuXHJcbiAgY2xhc3MgRGFzaGJvYXJkQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyLCBEYXNoYm9hcmRCaW5kaW5ncyB7XHJcbiAgICBwcml2YXRlIGRlZmF1bHRHcm91cE1lbnVBY3Rpb25zOiBhbnkgPSBbe1xyXG4gICAgICAgIHRpdGxlOiAnQWRkIENvbXBvbmVudCcsXHJcbiAgICAgICAgY2FsbGJhY2s6IChncm91cEluZGV4KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLmFkZENvbXBvbmVudChncm91cEluZGV4KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICB0aXRsZTogJ1JlbW92ZScsXHJcbiAgICAgICAgY2FsbGJhY2s6IChncm91cEluZGV4KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnJlbW92ZUdyb3VwKGdyb3VwSW5kZXgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIHRpdGxlOiAnQ29uZmlndXJhdGUnLFxyXG4gICAgICAgIGNhbGxiYWNrOiAoZ3JvdXBJbmRleCkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ2NvbmZpZ3VyYXRlIGdyb3VwIHdpdGggaW5kZXg6JywgZ3JvdXBJbmRleCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBdO1xyXG4gICAgcHJpdmF0ZSBfaW5jbHVkZVRwbDogc3RyaW5nID0gJzxwaXAte3sgdHlwZSB9fS10aWxlIGdyb3VwPVwiZ3JvdXBJbmRleFwiIGluZGV4PVwiaW5kZXhcIicgK1xyXG4gICAgICAncGlwLW9wdGlvbnM9XCIkcGFyZW50LiRjdHJsLmdyb3VwZWRXaWRnZXRzW2dyb3VwSW5kZXhdW1xcJ3NvdXJjZVxcJ11baW5kZXhdLm9wdHNcIj4nICtcclxuICAgICAgJzwvcGlwLXt7IHR5cGUgfX0tdGlsZT4nO1xyXG5cclxuICAgIHB1YmxpYyBncm91cGVkV2lkZ2V0czogYW55O1xyXG4gICAgcHVibGljIGRyYWdnYWJsZUdyaWRPcHRpb25zOiBkcmFnZ2FibGVPcHRpb25zO1xyXG4gICAgcHVibGljIHdpZGdldHNUZW1wbGF0ZXM6IGFueTtcclxuICAgIHB1YmxpYyBncm91cE1lbnVBY3Rpb25zOiBhbnkgPSB0aGlzLmRlZmF1bHRHcm91cE1lbnVBY3Rpb25zO1xyXG4gICAgcHVibGljIHdpZGdldHNDb250ZXh0OiBhbnk7XHJcbiAgICBwdWJsaWMgZ3JpZE9wdGlvbnM6IGFueTtcclxuICAgIHB1YmxpYyBncm91cEFkZGl0aW9uYWxBY3Rpb25zOiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICRzY29wZTogYW5ndWxhci5JU2NvcGUsXHJcbiAgICAgIHByaXZhdGUgJHJvb3RTY29wZTogYW5ndWxhci5JUm9vdFNjb3BlU2VydmljZSxcclxuICAgICAgcHJpdmF0ZSAkYXR0cnM6IGFueSxcclxuICAgICAgcHJpdmF0ZSAkZWxlbWVudDogYW55LFxyXG4gICAgICBwcml2YXRlICR0aW1lb3V0OiBhbmd1bGFyLklUaW1lb3V0U2VydmljZSxcclxuICAgICAgcHJpdmF0ZSAkaW50ZXJwb2xhdGU6IGFuZ3VsYXIuSUludGVycG9sYXRlU2VydmljZSxcclxuICAgICAgcHJpdmF0ZSBwaXBBZGRUaWxlRGlhbG9nOiBJQWRkVGlsZURpYWxvZ1NlcnZpY2UsXHJcbiAgICAgIHByaXZhdGUgcGlwVGlsZVRlbXBsYXRlOiBJVGlsZVRlbXBsYXRlU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgIC8vIEFkZCBjbGFzcyB0byBzdHlsZSBzY3JvbGwgYmFyXHJcbiAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtc2Nyb2xsJyk7XHJcblxyXG4gICAgICAvLyBTZXQgdGlsZXMgZ3JpZCBvcHRpb25zXHJcbiAgICAgIHRoaXMuZHJhZ2dhYmxlR3JpZE9wdGlvbnMgPSB0aGlzLmdyaWRPcHRpb25zIHx8IERFRkFVTFRfR1JJRF9PUFRJT05TO1xyXG5cclxuICAgICAgLy8gU3dpdGNoIGlubGluZSBkaXNwbGF5aW5nXHJcbiAgICAgIGlmICh0aGlzLmRyYWdnYWJsZUdyaWRPcHRpb25zLmlubGluZSA9PT0gdHJ1ZSkge1xyXG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdpbmxpbmUtZ3JpZCcpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIEV4dGVuZCBncm91cCdzIG1lbnUgYWN0aW9uc1xyXG4gICAgICBpZiAodGhpcy5ncm91cEFkZGl0aW9uYWxBY3Rpb25zKSBhbmd1bGFyLmV4dGVuZCh0aGlzLmdyb3VwTWVudUFjdGlvbnMsIHRoaXMuZ3JvdXBBZGRpdGlvbmFsQWN0aW9ucyk7XHJcblxyXG4gICAgICAvLyBDb21waWxlIHdpZGdldHNcclxuICAgICAgdGhpcy53aWRnZXRzQ29udGV4dCA9ICRzY29wZTtcclxuICAgICAgdGhpcy5jb21waWxlV2lkZ2V0cygpO1xyXG5cclxuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy4kZWxlbWVudC5hZGRDbGFzcygndmlzaWJsZScpO1xyXG4gICAgICB9LCA3MDApO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29tcGlsZVdpZGdldHMoKSB7XHJcbiAgICAgIF8uZWFjaCh0aGlzLmdyb3VwZWRXaWRnZXRzLCAoZ3JvdXAsIGdyb3VwSW5kZXgpID0+IHtcclxuICAgICAgICBncm91cC5yZW1vdmVkV2lkZ2V0cyA9IGdyb3VwLnJlbW92ZWRXaWRnZXRzIHx8IFtdLFxyXG4gICAgICAgICAgZ3JvdXAuc291cmNlID0gZ3JvdXAuc291cmNlLm1hcCgod2lkZ2V0LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBFc3RhYmxpc2ggZGVmYXVsdCBwcm9wc1xyXG4gICAgICAgICAgICB3aWRnZXQuc2l6ZSA9IHdpZGdldC5zaXplIHx8IHtcclxuICAgICAgICAgICAgICBjb2xTcGFuOiAxLFxyXG4gICAgICAgICAgICAgIHJvd1NwYW46IDFcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgd2lkZ2V0LmluZGV4ID0gaW5kZXg7XHJcbiAgICAgICAgICAgIHdpZGdldC5ncm91cEluZGV4ID0gZ3JvdXBJbmRleDtcclxuICAgICAgICAgICAgd2lkZ2V0Lm1lbnUgPSB3aWRnZXQubWVudSB8fCB7fTtcclxuICAgICAgICAgICAgYW5ndWxhci5leHRlbmQod2lkZ2V0Lm1lbnUsIFt7XHJcbiAgICAgICAgICAgICAgdGl0bGU6ICdSZW1vdmUnLFxyXG4gICAgICAgICAgICAgIGNsaWNrOiAoaXRlbSwgcGFyYW1zLCBvYmplY3QpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlV2lkZ2V0KGl0ZW0sIHBhcmFtcywgb2JqZWN0KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1dKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgb3B0czogd2lkZ2V0LFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlOiB0aGlzLnBpcFRpbGVUZW1wbGF0ZS5nZXRUZW1wbGF0ZSh3aWRnZXQsIHRoaXMuX2luY2x1ZGVUcGwpXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWRkQ29tcG9uZW50KGdyb3VwSW5kZXgpIHtcclxuICAgICAgdGhpcy5waXBBZGRUaWxlRGlhbG9nXHJcbiAgICAgICAgLnNob3codGhpcy5ncm91cGVkV2lkZ2V0cywgZ3JvdXBJbmRleClcclxuICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgdmFyIGFjdGl2ZUdyb3VwO1xyXG5cclxuICAgICAgICAgIGlmICghZGF0YSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaWYgKGRhdGEuZ3JvdXBJbmRleCAhPT0gLTEpIHtcclxuICAgICAgICAgICAgYWN0aXZlR3JvdXAgPSB0aGlzLmdyb3VwZWRXaWRnZXRzW2RhdGEuZ3JvdXBJbmRleF07XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhY3RpdmVHcm91cCA9IHtcclxuICAgICAgICAgICAgICB0aXRsZTogJ05ldyBncm91cCcsXHJcbiAgICAgICAgICAgICAgc291cmNlOiBbXVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHRoaXMuYWRkV2lkZ2V0cyhhY3RpdmVHcm91cC5zb3VyY2UsIGRhdGEud2lkZ2V0cyk7XHJcblxyXG4gICAgICAgICAgaWYgKGRhdGEuZ3JvdXBJbmRleCA9PT0gLTEpIHtcclxuICAgICAgICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0cy5wdXNoKGFjdGl2ZUdyb3VwKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLmNvbXBpbGVXaWRnZXRzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyByZW1vdmVHcm91cCA9IChncm91cEluZGV4KSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdyZW1vdmVHcm91cCcsIGdyb3VwSW5kZXgpO1xyXG4gICAgICB0aGlzLmdyb3VwZWRXaWRnZXRzLnNwbGljZShncm91cEluZGV4LCAxKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGFkZFdpZGdldHMoZ3JvdXAsIHdpZGdldHMpIHtcclxuICAgICAgd2lkZ2V0cy5mb3JFYWNoKCh3aWRnZXRHcm91cCkgPT4ge1xyXG4gICAgICAgIHdpZGdldEdyb3VwLmZvckVhY2goKHdpZGdldCkgPT4ge1xyXG4gICAgICAgICAgaWYgKHdpZGdldC5hbW91bnQpIHtcclxuICAgICAgICAgICAgQXJyYXkuYXBwbHkobnVsbCwgQXJyYXkod2lkZ2V0LmFtb3VudCkpLmZvckVhY2goKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGdyb3VwLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogd2lkZ2V0Lm5hbWVcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVtb3ZlV2lkZ2V0KGl0ZW0sIHBhcmFtcywgb2JqZWN0KSB7XHJcbiAgICAgIHRoaXMuZ3JvdXBlZFdpZGdldHNbcGFyYW1zLm9wdGlvbnMuZ3JvdXBJbmRleF0ucmVtb3ZlZFdpZGdldHMgPSBbXTtcclxuICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5yZW1vdmVkV2lkZ2V0cy5wdXNoKHBhcmFtcy5vcHRpb25zLmluZGV4KTtcclxuICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5zb3VyY2Uuc3BsaWNlKHBhcmFtcy5vcHRpb25zLmluZGV4LCAxKTtcclxuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5yZW1vdmVkV2lkZ2V0cyA9IFtdO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICBjb25zdCBEYXNoYm9hcmQ6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xyXG4gICAgYmluZGluZ3M6IHtcclxuICAgICAgZ3JpZE9wdGlvbnM6ICc9cGlwR3JpZE9wdGlvbnMnLFxyXG4gICAgICBncm91cEFkZGl0aW9uYWxBY3Rpb25zOiAnPXBpcEdyb3VwQWN0aW9ucycsXHJcbiAgICAgIGdyb3VwZWRXaWRnZXRzOiAnPXBpcEdyb3VwcydcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiBEYXNoYm9hcmRDb250cm9sbGVyLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdkYXNoYm9hcmQvRGFzaGJvYXJkLmh0bWwnXHJcbiAgfVxyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBEYXNoYm9hcmQnKVxyXG4gICAgLmNvbmZpZyhjb25maWd1cmVBdmFpbGFibGVXaWRnZXRzKVxyXG4gICAgLmNvbmZpZyhzZXRUcmFuc2xhdGlvbnMpXHJcbiAgICAuY29tcG9uZW50KCdwaXBEYXNoYm9hcmQnLCBEYXNoYm9hcmQpO1xyXG5cclxufSIsImRlY2xhcmUgdmFyIGludGVyYWN0O1xyXG5cclxuaW1wb3J0IHtcclxuICBEcmFnVGlsZVNlcnZpY2UsXHJcbiAgSURyYWdUaWxlU2VydmljZSxcclxuICBJRHJhZ1RpbGVDb25zdHJ1Y3RvclxyXG59IGZyb20gJy4vRHJhZ2dhYmxlVGlsZVNlcnZpY2UnO1xyXG5pbXBvcnQge1xyXG4gIFRpbGVzR3JpZFNlcnZpY2UsXHJcbiAgSVRpbGVzR3JpZFNlcnZpY2UsXHJcbiAgSVRpbGVzR3JpZENvbnN0cnVjdG9yXHJcbn0gZnJvbSAnLi4vdGlsZV9ncm91cC9UaWxlR3JvdXBTZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RJTEVfV0lEVEg6IG51bWJlciA9IDE1MDtcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfVElMRV9IRUlHSFQ6IG51bWJlciA9IDE1MDtcclxuZXhwb3J0IGNvbnN0IFVQREFURV9HUk9VUFNfRVZFTlQgPSBcInBpcFVwZGF0ZURhc2hib2FyZEdyb3Vwc0NvbmZpZ1wiO1xyXG5cclxuY29uc3QgU0lNUExFX0xBWU9VVF9DT0xVTU5TX0NPVU5UOiBudW1iZXIgPSAyO1xyXG5jb25zdCBERUZBVUxUX09QVElPTlMgPSB7XHJcbiAgdGlsZVdpZHRoOiBERUZBVUxUX1RJTEVfV0lEVEgsIC8vICdweCdcclxuICB0aWxlSGVpZ2h0OiBERUZBVUxUX1RJTEVfSEVJR0hULCAvLyAncHgnXHJcbiAgZ3V0dGVyOiAyMCwgLy8gJ3B4J1xyXG4gIGNvbnRhaW5lcjogJ3BpcC1kcmFnZ2FibGUtZ3JpZDpmaXJzdC1vZi10eXBlJyxcclxuICAvL21vYmlsZUJyZWFrcG9pbnQgICAgICAgOiBYWFgsICAgLy8gR2V0IGZyb20gcGlwTWVkaWEgU2VydmljZSBpbiB0aGUgY29uc3RydWN0b3JcclxuICBhY3RpdmVEcm9wem9uZUNsYXNzOiAnZHJvcHpvbmUtYWN0aXZlJyxcclxuICBncm91cENvbnRhbmluZXJTZWxlY3RvcjogJy5waXAtZHJhZ2dhYmxlLWdyb3VwOm5vdCguZmljdC1ncm91cCknLFxyXG59O1xyXG5cclxue1xyXG4gIGludGVyZmFjZSBJRHJhZ2dhYmxlQmluZGluZ3Mge1xyXG4gICAgICB0aWxlc1RlbXBsYXRlczogYW55O1xyXG4gICAgICB0aWxlc0NvbnRleHQ6IGFueTtcclxuICAgICAgb3B0aW9uczogYW55O1xyXG4gICAgICBncm91cE1lbnVBY3Rpb25zOiBhbnk7XHJcbiAgICAgICRjb250YWluZXI6IEpRdWVyeTtcclxuICB9XHJcblxyXG4gIGludGVyZmFjZSBJRHJhZ2dhYmxlQ29udHJvbGxlclNjb3BlIGV4dGVuZHMgbmcuSVNjb3BlIHtcclxuICAgICRjb250YWluZXI6IEpRdWVyeTtcclxuICAgIHRpbGVzVGVtcGxhdGVzOiBhbnk7XHJcbiAgICBvcHRpb25zOiBhbnk7XHJcbiAgfVxyXG5cclxuICBpbnRlcmZhY2UgSVRpbGVTY29wZSBleHRlbmRzIG5nLklTY29wZSB7XHJcbiAgICBpbmRleDogbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAgZ3JvdXBJbmRleDogbnVtYmVyIHwgc3RyaW5nO1xyXG4gIH1cclxuXHJcbiAgY2xhc3MgRHJhZ2dhYmxlQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb21wb25lbnRDb250cm9sbGVyLCBJRHJhZ2dhYmxlQmluZGluZ3Mge1xyXG4gICAgcHVibGljIG9wdHM6IGFueTtcclxuICAgIHB1YmxpYyBncm91cHM6IGFueTtcclxuICAgIHB1YmxpYyBzb3VyY2VEcm9wWm9uZUVsZW06IGFueSA9IG51bGw7XHJcbiAgICBwdWJsaWMgaXNTYW1lRHJvcHpvbmU6IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgcHVibGljIHRpbGVHcm91cHM6IGFueSA9IG51bGw7XHJcbiAgICBwdWJsaWMgYXZhaWxhYmxlV2lkdGg6IG51bWJlcjtcclxuICAgIHB1YmxpYyBhdmFpbGFibGVDb2x1bW5zOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgZ3JvdXBzQ29udGFpbmVyczogYW55O1xyXG4gICAgcHVibGljIGNvbnRhaW5lcjogYW55O1xyXG4gICAgcHVibGljIGFjdGl2ZURyYWdnZWRHcm91cDogYW55O1xyXG4gICAgcHVibGljIGRyYWdnZWRUaWxlOiBhbnk7XHJcbiAgICBwdWJsaWMgY29udGFpbmVyT2Zmc2V0OiBhbnk7XHJcbiAgICBwdWJsaWMgdGlsZXNUZW1wbGF0ZXM6IGFueTtcclxuICAgIHB1YmxpYyB0aWxlc0NvbnRleHQ6IGFueTtcclxuICAgIHB1YmxpYyBvcHRpb25zOiBhbnk7XHJcbiAgICBwdWJsaWMgZ3JvdXBNZW51QWN0aW9uczogYW55O1xyXG4gICAgcHVibGljICRjb250YWluZXI6IEpRdWVyeTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgcHJpdmF0ZSAkc2NvcGU6IElEcmFnZ2FibGVDb250cm9sbGVyU2NvcGUsXHJcbiAgICAgIHByaXZhdGUgJHJvb3RTY29wZTogYW5ndWxhci5JUm9vdFNjb3BlU2VydmljZSxcclxuICAgICAgcHJpdmF0ZSAkY29tcGlsZTogYW5ndWxhci5JQ29tcGlsZVNlcnZpY2UsXHJcbiAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlLFxyXG4gICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgIHBpcERyYWdUaWxlOiBJRHJhZ1RpbGVTZXJ2aWNlLFxyXG4gICAgICBwaXBUaWxlc0dyaWQ6IElUaWxlc0dyaWRTZXJ2aWNlLFxyXG4gICAgICBwaXBNZWRpYTogcGlwLmxheW91dHMuSU1lZGlhU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgIHRoaXMub3B0cyA9IF8ubWVyZ2Uoe1xyXG4gICAgICAgIG1vYmlsZUJyZWFrcG9pbnQ6IHBpcE1lZGlhLmJyZWFrcG9pbnRzLnhzXHJcbiAgICAgIH0sIERFRkFVTFRfT1BUSU9OUywgdGhpcy5vcHRpb25zKTtcclxuXHJcbiAgICAgIHRoaXMuZ3JvdXBzID0gdGhpcy50aWxlc1RlbXBsYXRlcy5tYXAoKGdyb3VwLCBncm91cEluZGV4KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHRpdGxlOiBncm91cC50aXRsZSxcclxuICAgICAgICAgIGVkaXRpbmdOYW1lOiBmYWxzZSxcclxuICAgICAgICAgIGluZGV4OiBncm91cEluZGV4LFxyXG4gICAgICAgICAgc291cmNlOiBncm91cC5zb3VyY2UubWFwKCh0aWxlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRpbGVTY29wZSA9IHRoaXMuY3JlYXRlVGlsZVNjb3BlKHRpbGUpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIElEcmFnVGlsZUNvbnN0cnVjdG9yKERyYWdUaWxlU2VydmljZSwge1xyXG4gICAgICAgICAgICAgIHRwbDogJGNvbXBpbGUodGlsZS50ZW1wbGF0ZSkodGlsZVNjb3BlKSxcclxuICAgICAgICAgICAgICBvcHRpb25zOiB0aWxlLm9wdHMsXHJcbiAgICAgICAgICAgICAgc2l6ZTogdGlsZS5vcHRzLnNpemVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gQWRkIHRlbXBsYXRlcyB3YXRjaGVyXHJcbiAgICAgICRzY29wZS4kd2F0Y2goJyRjdHJsLnRpbGVzVGVtcGxhdGVzJywgKG5ld1ZhbCkgPT4ge1xyXG4gICAgICAgIHRoaXMud2F0Y2gobmV3VmFsKTtcclxuICAgICAgfSwgdHJ1ZSk7XHJcblxyXG4gICAgICAvLyBJbml0aWFsaXplIGRhdGFcclxuICAgICAgdGhpcy5pbml0aWFsaXplKCk7XHJcblxyXG4gICAgICAvLyBSZXNpemUgaGFuZGxlciBUT0RPOiByZXBsYWNlIGJ5IHBpcCByZXNpemUgd2F0Y2hlcnNcclxuICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKCgpID0+IHtcclxuICAgICAgICB0aGlzLmF2YWlsYWJsZVdpZHRoID0gdGhpcy5nZXRDb250YWluZXJXaWR0aCgpO1xyXG4gICAgICAgIHRoaXMuYXZhaWxhYmxlQ29sdW1ucyA9IHRoaXMuZ2V0QXZhaWxhYmxlQ29sdW1ucyh0aGlzLmF2YWlsYWJsZVdpZHRoKTtcclxuXHJcbiAgICAgICAgdGhpcy50aWxlR3JvdXBzLmZvckVhY2goKGdyb3VwKSA9PiB7XHJcbiAgICAgICAgICBncm91cFxyXG4gICAgICAgICAgICAuc2V0QXZhaWxhYmxlQ29sdW1ucyh0aGlzLmF2YWlsYWJsZUNvbHVtbnMpXHJcbiAgICAgICAgICAgIC5nZW5lcmF0ZUdyaWQodGhpcy5nZXRTaW5nbGVUaWxlV2lkdGhGb3JNb2JpbGUodGhpcy5hdmFpbGFibGVXaWR0aCkpXHJcbiAgICAgICAgICAgIC5zZXRUaWxlc0RpbWVuc2lvbnMoKVxyXG4gICAgICAgICAgICAuY2FsY0NvbnRhaW5lckhlaWdodCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LCA1MCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFBvc3QgbGluayBmdW5jdGlvblxyXG4gICAgcHVibGljICRwb3N0TGluaygpIHtcclxuICAgICAgdGhpcy4kY29udGFpbmVyID0gdGhpcy4kZWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBXYXRjaCBoYW5kbGVyXHJcbiAgICBwcml2YXRlIHdhdGNoKG5ld1ZhbCkge1xyXG4gICAgICBjb25zdCBwcmV2VmFsID0gdGhpcy5ncm91cHM7XHJcbiAgICAgIGxldCBjaGFuZ2VkR3JvdXBJbmRleCA9IG51bGw7XHJcblxyXG4gICAgICBpZiAobmV3VmFsLmxlbmd0aCA+IHByZXZWYWwubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhpcy5hZGRHcm91cChuZXdWYWxbbmV3VmFsLmxlbmd0aCAtIDFdKTtcclxuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobmV3VmFsLmxlbmd0aCA8IHByZXZWYWwubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVHcm91cHMobmV3VmFsKTtcclxuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld1ZhbC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IGdyb3VwV2lkZ2V0RGlmZiA9IHByZXZWYWxbaV0uc291cmNlLmxlbmd0aCAtIG5ld1ZhbFtpXS5zb3VyY2UubGVuZ3RoO1xyXG4gICAgICAgIGlmIChncm91cFdpZGdldERpZmYgfHwgKG5ld1ZhbFtpXS5yZW1vdmVkV2lkZ2V0cyAmJiBuZXdWYWxbaV0ucmVtb3ZlZFdpZGdldHMubGVuZ3RoID4gMCkpIHtcclxuICAgICAgICAgIGNoYW5nZWRHcm91cEluZGV4ID0gaTtcclxuXHJcbiAgICAgICAgICBpZiAoZ3JvdXBXaWRnZXREaWZmIDwgMCkge1xyXG4gICAgICAgICAgICBjb25zdCBuZXdUaWxlcyA9IG5ld1ZhbFtjaGFuZ2VkR3JvdXBJbmRleF0uc291cmNlLnNsaWNlKGdyb3VwV2lkZ2V0RGlmZik7XHJcblxyXG4gICAgICAgICAgICBfLmVhY2gobmV3VGlsZXMsICh0aWxlKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RpbGUnLCB0aWxlKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmFkZFRpbGVzSW50b0dyb3VwKG5ld1RpbGVzLCB0aGlzLnRpbGVHcm91cHNbY2hhbmdlZEdyb3VwSW5kZXhdLCB0aGlzLmdyb3Vwc0NvbnRhaW5lcnNbY2hhbmdlZEdyb3VwSW5kZXhdKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMudXBkYXRlVGlsZXNHcm91cHMoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZVRpbGVzKHRoaXMudGlsZUdyb3Vwc1tjaGFuZ2VkR3JvdXBJbmRleF0sIG5ld1ZhbFtjaGFuZ2VkR3JvdXBJbmRleF0ucmVtb3ZlZFdpZGdldHMsIHRoaXMuZ3JvdXBzQ29udGFpbmVyc1tjaGFuZ2VkR3JvdXBJbmRleF0pO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRpbGVzT3B0aW9ucyhuZXdWYWwpO1xyXG4gICAgICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVRpbGVzR3JvdXBzKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChuZXdWYWwgJiYgdGhpcy50aWxlR3JvdXBzKSB7XHJcbiAgICAgICAgdGhpcy51cGRhdGVUaWxlc09wdGlvbnMobmV3VmFsKTtcclxuICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIHRoaXMudXBkYXRlVGlsZXNHcm91cHMoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIElubGluZSBlZGl0IGdyb3VwIGhhbmRsZXJzXHJcbiAgICBwdWJsaWMgb25UaXRsZUNsaWNrKGdyb3VwLCBldmVudCkge1xyXG4gICAgICBpZiAoIWdyb3VwLmVkaXRpbmdOYW1lKSB7XHJcbiAgICAgICAgZ3JvdXAub2xkVGl0bGUgPSBfLmNsb25lKGdyb3VwLnRpdGxlKTtcclxuICAgICAgICBncm91cC5lZGl0aW5nTmFtZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQuY2hpbGRyZW5bMF0pLmZvY3VzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2FuY2VsRWRpdGluZyhncm91cCkge1xyXG4gICAgICBncm91cC50aXRsZSA9IGdyb3VwLm9sZFRpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkJsdXJUaXRsZUlucHV0KGdyb3VwKSB7XHJcbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGdyb3VwLmVkaXRpbmdOYW1lID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy4kcm9vdFNjb3BlLiRicm9hZGNhc3QoVVBEQVRFX0dST1VQU19FVkVOVCwgdGhpcy5ncm91cHMpO1xyXG4gICAgICAgIC8vIFVwZGF0ZSB0aXRsZSBpbiBvdXRlciBzY29wZVxyXG4gICAgICAgIHRoaXMudGlsZXNUZW1wbGF0ZXNbZ3JvdXAuaW5kZXhdLnRpdGxlID0gZ3JvdXAudGl0bGU7XHJcbiAgICAgIH0sIDEwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uS3llcHJlc3NUaXRsZUlucHV0KGdyb3VwLCBldmVudCkge1xyXG4gICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHtcclxuICAgICAgICB0aGlzLm9uQmx1clRpdGxlSW5wdXQoZ3JvdXApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVXBkYXRlIG91dGVyIHNjb3BlIGZ1bmN0aW9uc1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVUaWxlc1RlbXBsYXRlcyh1cGRhdGVUeXBlOiBzdHJpbmcsIHNvdXJjZSA/IDogYW55KSB7XHJcbiAgICAgIHN3aXRjaCAodXBkYXRlVHlwZSkge1xyXG4gICAgICAgIGNhc2UgJ2FkZEdyb3VwJzpcclxuICAgICAgICAgIGlmICh0aGlzLmdyb3Vwcy5sZW5ndGggIT09IHRoaXMudGlsZXNUZW1wbGF0ZXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGlsZXNUZW1wbGF0ZXMucHVzaChzb3VyY2UpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnbW92ZVRpbGUnOlxyXG4gICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICBmcm9tSW5kZXgsXHJcbiAgICAgICAgICAgIHRvSW5kZXgsXHJcbiAgICAgICAgICAgIHRpbGVPcHRpb25zLFxyXG4gICAgICAgICAgICBmcm9tVGlsZUluZGV4XHJcbiAgICAgICAgICB9ID0ge1xyXG4gICAgICAgICAgICBmcm9tSW5kZXg6IHNvdXJjZS5mcm9tLmVsZW0uYXR0cmlidXRlc1snZGF0YS1ncm91cC1pZCddLnZhbHVlLFxyXG4gICAgICAgICAgICB0b0luZGV4OiBzb3VyY2UudG8uZWxlbS5hdHRyaWJ1dGVzWydkYXRhLWdyb3VwLWlkJ10udmFsdWUsXHJcbiAgICAgICAgICAgIHRpbGVPcHRpb25zOiBzb3VyY2UudGlsZS5vcHRzLm9wdGlvbnMsXHJcbiAgICAgICAgICAgIGZyb21UaWxlSW5kZXg6IHNvdXJjZS50aWxlLm9wdHMub3B0aW9ucy5pbmRleFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdGhpcy50aWxlc1RlbXBsYXRlc1tmcm9tSW5kZXhdLnNvdXJjZS5zcGxpY2UoZnJvbVRpbGVJbmRleCwgMSk7XHJcbiAgICAgICAgICB0aGlzLnRpbGVzVGVtcGxhdGVzW3RvSW5kZXhdLnNvdXJjZS5wdXNoKHtcclxuICAgICAgICAgICAgb3B0czogdGlsZU9wdGlvbnNcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIHRoaXMucmVJbmRleFRpbGVzKHNvdXJjZS5mcm9tLmVsZW0pO1xyXG4gICAgICAgICAgdGhpcy5yZUluZGV4VGlsZXMoc291cmNlLnRvLmVsZW0pO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBNYW5hZ2UgdGlsZXMgZnVuY3Rpb25zXHJcbiAgICBwcml2YXRlIGNyZWF0ZVRpbGVTY29wZSh0aWxlOiBhbnkpOiBJVGlsZVNjb3BlIHtcclxuICAgICAgY29uc3QgdGlsZVNjb3BlID0gPCBJVGlsZVNjb3BlID4gdGhpcy4kcm9vdFNjb3BlLiRuZXcoZmFsc2UsIHRoaXMudGlsZXNDb250ZXh0KTtcclxuICAgICAgdGlsZVNjb3BlLmluZGV4ID0gdGlsZS5vcHRzLmluZGV4ID09IHVuZGVmaW5lZCA/IHRpbGUub3B0cy5vcHRpb25zLmluZGV4IDogdGlsZS5vcHRzLmluZGV4O1xyXG4gICAgICB0aWxlU2NvcGUuZ3JvdXBJbmRleCA9IHRpbGUub3B0cy5ncm91cEluZGV4ID09IHVuZGVmaW5lZCA/IHRpbGUub3B0cy5vcHRpb25zLmdyb3VwSW5kZXggOiB0aWxlLm9wdHMuZ3JvdXBJbmRleDtcclxuXHJcbiAgICAgIHJldHVybiB0aWxlU2NvcGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZW1vdmVUaWxlcyhncm91cCwgaW5kZXhlcywgY29udGFpbmVyKSB7XHJcbiAgICAgIGNvbnN0IHRpbGVzID0gJChjb250YWluZXIpLmZpbmQoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKTtcclxuXHJcbiAgICAgIF8uZWFjaChpbmRleGVzLCAoaW5kZXgpID0+IHtcclxuICAgICAgICBncm91cC50aWxlcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgIHRpbGVzW2luZGV4XS5yZW1vdmUoKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLnJlSW5kZXhUaWxlcyhjb250YWluZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVJbmRleFRpbGVzKGNvbnRhaW5lciwgZ0luZGV4ID8gKSB7XHJcbiAgICAgIGNvbnN0IHRpbGVzID0gJChjb250YWluZXIpLmZpbmQoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKSxcclxuICAgICAgICBncm91cEluZGV4ID0gZ0luZGV4ID09PSB1bmRlZmluZWQgPyBjb250YWluZXIuYXR0cmlidXRlc1snZGF0YS1ncm91cC1pZCddLnZhbHVlIDogZ0luZGV4O1xyXG5cclxuICAgICAgXy5lYWNoKHRpbGVzLCAodGlsZSwgaW5kZXgpID0+IHtcclxuICAgICAgICBjb25zdCBjaGlsZCA9ICQodGlsZSkuY2hpbGRyZW4oKVswXTtcclxuICAgICAgICBhbmd1bGFyLmVsZW1lbnQoY2hpbGQpLnNjb3BlKClbJ2luZGV4J10gPSBpbmRleDtcclxuICAgICAgICBhbmd1bGFyLmVsZW1lbnQoY2hpbGQpLnNjb3BlKClbJ2dyb3VwSW5kZXgnXSA9IGdyb3VwSW5kZXg7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVtb3ZlR3JvdXBzKG5ld0dyb3Vwcykge1xyXG4gICAgICBjb25zdCByZW1vdmVJbmRleGVzID0gW10sXHJcbiAgICAgICAgcmVtYWluID0gW10sXHJcbiAgICAgICAgY29udGFpbmVycyA9IFtdO1xyXG5cclxuXHJcbiAgICAgIF8uZWFjaCh0aGlzLmdyb3VwcywgKGdyb3VwLCBpbmRleCkgPT4ge1xyXG4gICAgICAgIGlmIChfLmZpbmRJbmRleChuZXdHcm91cHMsIChnKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBnWyd0aXRsZSddID09PSBncm91cC50aXRsZVxyXG4gICAgICAgICAgfSkgPCAwKSB7XHJcbiAgICAgICAgICByZW1vdmVJbmRleGVzLnB1c2goaW5kZXgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZW1haW4ucHVzaChpbmRleCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIF8uZWFjaChyZW1vdmVJbmRleGVzLnJldmVyc2UoKSwgKGluZGV4KSA9PiB7XHJcbiAgICAgICAgdGhpcy5ncm91cHMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICB0aGlzLnRpbGVHcm91cHMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBfLmVhY2gocmVtYWluLCAoaW5kZXgpID0+IHtcclxuICAgICAgICBjb250YWluZXJzLnB1c2godGhpcy5ncm91cHNDb250YWluZXJzW2luZGV4XSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGhpcy5ncm91cHNDb250YWluZXJzID0gY29udGFpbmVycztcclxuXHJcbiAgICAgIF8uZWFjaCh0aGlzLmdyb3Vwc0NvbnRhaW5lcnMsIChjb250YWluZXIsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgdGhpcy5yZUluZGV4VGlsZXMoY29udGFpbmVyLCBpbmRleCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYWRkR3JvdXAoc291cmNlR3JvdXApIHtcclxuICAgICAgY29uc3QgZ3JvdXAgPSB7XHJcbiAgICAgICAgdGl0bGU6IHNvdXJjZUdyb3VwLnRpdGxlLFxyXG4gICAgICAgIHNvdXJjZTogc291cmNlR3JvdXAuc291cmNlLm1hcCgodGlsZSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgdGlsZVNjb3BlID0gdGhpcy5jcmVhdGVUaWxlU2NvcGUodGlsZSk7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIElEcmFnVGlsZUNvbnN0cnVjdG9yKERyYWdUaWxlU2VydmljZSwge1xyXG4gICAgICAgICAgICB0cGw6IHRoaXMuJGNvbXBpbGUodGlsZS50ZW1wbGF0ZSkodGlsZVNjb3BlKSxcclxuICAgICAgICAgICAgb3B0aW9uczogdGlsZS5vcHRzLFxyXG4gICAgICAgICAgICBzaXplOiB0aWxlLm9wdHMuc2l6ZVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRoaXMuZ3JvdXBzLnB1c2goZ3JvdXApO1xyXG4gICAgICBpZiAoIXRoaXMuJHNjb3BlLiQkcGhhc2UpIHRoaXMuJHNjb3BlLiRhcHBseSgpO1xyXG5cclxuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5ncm91cHNDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLm9wdHMuZ3JvdXBDb250YW5pbmVyU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMudGlsZUdyb3Vwcy5wdXNoKFxyXG4gICAgICAgICAgSVRpbGVzR3JpZENvbnN0cnVjdG9yKFRpbGVzR3JpZFNlcnZpY2UsIGdyb3VwLnNvdXJjZSwgdGhpcy5vcHRzLCB0aGlzLmF2YWlsYWJsZUNvbHVtbnMsIHRoaXMuZ3JvdXBzQ29udGFpbmVyc1t0aGlzLmdyb3Vwc0NvbnRhaW5lcnMubGVuZ3RoIC0gMV0pXHJcbiAgICAgICAgICAuZ2VuZXJhdGVHcmlkKHRoaXMuZ2V0U2luZ2xlVGlsZVdpZHRoRm9yTW9iaWxlKHRoaXMuYXZhaWxhYmxlV2lkdGgpKVxyXG4gICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucygpXHJcbiAgICAgICAgICAuY2FsY0NvbnRhaW5lckhlaWdodCgpXHJcbiAgICAgICAgKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLnVwZGF0ZVRpbGVzVGVtcGxhdGVzKCdhZGRHcm91cCcsIHNvdXJjZUdyb3VwKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGFkZFRpbGVzSW50b0dyb3VwKG5ld1RpbGVzLCBncm91cCwgZ3JvdXBDb250YWluZXIpIHtcclxuICAgICAgbmV3VGlsZXMuZm9yRWFjaCgodGlsZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRpbGVTY29wZSA9IHRoaXMuY3JlYXRlVGlsZVNjb3BlKHRpbGUpO1xyXG5cclxuICAgICAgICBjb25zdCBuZXdUaWxlID0gSURyYWdUaWxlQ29uc3RydWN0b3IoRHJhZ1RpbGVTZXJ2aWNlLCB7XHJcbiAgICAgICAgICB0cGw6IHRoaXMuJGNvbXBpbGUodGlsZS50ZW1wbGF0ZSkodGlsZVNjb3BlKSxcclxuICAgICAgICAgIG9wdGlvbnM6IHRpbGUub3B0cyxcclxuICAgICAgICAgIHNpemU6IHRpbGUub3B0cy5zaXplXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGdyb3VwLmFkZFRpbGUobmV3VGlsZSk7XHJcblxyXG4gICAgICAgICQoJzxkaXY+JylcclxuICAgICAgICAgIC5hZGRDbGFzcygncGlwLWRyYWdnYWJsZS10aWxlJylcclxuICAgICAgICAgIC5hcHBlbmQobmV3VGlsZS5nZXRDb21waWxlZFRlbXBsYXRlKCkpXHJcbiAgICAgICAgICAuYXBwZW5kVG8oZ3JvdXBDb250YWluZXIpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHVwZGF0ZVRpbGVzT3B0aW9ucyhvcHRpb25zR3JvdXApIHtcclxuICAgICAgb3B0aW9uc0dyb3VwLmZvckVhY2goKG9wdGlvbkdyb3VwKSA9PiB7XHJcbiAgICAgICAgb3B0aW9uR3JvdXAuc291cmNlLmZvckVhY2goKHRpbGVPcHRpb25zKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnRpbGVHcm91cHMuZm9yRWFjaCgoZ3JvdXApID0+IHtcclxuICAgICAgICAgICAgZ3JvdXAudXBkYXRlVGlsZU9wdGlvbnModGlsZU9wdGlvbnMub3B0cyk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0VGlsZXNHcm91cHModGlsZUdyb3Vwcywgb3B0cywgZ3JvdXBzQ29udGFpbmVycykge1xyXG4gICAgICByZXR1cm4gdGlsZUdyb3Vwcy5tYXAoKGdyb3VwLCBpbmRleCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBJVGlsZXNHcmlkQ29uc3RydWN0b3IoVGlsZXNHcmlkU2VydmljZSwgZ3JvdXAuc291cmNlLCBvcHRzLCB0aGlzLmF2YWlsYWJsZUNvbHVtbnMsIGdyb3Vwc0NvbnRhaW5lcnNbaW5kZXhdKVxyXG4gICAgICAgICAgLmdlbmVyYXRlR3JpZCh0aGlzLmdldFNpbmdsZVRpbGVXaWR0aEZvck1vYmlsZSh0aGlzLmF2YWlsYWJsZVdpZHRoKSlcclxuICAgICAgICAgIC5zZXRUaWxlc0RpbWVuc2lvbnMoKVxyXG4gICAgICAgICAgLmNhbGNDb250YWluZXJIZWlnaHQoKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB1cGRhdGVUaWxlc0dyb3Vwcyhvbmx5UG9zaXRpb24gPyAsIGRyYWdnZWRUaWxlID8gKSB7XHJcbiAgICAgIHRoaXMudGlsZUdyb3Vwcy5mb3JFYWNoKChncm91cCkgPT4ge1xyXG4gICAgICAgIGlmICghb25seVBvc2l0aW9uKSB7XHJcbiAgICAgICAgICBncm91cC5nZW5lcmF0ZUdyaWQodGhpcy5nZXRTaW5nbGVUaWxlV2lkdGhGb3JNb2JpbGUodGhpcy5hdmFpbGFibGVXaWR0aCkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZ3JvdXBcclxuICAgICAgICAgIC5zZXRUaWxlc0RpbWVuc2lvbnMob25seVBvc2l0aW9uLCBkcmFnZ2VkVGlsZSlcclxuICAgICAgICAgIC5jYWxjQ29udGFpbmVySGVpZ2h0KCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0Q29udGFpbmVyV2lkdGgoKTogYW55IHtcclxuICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy4kY29udGFpbmVyIHx8ICQoJ2JvZHknKTtcclxuICAgICAgcmV0dXJuIGNvbnRhaW5lci53aWR0aCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0QXZhaWxhYmxlQ29sdW1ucyhhdmFpbGFibGVXaWR0aCk6IGFueSB7XHJcbiAgICAgIHJldHVybiB0aGlzLm9wdHMubW9iaWxlQnJlYWtwb2ludCA+IGF2YWlsYWJsZVdpZHRoID8gU0lNUExFX0xBWU9VVF9DT0xVTU5TX0NPVU5UIDpcclxuICAgICAgICBNYXRoLmZsb29yKGF2YWlsYWJsZVdpZHRoIC8gKHRoaXMub3B0cy50aWxlV2lkdGggKyB0aGlzLm9wdHMuZ3V0dGVyKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRBY3RpdmVHcm91cEFuZFRpbGUoZWxlbSk6IGFueSB7XHJcbiAgICAgIGNvbnN0IGFjdGl2ZSA9IHt9O1xyXG5cclxuICAgICAgdGhpcy50aWxlR3JvdXBzLmZvckVhY2goKGdyb3VwKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZm91bmRUaWxlID0gZ3JvdXAuZ2V0VGlsZUJ5Tm9kZShlbGVtKTtcclxuXHJcbiAgICAgICAgaWYgKGZvdW5kVGlsZSkge1xyXG4gICAgICAgICAgYWN0aXZlWydncm91cCddID0gZ3JvdXA7XHJcbiAgICAgICAgICBhY3RpdmVbJ3RpbGUnXSA9IGZvdW5kVGlsZTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIGFjdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFNpbmdsZVRpbGVXaWR0aEZvck1vYmlsZShhdmFpbGFibGVXaWR0aCk6IGFueSB7XHJcbiAgICAgIHJldHVybiB0aGlzLm9wdHMubW9iaWxlQnJlYWtwb2ludCA+IGF2YWlsYWJsZVdpZHRoID8gYXZhaWxhYmxlV2lkdGggLyAyIC0gdGhpcy5vcHRzLmd1dHRlciA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyYWdTdGFydExpc3RlbmVyKGV2ZW50KSB7XHJcbiAgICAgIGNvbnN0IGFjdGl2ZUVudGl0aWVzID0gdGhpcy5nZXRBY3RpdmVHcm91cEFuZFRpbGUoZXZlbnQudGFyZ2V0KTtcclxuXHJcbiAgICAgIHRoaXMuY29udGFpbmVyID0gJChldmVudC50YXJnZXQpLnBhcmVudCgnLnBpcC1kcmFnZ2FibGUtZ3JvdXAnKS5nZXQoMCk7XHJcbiAgICAgIHRoaXMuZHJhZ2dlZFRpbGUgPSBhY3RpdmVFbnRpdGllc1sndGlsZSddO1xyXG4gICAgICB0aGlzLmFjdGl2ZURyYWdnZWRHcm91cCA9IGFjdGl2ZUVudGl0aWVzWydncm91cCddO1xyXG5cclxuICAgICAgdGhpcy4kZWxlbWVudC5hZGRDbGFzcygnZHJhZy10cmFuc2ZlcicpO1xyXG5cclxuICAgICAgdGhpcy5kcmFnZ2VkVGlsZS5zdGFydERyYWcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRHJhZ01vdmVMaXN0ZW5lcihldmVudCkge1xyXG4gICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XHJcbiAgICAgIGNvbnN0IHggPSAocGFyc2VGbG9hdCh0YXJnZXQuc3R5bGUubGVmdCkgfHwgMCkgKyBldmVudC5keDtcclxuICAgICAgY29uc3QgeSA9IChwYXJzZUZsb2F0KHRhcmdldC5zdHlsZS50b3ApIHx8IDApICsgZXZlbnQuZHk7XHJcblxyXG4gICAgICB0aGlzLmNvbnRhaW5lck9mZnNldCA9IHRoaXMuZ2V0Q29udGFpbmVyT2Zmc2V0KCk7XHJcblxyXG4gICAgICB0YXJnZXQuc3R5bGUubGVmdCA9IHggKyAncHgnOyAvLyBUT0RPIFthcGlkaGlybnlpXSBFeHRyYWN0IHVuaXRzIGludG8gb3B0aW9ucyBzZWN0aW9uXHJcbiAgICAgIHRhcmdldC5zdHlsZS50b3AgPSB5ICsgJ3B4JztcclxuXHJcbiAgICAgIGNvbnN0IGJlbG93RWxlbWVudCA9IHRoaXMuYWN0aXZlRHJhZ2dlZEdyb3VwLmdldFRpbGVCeUNvb3JkaW5hdGVzKHtcclxuICAgICAgICBsZWZ0OiBldmVudC5wYWdlWCAtIHRoaXMuY29udGFpbmVyT2Zmc2V0LmxlZnQsXHJcbiAgICAgICAgdG9wOiBldmVudC5wYWdlWSAtIHRoaXMuY29udGFpbmVyT2Zmc2V0LnRvcFxyXG4gICAgICB9LCB0aGlzLmRyYWdnZWRUaWxlKTtcclxuXHJcbiAgICAgIGlmIChiZWxvd0VsZW1lbnQpIHtcclxuICAgICAgICBjb25zdCBkcmFnZ2VkVGlsZUluZGV4ID0gdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAuZ2V0VGlsZUluZGV4KHRoaXMuZHJhZ2dlZFRpbGUpO1xyXG4gICAgICAgIGNvbnN0IGJlbG93RWxlbUluZGV4ID0gdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAuZ2V0VGlsZUluZGV4KGJlbG93RWxlbWVudCk7XHJcblxyXG4gICAgICAgIGlmICgoZHJhZ2dlZFRpbGVJbmRleCArIDEpID09PSBiZWxvd0VsZW1JbmRleCkge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXBcclxuICAgICAgICAgIC5zd2FwVGlsZXModGhpcy5kcmFnZ2VkVGlsZSwgYmVsb3dFbGVtZW50KVxyXG4gICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucyh0cnVlLCB0aGlzLmRyYWdnZWRUaWxlKTtcclxuXHJcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnNldEdyb3VwQ29udGFpbmVyc0hlaWdodCgpO1xyXG4gICAgICAgIH0sIDApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyYWdFbmRMaXN0ZW5lcigpIHtcclxuICAgICAgdGhpcy5kcmFnZ2VkVGlsZS5zdG9wRHJhZyh0aGlzLmlzU2FtZURyb3B6b25lKTtcclxuXHJcbiAgICAgIHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2RyYWctdHJhbnNmZXInKTtcclxuICAgICAgdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAgPSBudWxsO1xyXG4gICAgICB0aGlzLmRyYWdnZWRUaWxlID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldENvbnRhaW5lck9mZnNldCgpIHtcclxuICAgICAgY29uc3QgY29udGFpbmVyUmVjdCA9IHRoaXMuY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBsZWZ0OiBjb250YWluZXJSZWN0LmxlZnQsXHJcbiAgICAgICAgdG9wOiBjb250YWluZXJSZWN0LnRvcFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2V0R3JvdXBDb250YWluZXJzSGVpZ2h0KCkge1xyXG4gICAgICB0aGlzLnRpbGVHcm91cHMuZm9yRWFjaCgodGlsZUdyb3VwKSA9PiB7XHJcbiAgICAgICAgdGlsZUdyb3VwLmNhbGNDb250YWluZXJIZWlnaHQoKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBtb3ZlVGlsZShmcm9tLCB0bywgdGlsZSkge1xyXG4gICAgICBsZXQgZWxlbTtcclxuICAgICAgY29uc3QgbW92ZWRUaWxlID0gZnJvbS5yZW1vdmVUaWxlKHRpbGUpO1xyXG4gICAgICBjb25zdCB0aWxlU2NvcGUgPSB0aGlzLmNyZWF0ZVRpbGVTY29wZSh0aWxlKTtcclxuXHJcbiAgICAgICQodGhpcy5ncm91cHNDb250YWluZXJzW18uZmluZEluZGV4KHRoaXMudGlsZUdyb3VwcywgZnJvbSldKVxyXG4gICAgICAgIC5maW5kKG1vdmVkVGlsZS5nZXRFbGVtKCkpXHJcbiAgICAgICAgLnJlbW92ZSgpO1xyXG5cclxuICAgICAgaWYgKHRvICE9PSBudWxsKSB7XHJcbiAgICAgICAgdG8uYWRkVGlsZShtb3ZlZFRpbGUpO1xyXG5cclxuICAgICAgICBlbGVtID0gdGhpcy4kY29tcGlsZShtb3ZlZFRpbGUuZ2V0RWxlbSgpKSh0aWxlU2NvcGUpO1xyXG5cclxuICAgICAgICAkKHRoaXMuZ3JvdXBzQ29udGFpbmVyc1tfLmZpbmRJbmRleCh0aGlzLnRpbGVHcm91cHMsIHRvKV0pXHJcbiAgICAgICAgICAuYXBwZW5kKGVsZW0pO1xyXG5cclxuICAgICAgICB0aGlzLiR0aW1lb3V0KHRvLnNldFRpbGVzRGltZW5zaW9ucy5iaW5kKHRvLCB0cnVlKSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMudXBkYXRlVGlsZXNUZW1wbGF0ZXMoJ21vdmVUaWxlJywge1xyXG4gICAgICAgIGZyb206IGZyb20sXHJcbiAgICAgICAgdG86IHRvLFxyXG4gICAgICAgIHRpbGU6IG1vdmVkVGlsZVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRHJvcExpc3RlbmVyKGV2ZW50KSB7XHJcbiAgICAgIGNvbnN0IGRyb3BwZWRHcm91cEluZGV4ID0gZXZlbnQudGFyZ2V0LmF0dHJpYnV0ZXNbJ2RhdGEtZ3JvdXAtaWQnXS52YWx1ZTtcclxuICAgICAgY29uc3QgZHJvcHBlZEdyb3VwID0gdGhpcy50aWxlR3JvdXBzW2Ryb3BwZWRHcm91cEluZGV4XTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmFjdGl2ZURyYWdnZWRHcm91cCAhPT0gZHJvcHBlZEdyb3VwKSB7XHJcbiAgICAgICAgdGhpcy5tb3ZlVGlsZSh0aGlzLmFjdGl2ZURyYWdnZWRHcm91cCwgZHJvcHBlZEdyb3VwLCB0aGlzLmRyYWdnZWRUaWxlKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy51cGRhdGVUaWxlc0dyb3Vwcyh0cnVlKTtcclxuICAgICAgdGhpcy5zb3VyY2VEcm9wWm9uZUVsZW0gPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25Ecm9wVG9GaWN0R3JvdXBMaXN0ZW5lcihldmVudCkge1xyXG4gICAgICBjb25zdCBmcm9tID0gdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXA7XHJcbiAgICAgIGNvbnN0IHRpbGUgPSB0aGlzLmRyYWdnZWRUaWxlO1xyXG5cclxuICAgICAgdGhpcy5hZGRHcm91cCh7XHJcbiAgICAgICAgdGl0bGU6ICdOZXcgZ3JvdXAnLFxyXG4gICAgICAgIHNvdXJjZTogW11cclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMubW92ZVRpbGUoZnJvbSwgdGhpcy50aWxlR3JvdXBzW3RoaXMudGlsZUdyb3Vwcy5sZW5ndGggLSAxXSwgdGlsZSk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVUaWxlc0dyb3Vwcyh0cnVlKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLnNvdXJjZURyb3Bab25lRWxlbSA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyb3BFbnRlckxpc3RlbmVyKGV2ZW50KSB7XHJcbiAgICAgIGlmICghdGhpcy5zb3VyY2VEcm9wWm9uZUVsZW0pIHtcclxuICAgICAgICB0aGlzLnNvdXJjZURyb3Bab25lRWxlbSA9IGV2ZW50LmRyYWdFdmVudC5kcmFnRW50ZXI7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLnNvdXJjZURyb3Bab25lRWxlbSAhPT0gZXZlbnQuZHJhZ0V2ZW50LmRyYWdFbnRlcikge1xyXG4gICAgICAgIGV2ZW50LmRyYWdFdmVudC5kcmFnRW50ZXIuY2xhc3NMaXN0LmFkZCgnZHJvcHpvbmUtYWN0aXZlJyk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnY3Vyc29yJywgJ2NvcHknKTtcclxuICAgICAgICB0aGlzLmlzU2FtZURyb3B6b25lID0gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnY3Vyc29yJywgJycpO1xyXG4gICAgICAgIHRoaXMuaXNTYW1lRHJvcHpvbmUgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyb3BEZWFjdGl2YXRlTGlzdGVuZXIoZXZlbnQpIHtcclxuICAgICAgaWYgKHRoaXMuc291cmNlRHJvcFpvbmVFbGVtICE9PSBldmVudC50YXJnZXQpIHtcclxuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLm9wdHMuYWN0aXZlRHJvcHpvbmVDbGFzcyk7XHJcbiAgICAgICAgJCgnYm9keScpLmNzcygnY3Vyc29yJywgJycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyb3BMZWF2ZUxpc3RlbmVyKGV2ZW50KSB7XHJcbiAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3B0cy5hY3RpdmVEcm9wem9uZUNsYXNzKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXRpYWxpemUoKSB7XHJcbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuYXZhaWxhYmxlV2lkdGggPSB0aGlzLmdldENvbnRhaW5lcldpZHRoKCk7XHJcbiAgICAgICAgdGhpcy5hdmFpbGFibGVDb2x1bW5zID0gdGhpcy5nZXRBdmFpbGFibGVDb2x1bW5zKHRoaXMuYXZhaWxhYmxlV2lkdGgpO1xyXG4gICAgICAgIHRoaXMuZ3JvdXBzQ29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5vcHRzLmdyb3VwQ29udGFuaW5lclNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLnRpbGVHcm91cHMgPSB0aGlzLmluaXRUaWxlc0dyb3Vwcyh0aGlzLmdyb3VwcywgdGhpcy5vcHRzLCB0aGlzLmdyb3Vwc0NvbnRhaW5lcnMpO1xyXG5cclxuICAgICAgICBpbnRlcmFjdCgnLnBpcC1kcmFnZ2FibGUtdGlsZScpXHJcbiAgICAgICAgICAuZHJhZ2dhYmxlKHtcclxuICAgICAgICAgICAgYXV0b1Njcm9sbDoge1xyXG4gICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgY29udGFpbmVyOiAkKCcjY29udGVudCcpLmdldCgwKSxcclxuICAgICAgICAgICAgICBzcGVlZDogNTAwXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uc3RhcnQ6IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMub25EcmFnU3RhcnRMaXN0ZW5lcihldmVudClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb25tb3ZlOiAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLm9uRHJhZ01vdmVMaXN0ZW5lcihldmVudClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb25lbmQ6IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMub25EcmFnRW5kTGlzdGVuZXIoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLWdyb3VwLmZpY3QtZ3JvdXAnKVxyXG4gICAgICAgICAgLmRyb3B6b25lKHtcclxuICAgICAgICAgICAgb25kcm9wOiAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLm9uRHJvcFRvRmljdEdyb3VwTGlzdGVuZXIoZXZlbnQpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uZHJhZ2VudGVyOiAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLm9uRHJvcEVudGVyTGlzdGVuZXIoZXZlbnQpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uZHJvcGRlYWN0aXZhdGU6IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMub25Ecm9wRGVhY3RpdmF0ZUxpc3RlbmVyKGV2ZW50KVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBvbmRyYWdsZWF2ZTogKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BMZWF2ZUxpc3RlbmVyKGV2ZW50KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLWdyb3VwJylcclxuICAgICAgICAgIC5kcm9wem9uZSh7XHJcbiAgICAgICAgICAgIG9uZHJvcDogKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BMaXN0ZW5lcihldmVudClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb25kcmFnZW50ZXI6IChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMub25Ecm9wRW50ZXJMaXN0ZW5lcihldmVudClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb25kcm9wZGVhY3RpdmF0ZTogKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BEZWFjdGl2YXRlTGlzdGVuZXIoZXZlbnQpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uZHJhZ2xlYXZlOiAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLm9uRHJvcExlYXZlTGlzdGVuZXIoZXZlbnQpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLiRjb250YWluZXJcclxuICAgICAgICAgIC5vbignbW91c2Vkb3duIHRvdWNoc3RhcnQnLCAnbWQtbWVudSAubWQtaWNvbi1idXR0b24nLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGludGVyYWN0KCcucGlwLWRyYWdnYWJsZS10aWxlJykuZHJhZ2dhYmxlKGZhbHNlKTtcclxuICAgICAgICAgICAgJCh0aGlzKS50cmlnZ2VyKCdjbGljaycpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5vbignbW91c2V1cCB0b3VjaGVuZCcsICgpID0+IHtcclxuICAgICAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKS5kcmFnZ2FibGUodHJ1ZSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIFxyXG4gICAgICB9LCAwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IERyYWdDb21wb25lbnQ6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xyXG4gICAgYmluZGluZ3M6IHtcclxuICAgICAgdGlsZXNUZW1wbGF0ZXM6ICc9cGlwVGlsZXNUZW1wbGF0ZXMnLFxyXG4gICAgICB0aWxlc0NvbnRleHQ6ICc9cGlwVGlsZXNDb250ZXh0JyxcclxuICAgICAgb3B0aW9uczogJz1waXBEcmFnZ2FibGVHcmlkJyxcclxuICAgICAgZ3JvdXBNZW51QWN0aW9uczogJz1waXBHcm91cE1lbnVBY3Rpb25zJ1xyXG4gICAgfSxcclxuICAgIC8vY29udHJvbGxlckFzOiAnRHJhZ2dlZEN0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdkcmFnZ2FibGUvRHJhZ2dhYmxlLmh0bWwnLFxyXG4gICAgY29udHJvbGxlcjogRHJhZ2dhYmxlQ29udHJvbGxlclxyXG4gIH1cclxuXHJcbiAgYW5ndWxhci5tb2R1bGUoJ3BpcERyYWdnYWJsZVRpbGVzJylcclxuICAgIC5jb21wb25lbnQoJ3BpcERyYWdnYWJsZUdyaWQnLCBEcmFnQ29tcG9uZW50KTtcclxufSIsImV4cG9ydCBpbnRlcmZhY2UgRHJhZ1RpbGVDb25zdHJ1Y3RvciB7XHJcbiAgbmV3IChvcHRpb25zOiBhbnkpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gSURyYWdUaWxlQ29uc3RydWN0b3IoY29uc3RydWN0b3I6IERyYWdUaWxlQ29uc3RydWN0b3IsIG9wdGlvbnM6IGFueSk6IElEcmFnVGlsZVNlcnZpY2Uge1xyXG4gIHJldHVybiBuZXcgY29uc3RydWN0b3Iob3B0aW9ucyk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSURyYWdUaWxlU2VydmljZSB7XHJcbiAgdHBsOiBhbnk7XHJcbiAgb3B0czogYW55O1xyXG4gIHNpemU6IGFueTtcclxuICBlbGVtOiBhbnk7XHJcbiAgcHJldmlldzogYW55O1xyXG4gIGdldFNpemUoKTogYW55O1xyXG4gIHNldFNpemUod2lkdGgsIGhlaWdodCk6IGFueTtcclxuICBzZXRQb3NpdGlvbihsZWZ0LCB0b3ApOiBhbnk7XHJcbiAgZ2V0Q29tcGlsZWRUZW1wbGF0ZSgpOiBhbnk7XHJcbiAgdXBkYXRlRWxlbShwYXJlbnQpOiBhbnk7XHJcbiAgZ2V0RWxlbSgpOiBhbnk7XHJcbiAgc3RhcnREcmFnKCk6IGFueTtcclxuICBzdG9wRHJhZyhpc0FuaW1hdGUpOiBhbnk7XHJcbiAgc2V0UHJldmlld1Bvc2l0aW9uKGNvb3Jkcyk6IHZvaWQ7XHJcbiAgZ2V0T3B0aW9ucygpOiBhbnk7XHJcbiAgc2V0T3B0aW9ucyhvcHRpb25zKTogYW55O1xyXG59XHJcblxyXG5sZXQgREVGQVVMVF9USUxFX1NJWkUgPSB7XHJcbiAgY29sU3BhbjogMSxcclxuICByb3dTcGFuOiAxXHJcbn07XHJcblxyXG5leHBvcnQgY2xhc3MgRHJhZ1RpbGVTZXJ2aWNlIGltcGxlbWVudHMgSURyYWdUaWxlU2VydmljZSB7XHJcbiAgcHVibGljIHRwbDogYW55O1xyXG4gIHB1YmxpYyBvcHRzOiBhbnk7XHJcbiAgcHVibGljIHNpemU6IGFueTtcclxuICBwdWJsaWMgZWxlbTogYW55O1xyXG4gIHB1YmxpYyBwcmV2aWV3OiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yIChvcHRpb25zOiBhbnkpIHtcclxuICAgIHRoaXMudHBsID0gb3B0aW9ucy50cGwuZ2V0KDApO1xyXG4gICAgdGhpcy5vcHRzID0gb3B0aW9ucztcclxuICAgIHRoaXMuc2l6ZSA9IF8ubWVyZ2Uoe30sIERFRkFVTFRfVElMRV9TSVpFLCBvcHRpb25zLnNpemUpO1xyXG4gICAgdGhpcy5lbGVtID0gbnVsbDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRTaXplKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5zaXplO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldFNpemUod2lkdGgsIGhlaWdodCk6IGFueSB7XHJcbiAgICB0aGlzLnNpemUud2lkdGggPSB3aWR0aDtcclxuICAgIHRoaXMuc2l6ZS5oZWlnaHQgPSBoZWlnaHQ7XHJcblxyXG4gICAgaWYgKHRoaXMuZWxlbSkge1xyXG4gICAgICB0aGlzLmVsZW0uY3NzKHtcclxuICAgICAgICB3aWR0aDogd2lkdGgsXHJcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0UG9zaXRpb24obGVmdCwgdG9wKTogYW55IHtcclxuICAgIHRoaXMuc2l6ZS5sZWZ0ID0gbGVmdDtcclxuICAgIHRoaXMuc2l6ZS50b3AgPSB0b3A7XHJcblxyXG4gICAgaWYgKHRoaXMuZWxlbSkge1xyXG4gICAgICB0aGlzLmVsZW0uY3NzKHtcclxuICAgICAgICBsZWZ0OiBsZWZ0LFxyXG4gICAgICAgIHRvcDogdG9wXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldENvbXBpbGVkVGVtcGxhdGUoKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLnRwbDtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgdXBkYXRlRWxlbShwYXJlbnQpOiBhbnkge1xyXG4gICAgdGhpcy5lbGVtID0gJCh0aGlzLnRwbCkucGFyZW50KHBhcmVudCk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGdldEVsZW0oKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLmVsZW0uZ2V0KDApO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBzdGFydERyYWcoKTogYW55IHtcclxuICAgIHRoaXMucHJldmlldyA9ICQoJzxkaXY+JylcclxuICAgICAgLmFkZENsYXNzKCdwaXAtZHJhZ2dlZC1wcmV2aWV3JylcclxuICAgICAgLmNzcyh7XHJcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgbGVmdDogdGhpcy5lbGVtLmNzcygnbGVmdCcpLFxyXG4gICAgICAgIHRvcDogdGhpcy5lbGVtLmNzcygndG9wJyksXHJcbiAgICAgICAgd2lkdGg6IHRoaXMuZWxlbS5jc3MoJ3dpZHRoJyksXHJcbiAgICAgICAgaGVpZ2h0OiB0aGlzLmVsZW0uY3NzKCdoZWlnaHQnKVxyXG4gICAgICB9KTtcclxuXHJcbiAgICB0aGlzLmVsZW1cclxuICAgICAgLmFkZENsYXNzKCduby1hbmltYXRpb24nKVxyXG4gICAgICAuY3NzKHtcclxuICAgICAgICB6SW5kZXg6ICc5OTk5J1xyXG4gICAgICB9KVxyXG4gICAgICAuYWZ0ZXIodGhpcy5wcmV2aWV3KTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9O1xyXG5cclxuICBwdWJsaWMgc3RvcERyYWcoaXNBbmltYXRlKTogYW55IHtcclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICBpZiAoaXNBbmltYXRlKSB7XHJcbiAgICAgIHRoaXMuZWxlbVxyXG4gICAgICAgIC5yZW1vdmVDbGFzcygnbm8tYW5pbWF0aW9uJylcclxuICAgICAgICAuY3NzKHtcclxuICAgICAgICAgIGxlZnQ6IHRoaXMucHJldmlldy5jc3MoJ2xlZnQnKSxcclxuICAgICAgICAgIHRvcDogdGhpcy5wcmV2aWV3LmNzcygndG9wJylcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5vbigndHJhbnNpdGlvbmVuZCcsIG9uVHJhbnNpdGlvbkVuZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzZWxmLmVsZW1cclxuICAgICAgICAuY3NzKHtcclxuICAgICAgICAgIGxlZnQ6IHNlbGYucHJldmlldy5jc3MoJ2xlZnQnKSxcclxuICAgICAgICAgIHRvcDogc2VsZi5wcmV2aWV3LmNzcygndG9wJyksXHJcbiAgICAgICAgICB6SW5kZXg6ICcnXHJcbiAgICAgICAgfSlcclxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ25vLWFuaW1hdGlvbicpO1xyXG5cclxuICAgICAgc2VsZi5wcmV2aWV3LnJlbW92ZSgpO1xyXG4gICAgICBzZWxmLnByZXZpZXcgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG5cclxuICAgIGZ1bmN0aW9uIG9uVHJhbnNpdGlvbkVuZCgpIHtcclxuICAgICAgaWYgKHNlbGYucHJldmlldykge1xyXG4gICAgICAgIHNlbGYucHJldmlldy5yZW1vdmUoKTtcclxuICAgICAgICBzZWxmLnByZXZpZXcgPSBudWxsO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzZWxmLmVsZW1cclxuICAgICAgICAuY3NzKCd6SW5kZXgnLCAnJylcclxuICAgICAgICAub2ZmKCd0cmFuc2l0aW9uZW5kJywgb25UcmFuc2l0aW9uRW5kKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwdWJsaWMgc2V0UHJldmlld1Bvc2l0aW9uKGNvb3Jkcykge1xyXG4gICAgdGhpcy5wcmV2aWV3LmNzcyhjb29yZHMpO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRPcHRpb25zKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5vcHRzLm9wdGlvbnM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHNldE9wdGlvbnMob3B0aW9ucyk6IGFueSB7XHJcbiAgICBfLm1lcmdlKHRoaXMub3B0cy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIF8ubWVyZ2UodGhpcy5zaXplLCBvcHRpb25zLnNpemUpO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlcycpXHJcbiAgLnNlcnZpY2UoJ3BpcERyYWdUaWxlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgIGxldCBuZXdUaWxlID0gbmV3IERyYWdUaWxlU2VydmljZShvcHRpb25zKTtcclxuXHJcbiAgICAgIHJldHVybiBuZXdUaWxlO1xyXG4gICAgfVxyXG4gIH0pOyIsImFuZ3VsYXIubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlcycsIFtdKTtcclxuXHJcbmltcG9ydCAnLi9EcmFnZ2FibGVUaWxlU2VydmljZSc7XHJcbmltcG9ydCAnLi9EcmFnZ2FibGUnOyIsImltcG9ydCB7XHJcbiAgTWVudVRpbGVTZXJ2aWNlXHJcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XHJcbmltcG9ydCB7XHJcbiAgSVRpbGVDb25maWdTZXJ2aWNlXHJcbn0gZnJvbSAnLi4vY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ1NlcnZpY2UnO1xyXG57XHJcbiAgY2xhc3MgRXZlbnRUaWxlQ29udHJvbGxlciBleHRlbmRzIE1lbnVUaWxlU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9vbGRPcGFjaXR5OiBudW1iZXI7XHJcblxyXG4gICAgcHVibGljIG9wYWNpdHk6IG51bWJlciA9IDAuNTc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXHJcbiAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlLFxyXG4gICAgICBwcml2YXRlIHBpcFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlOiBJVGlsZUNvbmZpZ1NlcnZpY2VcclxuICAgICkge1xyXG4gICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xyXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubWVudSkgdGhpcy5tZW51ID0gXy51bmlvbih0aGlzLm1lbnUsIHRoaXMub3B0aW9ucy5tZW51KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5tZW51LnB1c2goe1xyXG4gICAgICAgIHRpdGxlOiAnQ29uZmlndXJhdGUnLFxyXG4gICAgICAgIGNsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLm9uQ29uZmlnQ2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9yIHx8ICdncmF5JztcclxuICAgICAgdGhpcy5vcGFjaXR5ID0gdGhpcy5vcHRpb25zLm9wYWNpdHkgfHwgdGhpcy5vcGFjaXR5O1xyXG5cclxuICAgICAgdGhpcy5kcmF3SW1hZ2UoKTtcclxuXHJcbiAgICAgIC8vIFRPRE8gaXQgZG9lc24ndCB3b3JrXHJcbiAgICAgICRzY29wZS4kd2F0Y2goKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiAkZWxlbWVudC5pcygnOnZpc2libGUnKTtcclxuICAgICAgfSwgKG5ld1ZhbCkgPT4ge1xyXG4gICAgICAgIHRoaXMuZHJhd0ltYWdlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZHJhd0ltYWdlKCkge1xyXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmltYWdlKSB7XHJcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLm9uSW1hZ2VMb2FkKHRoaXMuJGVsZW1lbnQuZmluZCgnaW1nJykpO1xyXG4gICAgICAgIH0sIDUwMCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQ29uZmlnQ2xpY2soKSB7XHJcbiAgICAgIHRoaXMuX29sZE9wYWNpdHkgPSBfLmNsb25lKHRoaXMub3BhY2l0eSk7XHJcbiAgICAgIHRoaXMucGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2Uuc2hvdyh7XHJcbiAgICAgICAgZGlhbG9nQ2xhc3M6ICdwaXAtY2FsZW5kYXItY29uZmlnJyxcclxuICAgICAgICBsb2NhbHM6IHtcclxuICAgICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLFxyXG4gICAgICAgICAgc2l6ZTogdGhpcy5vcHRpb25zLnNpemUgfHwge1xyXG4gICAgICAgICAgICBjb2xTcGFuOiAxLFxyXG4gICAgICAgICAgICByb3dTcGFuOiAxXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZGF0ZTogdGhpcy5vcHRpb25zLmRhdGUsXHJcbiAgICAgICAgICB0aXRsZTogdGhpcy5vcHRpb25zLnRpdGxlLFxyXG4gICAgICAgICAgdGV4dDogdGhpcy5vcHRpb25zLnRleHQsXHJcbiAgICAgICAgICBvcGFjaXR5OiB0aGlzLm9wYWNpdHksXHJcbiAgICAgICAgICBvbk9wYWNpdHl0ZXN0OiAob3BhY2l0eSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9wYWNpdHkgPSBvcGFjaXR5O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXh0ZW5zaW9uVXJsOiAnZXZlbnRfdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCdcclxuICAgICAgfSwgKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgdGhpcy5jaGFuZ2VTaXplKHJlc3VsdC5zaXplKTtcclxuXHJcbiAgICAgICAgdGhpcy5jb2xvciA9IHJlc3VsdC5jb2xvcjtcclxuICAgICAgICB0aGlzLm9wdGlvbnMuY29sb3IgPSByZXN1bHQuY29sb3I7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLmRhdGUgPSByZXN1bHQuZGF0ZTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMudGl0bGUgPSByZXN1bHQudGl0bGU7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnRleHQgPSByZXN1bHQudGV4dDtcclxuICAgICAgICB0aGlzLm9wdGlvbnMub3BhY2l0eSA9IHJlc3VsdC5vcGFjaXR5O1xyXG4gICAgICB9LCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gdGhpcy5fb2xkT3BhY2l0eTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkltYWdlTG9hZChpbWFnZSkge1xyXG4gICAgICB0aGlzLnNldEltYWdlTWFyZ2luQ1NTKHRoaXMuJGVsZW1lbnQucGFyZW50KCksIGltYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2hhbmdlU2l6ZShwYXJhbXMpIHtcclxuICAgICAgdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9IHBhcmFtcy5zaXplWDtcclxuICAgICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcclxuXHJcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaW1hZ2UpIHtcclxuICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIHRoaXMuc2V0SW1hZ2VNYXJnaW5DU1ModGhpcy4kZWxlbWVudC5wYXJlbnQoKSwgdGhpcy4kZWxlbWVudC5maW5kKCdpbWcnKSk7XHJcbiAgICAgICAgfSwgNTAwKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIExhdGVyIHJlcGxhY2UgYnkgcGlwSW1hZ2VVdGlscyBzZXZpY2UncyBmdW5jdGlvblxyXG4gICAgcHJpdmF0ZSBzZXRJbWFnZU1hcmdpbkNTUygkZWxlbWVudCwgaW1hZ2UpIHtcclxuICAgICAgbGV0XHJcbiAgICAgICAgY29udGFpbmVyV2lkdGggPSAkZWxlbWVudC53aWR0aCA/ICRlbGVtZW50LndpZHRoKCkgOiAkZWxlbWVudC5jbGllbnRXaWR0aCwgLy8gfHwgODAsXHJcbiAgICAgICAgY29udGFpbmVySGVpZ2h0ID0gJGVsZW1lbnQuaGVpZ2h0ID8gJGVsZW1lbnQuaGVpZ2h0KCkgOiAkZWxlbWVudC5jbGllbnRIZWlnaHQsIC8vIHx8IDgwLFxyXG4gICAgICAgIGltYWdlV2lkdGggPSBpbWFnZVswXS5uYXR1cmFsV2lkdGggfHwgaW1hZ2Uud2lkdGgsXHJcbiAgICAgICAgaW1hZ2VIZWlnaHQgPSBpbWFnZVswXS5uYXR1cmFsSGVpZ2h0IHx8IGltYWdlLmhlaWdodCxcclxuICAgICAgICBtYXJnaW4gPSAwLFxyXG4gICAgICAgIGNzc1BhcmFtcyA9IHt9O1xyXG5cclxuICAgICAgaWYgKChpbWFnZVdpZHRoIC8gY29udGFpbmVyV2lkdGgpID4gKGltYWdlSGVpZ2h0IC8gY29udGFpbmVySGVpZ2h0KSkge1xyXG4gICAgICAgIG1hcmdpbiA9IC0oKGltYWdlV2lkdGggLyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lckhlaWdodCAtIGNvbnRhaW5lcldpZHRoKSAvIDIpO1xyXG4gICAgICAgIGNzc1BhcmFtc1snbWFyZ2luLWxlZnQnXSA9ICcnICsgbWFyZ2luICsgJ3B4JztcclxuICAgICAgICBjc3NQYXJhbXNbJ2hlaWdodCddID0gJycgKyBjb250YWluZXJIZWlnaHQgKyAncHgnOyAvLycxMDAlJztcclxuICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGltYWdlV2lkdGggKiBjb250YWluZXJIZWlnaHQgLyBpbWFnZUhlaWdodCArICdweCc7IC8vJzEwMCUnO1xyXG4gICAgICAgIGNzc1BhcmFtc1snbWFyZ2luLXRvcCddID0gJyc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbWFyZ2luID0gLSgoaW1hZ2VIZWlnaHQgLyBpbWFnZVdpZHRoICogY29udGFpbmVyV2lkdGggLSBjb250YWluZXJIZWlnaHQpIC8gMik7XHJcbiAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tdG9wJ10gPSAnJyArIG1hcmdpbiArICdweCc7XHJcbiAgICAgICAgY3NzUGFyYW1zWydoZWlnaHQnXSA9ICcnICsgaW1hZ2VIZWlnaHQgKiBjb250YWluZXJXaWR0aCAvIGltYWdlV2lkdGggKyAncHgnOyAvLycxMDAlJztcclxuICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGNvbnRhaW5lcldpZHRoICsgJ3B4JzsgLy8nMTAwJSc7XHJcbiAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tbGVmdCddID0gJyc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGltYWdlLmNzcyhjc3NQYXJhbXMpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIGNvbnN0IEV2ZW50VGlsZTogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XHJcbiAgICBiaW5kaW5nczoge1xyXG4gICAgICBvcHRpb25zOiAnPXBpcE9wdGlvbnMnXHJcbiAgICB9LFxyXG4gICAgY29udHJvbGxlcjogRXZlbnRUaWxlQ29udHJvbGxlcixcclxuICAgIHRlbXBsYXRlVXJsOiAnZXZlbnRfdGlsZS9FdmVudFRpbGUuaHRtbCdcclxuICB9XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXHJcbiAgICAuY29tcG9uZW50KCdwaXBFdmVudFRpbGUnLCBFdmVudFRpbGUpO1xyXG59IiwiLy8gSW1wb3J0IHNlcnZpY2VzXHJcbmltcG9ydCAnLi90aWxlX2dyb3VwL2luZGV4JztcclxuaW1wb3J0ICcuL2RyYWdnYWJsZSc7XHJcblxyXG4vLyBJbXBvcnQgdGlsZSBzZXJ2aWNlc1xyXG5pbXBvcnQgJy4vbWVudV90aWxlJztcclxuXHJcbi8vIEltcG9ydCBkaWFsb2dzXHJcbmltcG9ydCAnLi9hZGRfdGlsZV9kaWFsb2cnO1xyXG5pbXBvcnQgJy4vY29uZmlnX3RpbGVfZGlhbG9nJztcclxuXHJcbmFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQnLCBbXHJcbiAgLy8gU2VydmljZXNcclxuICAncGlwRHJhZ2dhYmxlVGlsZXMnLFxyXG4gICdwaXBEcmFnZ2FibGVUaWxlc0dyb3VwJyxcclxuICAvLyBUaWxlIHNlcnZpY2VzXHJcbiAgJ3BpcE1lbnVUaWxlJyxcclxuICAvLyBEaWFsb2dzXHJcbiAgJ3BpcENvbmZpZ0Rhc2hib2FyZFRpbGVEaWFsb2cnLFxyXG4gICdwaXBBZGREYXNoYm9hcmRUaWxlRGlhbG9nJyxcclxuICAvL1RlbXBsYXRlc1xyXG4gICdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyxcclxuICAvLyBFeHRlcm5hbCBwaXAgbW9kdWxlc1xyXG4gICdwaXBMYXlvdXQnLFxyXG4gICdwaXBMb2NhdGlvbnMnLFxyXG4gICdwaXBEYXRlVGltZScsXHJcbiAgJ3BpcENoYXJ0cycsXHJcbiAgJ3BpcFRyYW5zbGF0ZScsXHJcbiAgJ3BpcENvbnRyb2xzJyxcclxuICAncGlwQnV0dG9ucydcclxuXSk7XHJcblxyXG4vLyBJbXBvcnQgdXRpbGl0eSBcclxuaW1wb3J0ICcuL3V0aWxpdHkvVGlsZVRlbXBsYXRlVXRpbGl0eSc7XHJcbi8vIEltcG9ydCB0aWxlc1xyXG5pbXBvcnQgJy4vY29tbW9uX3RpbGUvVGlsZSc7XHJcbmltcG9ydCAnLi9jYWxlbmRhcl90aWxlL0NhbGVuZGFyVGlsZSc7XHJcbmltcG9ydCAnLi9ldmVudF90aWxlL0V2ZW50VGlsZSc7XHJcbmltcG9ydCAnLi9ub3RlX3RpbGUvTm90ZVRpbGUnO1xyXG5pbXBvcnQgJy4vcGljdHVyZV9zbGlkZXJfdGlsZS9QaWN0dXJlU2xpZGVyVGlsZSc7XHJcbmltcG9ydCAnLi9wb3NpdGlvbl90aWxlL1Bvc2l0aW9uVGlsZSc7XHJcbmltcG9ydCAnLi9zdGF0aXN0aWNzX3RpbGUvU3RhdGlzdGljc1RpbGUnO1xyXG4vLyBJbXBvcnQgY29tbW9uIGNvbXBvbmVudFxyXG5pbXBvcnQgJy4vZGFzaGJvYXJkL0Rhc2hib2FyZCc7XHJcbiIsIntcclxuICBjb25zdCBUaWxlTWVudSA9ICgpOm5nLklEaXJlY3RpdmUgPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVzdHJpY3Q6ICdFQScsXHJcbiAgICAgIHRlbXBsYXRlVXJsOiAnbWVudV90aWxlL01lbnVUaWxlLmh0bWwnXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwTWVudVRpbGUnKVxyXG4gICAgLmRpcmVjdGl2ZSgncGlwVGlsZU1lbnUnLCBUaWxlTWVudSk7XHJcbn0iLCJpbXBvcnQgeyBEYXNoYm9hcmRUaWxlIH0gZnJvbSAnLi4vY29tbW9uX3RpbGUvVGlsZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgTWVudVRpbGVTZXJ2aWNlIGV4dGVuZHMgRGFzaGJvYXJkVGlsZSB7XHJcbiAgcHVibGljIG1lbnU6IGFueSA9IFt7XHJcbiAgICB0aXRsZTogJ0NoYW5nZSBTaXplJyxcclxuICAgIGFjdGlvbjogYW5ndWxhci5ub29wLFxyXG4gICAgc3VibWVudTogW3tcclxuICAgICAgICB0aXRsZTogJzEgeCAxJyxcclxuICAgICAgICBhY3Rpb246ICdjaGFuZ2VTaXplJyxcclxuICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgIHNpemVYOiAxLFxyXG4gICAgICAgICAgc2l6ZVk6IDFcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICB0aXRsZTogJzIgeCAxJyxcclxuICAgICAgICBhY3Rpb246ICdjaGFuZ2VTaXplJyxcclxuICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgIHNpemVYOiAyLFxyXG4gICAgICAgICAgc2l6ZVk6IDFcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICB0aXRsZTogJzIgeCAyJyxcclxuICAgICAgICBhY3Rpb246ICdjaGFuZ2VTaXplJyxcclxuICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgIHNpemVYOiAyLFxyXG4gICAgICAgICAgc2l6ZVk6IDJcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9XTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjYWxsQWN0aW9uKGFjdGlvbk5hbWUsIHBhcmFtcywgaXRlbSkge1xyXG4gICAgaWYgKHRoaXNbYWN0aW9uTmFtZV0pIHtcclxuICAgICAgdGhpc1thY3Rpb25OYW1lXS5jYWxsKHRoaXMsIHBhcmFtcyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGl0ZW1bJ2NsaWNrJ10pIHtcclxuICAgICAgaXRlbVsnY2xpY2snXS5jYWxsKGl0ZW0sIHBhcmFtcywgdGhpcyk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGNoYW5nZVNpemUocGFyYW1zKSB7XHJcbiAgICB0aGlzLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID0gcGFyYW1zLnNpemVYO1xyXG4gICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcclxuICB9O1xyXG59XHJcblxyXG57XHJcbiAgY2xhc3MgTWVudVRpbGVQcm92aWRlciB7XHJcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBNZW51VGlsZVNlcnZpY2U7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAgIHB1YmxpYyAkZ2V0KCkge1xyXG4gICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxyXG4gICAgICAgIHRoaXMuX3NlcnZpY2UgPSBuZXcgTWVudVRpbGVTZXJ2aWNlKCk7XHJcblxyXG4gICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcE1lbnVUaWxlJylcclxuICAgIC5wcm92aWRlcigncGlwTWVudVRpbGUnLCBNZW51VGlsZVByb3ZpZGVyKTtcclxufSIsImFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcE1lbnVUaWxlJywgW10pO1xyXG5cclxuaW1wb3J0ICcuL01lbnVUaWxlRGlyZWN0aXZlJztcclxuaW1wb3J0ICcuL01lbnVUaWxlU2VydmljZSc7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL01lbnVUaWxlU2VydmljZSc7IiwiaW1wb3J0IHtcclxuICBNZW51VGlsZVNlcnZpY2VcclxufSBmcm9tICcuLi9tZW51X3RpbGUvTWVudVRpbGVTZXJ2aWNlJztcclxuaW1wb3J0IHtcclxuICBJVGlsZUNvbmZpZ1NlcnZpY2VcclxufSBmcm9tICcuLi9jb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nU2VydmljZSc7XHJcblxyXG57XHJcbiAgY2xhc3MgTm90ZVRpbGVDb250cm9sbGVyIGV4dGVuZHMgTWVudVRpbGVTZXJ2aWNlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgcHJpdmF0ZSBwaXBUaWxlQ29uZmlnRGlhbG9nU2VydmljZTogSVRpbGVDb25maWdTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgc3VwZXIoKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLm1lbnUgPSB0aGlzLm9wdGlvbnMubWVudSA/IF8udW5pb24odGhpcy5tZW51LCB0aGlzLm9wdGlvbnMubWVudSkgOiB0aGlzLm1lbnU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMubWVudS5wdXNoKHtcclxuICAgICAgICB0aXRsZTogJ0NvbmZpZ3VyYXRlJyxcclxuICAgICAgICBjbGljazogKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5vbkNvbmZpZ0NsaWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvciB8fCAnb3JhbmdlJztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQ29uZmlnQ2xpY2soKSB7XHJcbiAgICAgIHRoaXMucGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2Uuc2hvdyh7XHJcbiAgICAgICAgbG9jYWxzOiB7XHJcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvcixcclxuICAgICAgICAgIHNpemU6IHRoaXMub3B0aW9ucy5zaXplLFxyXG4gICAgICAgICAgdGl0bGU6IHRoaXMub3B0aW9ucy50aXRsZSxcclxuICAgICAgICAgIHRleHQ6IHRoaXMub3B0aW9ucy50ZXh0LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXh0ZW5zaW9uVXJsOiAnbm90ZV90aWxlL0NvbmZpZ0RpYWxvZ0V4dGVuc2lvbi5odG1sJ1xyXG4gICAgICB9LCAocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgICB0aGlzLmNvbG9yID0gcmVzdWx0LmNvbG9yO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5jb2xvciA9IHJlc3VsdC5jb2xvcjtcclxuICAgICAgICB0aGlzLmNoYW5nZVNpemUocmVzdWx0LnNpemUpO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy50ZXh0ID0gcmVzdWx0LnRleHQ7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zLnRpdGxlID0gcmVzdWx0LnRpdGxlO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IE5vdGVUaWxlOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcclxuICAgIGJpbmRpbmdzOiB7XHJcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiBOb3RlVGlsZUNvbnRyb2xsZXIsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ25vdGVfdGlsZS9Ob3RlVGlsZS5odG1sJ1xyXG4gIH1cclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcclxuICAgIC5jb21wb25lbnQoJ3BpcE5vdGVUaWxlJywgTm90ZVRpbGUpO1xyXG59IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaW1wb3J0IHtcclxuICBNZW51VGlsZVNlcnZpY2VcclxufSBmcm9tICcuLi9tZW51X3RpbGUvTWVudVRpbGVTZXJ2aWNlJztcclxuaW1wb3J0IHtcclxuICBJVGlsZUNvbmZpZ1NlcnZpY2VcclxufSBmcm9tICcuLi9jb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nU2VydmljZSc7XHJcbmltcG9ydCB7XHJcbiAgSVRpbGVUZW1wbGF0ZVNlcnZpY2VcclxufSBmcm9tICcuLi91dGlsaXR5L1RpbGVUZW1wbGF0ZVV0aWxpdHknO1xyXG5cclxue1xyXG4gIGNsYXNzIFBpY3R1cmVTbGlkZXJDb250cm9sbGVyIGV4dGVuZHMgTWVudVRpbGVTZXJ2aWNlIHtcclxuICAgIHB1YmxpYyBhbmltYXRpb25UeXBlOiBzdHJpbmcgPSAnZmFkaW5nJztcclxuICAgIHB1YmxpYyBhbmltYXRpb25JbnRlcnZhbDogbnVtYmVyID0gNTAwMDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgcHJpdmF0ZSAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLFxyXG4gICAgICBwcml2YXRlICRlbGVtZW50OiBhbnksXHJcbiAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlLFxyXG4gICAgICBwcml2YXRlIHBpcFRpbGVUZW1wbGF0ZTogSVRpbGVUZW1wbGF0ZVNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuYW5pbWF0aW9uVHlwZSA9IHRoaXMub3B0aW9ucy5hbmltYXRpb25UeXBlIHx8IHRoaXMuYW5pbWF0aW9uVHlwZTtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkludGVydmFsID0gdGhpcy5vcHRpb25zLmFuaW1hdGlvbkludGVydmFsIHx8IHRoaXMuYW5pbWF0aW9uSW50ZXJ2YWw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25JbWFnZUxvYWQoJGV2ZW50KSB7XHJcbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMucGlwVGlsZVRlbXBsYXRlLnNldEltYWdlTWFyZ2luQ1NTKHRoaXMuJGVsZW1lbnQucGFyZW50KCksICRldmVudC50YXJnZXQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2hhbmdlU2l6ZShwYXJhbXMpIHtcclxuICAgICAgdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9IHBhcmFtcy5zaXplWDtcclxuICAgICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcclxuXHJcbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIF8uZWFjaCh0aGlzLiRlbGVtZW50LmZpbmQoJ2ltZycpLCAoaW1hZ2UpID0+IHtcclxuICAgICAgICAgIHRoaXMucGlwVGlsZVRlbXBsYXRlLnNldEltYWdlTWFyZ2luQ1NTKHRoaXMuJGVsZW1lbnQucGFyZW50KCksIGltYWdlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSwgNTAwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IFBpY3R1cmVTbGlkZXJUaWxlOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcclxuICAgIGJpbmRpbmdzOiB7XHJcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiBQaWN0dXJlU2xpZGVyQ29udHJvbGxlcixcclxuICAgIHRlbXBsYXRlVXJsOiAncGljdHVyZV9zbGlkZXJfdGlsZS9QaWN0dXJlU2xpZGVyVGlsZS5odG1sJ1xyXG4gIH1cclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcclxuICAgIC5jb21wb25lbnQoJ3BpcFBpY3R1cmVTbGlkZXJUaWxlJywgUGljdHVyZVNsaWRlclRpbGUpO1xyXG59IiwiaW1wb3J0IHtcclxuICBNZW51VGlsZVNlcnZpY2VcclxufSBmcm9tICcuLi9tZW51X3RpbGUvTWVudVRpbGVTZXJ2aWNlJztcclxuaW1wb3J0IHtcclxuICBJVGlsZUNvbmZpZ1NlcnZpY2VcclxufSBmcm9tICcuLi9jb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nU2VydmljZSc7XHJcblxyXG57XHJcbiAgY2xhc3MgUG9zaXRpb25UaWxlQ29udHJvbGxlciBleHRlbmRzIE1lbnVUaWxlU2VydmljZSB7XHJcbiAgICBwdWJsaWMgc2hvd1Bvc2l0aW9uOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcclxuICAgICAgcHJpdmF0ZSAkdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2UsXHJcbiAgICAgIHByaXZhdGUgJGVsZW1lbnQ6IGFueSxcclxuICAgICAgcHJpdmF0ZSBwaXBUaWxlQ29uZmlnRGlhbG9nU2VydmljZTogSVRpbGVDb25maWdTZXJ2aWNlLFxyXG4gICAgICBwcml2YXRlIHBpcExvY2F0aW9uRWRpdERpYWxvZzogYW55LFxyXG4gICAgKSB7XHJcbiAgICAgIHN1cGVyKCk7XHJcblxyXG4gICAgICBpZiAodGhpcy5vcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tZW51KSB0aGlzLm1lbnUgPSBfLnVuaW9uKHRoaXMubWVudSwgdGhpcy5vcHRpb25zLm1lbnUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLm1lbnUucHVzaCh7XHJcbiAgICAgICAgdGl0bGU6ICdDb25maWd1cmF0ZScsXHJcbiAgICAgICAgY2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgIHRoaXMub25Db25maWdDbGljaygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMubWVudS5wdXNoKHtcclxuICAgICAgICB0aXRsZTogJ0NoYW5nZSBsb2NhdGlvbicsXHJcbiAgICAgICAgY2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgIHRoaXMub3BlbkxvY2F0aW9uRWRpdERpYWxvZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLm9wdGlvbnMubG9jYXRpb24gPSB0aGlzLm9wdGlvbnMubG9jYXRpb24gfHwgdGhpcy5vcHRpb25zLnBvc2l0aW9uO1xyXG5cclxuICAgICAgJHNjb3BlLiR3YXRjaCgnJGN0cmwub3B0aW9ucy5sb2NhdGlvbicsICgpID0+IHtcclxuICAgICAgICB0aGlzLnJlRHJhd1Bvc2l0aW9uKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gVE9ETyBpdCBkb2Vzbid0IHdvcmtcclxuICAgICAgJHNjb3BlLiR3YXRjaCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICRlbGVtZW50LmlzKCc6dmlzaWJsZScpO1xyXG4gICAgICB9LCAobmV3VmFsKSA9PiB7XHJcbiAgICAgICAgaWYgKG5ld1ZhbCA9PSB0cnVlKSB0aGlzLnJlRHJhd1Bvc2l0aW9uKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25Db25maWdDbGljaygpIHtcclxuICAgICAgdGhpcy5waXBUaWxlQ29uZmlnRGlhbG9nU2VydmljZS5zaG93KHtcclxuICAgICAgICBkaWFsb2dDbGFzczogJ3BpcC1wb3NpdGlvbi1jb25maWcnLFxyXG4gICAgICAgIGxvY2Fsczoge1xyXG4gICAgICAgICAgc2l6ZTogdGhpcy5vcHRpb25zLnNpemUsXHJcbiAgICAgICAgICBsb2NhdGlvbk5hbWU6IHRoaXMub3B0aW9ucy5sb2NhdGlvbk5hbWUsXHJcbiAgICAgICAgICBoaWRlQ29sb3JzOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXh0ZW5zaW9uVXJsOiAncG9zaXRpb25fdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCdcclxuICAgICAgfSwgKHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgdGhpcy5jaGFuZ2VTaXplKHJlc3VsdC5zaXplKTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMubG9jYXRpb25OYW1lID0gcmVzdWx0LmxvY2F0aW9uTmFtZTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGNoYW5nZVNpemUocGFyYW1zKSB7XHJcbiAgICAgIHRoaXMub3B0aW9ucy5zaXplLmNvbFNwYW4gPSBwYXJhbXMuc2l6ZVg7XHJcbiAgICAgIHRoaXMub3B0aW9ucy5zaXplLnJvd1NwYW4gPSBwYXJhbXMuc2l6ZVk7XHJcblxyXG4gICAgICB0aGlzLnJlRHJhd1Bvc2l0aW9uKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9wZW5Mb2NhdGlvbkVkaXREaWFsb2coKSB7XHJcbiAgICAgIHRoaXMucGlwTG9jYXRpb25FZGl0RGlhbG9nLnNob3coe1xyXG4gICAgICAgIGxvY2F0aW9uTmFtZTogdGhpcy5vcHRpb25zLmxvY2F0aW9uTmFtZSxcclxuICAgICAgICBsb2NhdGlvblBvczogdGhpcy5vcHRpb25zLmxvY2F0aW9uXHJcbiAgICAgIH0sIChuZXdQb3NpdGlvbikgPT4ge1xyXG4gICAgICAgIGlmIChuZXdQb3NpdGlvbikge1xyXG4gICAgICAgICAgdGhpcy5vcHRpb25zLmxvY2F0aW9uID0gbmV3UG9zaXRpb24ubG9jYXRpb247XHJcbiAgICAgICAgICB0aGlzLm9wdGlvbnMubG9jYXRpb25OYW1lID0gbmV3UG9zaXRpb24ubG9jYXRpb05hbWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlRHJhd1Bvc2l0aW9uKCkge1xyXG4gICAgICB0aGlzLnNob3dQb3NpdGlvbiA9IGZhbHNlO1xyXG4gICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLnNob3dQb3NpdGlvbiA9IHRydWU7XHJcbiAgICAgIH0sIDUwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBjb25zdCBQb3NpdGlvblRpbGU6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xyXG4gICAgYmluZGluZ3M6IHtcclxuICAgICAgb3B0aW9uczogJz1waXBPcHRpb25zJ1xyXG4gICAgfSxcclxuICAgIGNvbnRyb2xsZXI6IFBvc2l0aW9uVGlsZUNvbnRyb2xsZXIsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ3Bvc2l0aW9uX3RpbGUvUG9zaXRpb25UaWxlLmh0bWwnXHJcbiAgfVxyXG5cclxuICBhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBEYXNoYm9hcmQnKVxyXG4gICAgLmNvbXBvbmVudCgncGlwUG9zaXRpb25UaWxlJywgUG9zaXRpb25UaWxlKTtcclxufSIsImltcG9ydCB7XHJcbiAgTWVudVRpbGVTZXJ2aWNlXHJcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XHJcblxyXG57XHJcbiAgY29uc3QgU01BTExfQ0hBUlQ6IG51bWJlciA9IDcwO1xyXG4gIGNvbnN0IEJJR19DSEFSVDogbnVtYmVyID0gMjUwO1xyXG5cclxuICBjbGFzcyBTdGF0aXN0aWNzVGlsZUNvbnRyb2xsZXIgZXh0ZW5kcyBNZW51VGlsZVNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfJHNjb3BlOiBhbmd1bGFyLklTY29wZTtcclxuICAgIHByaXZhdGUgXyR0aW1lb3V0OiBhbmd1bGFyLklUaW1lb3V0U2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgcmVzZXQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHB1YmxpYyBjaGFydFNpemU6IG51bWJlciA9IFNNQUxMX0NIQVJUO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLFxyXG4gICAgICAkdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICBzdXBlcigpO1xyXG4gICAgICB0aGlzLl8kc2NvcGUgPSAkc2NvcGU7XHJcbiAgICAgIHRoaXMuXyR0aW1lb3V0ID0gJHRpbWVvdXQ7XHJcblxyXG4gICAgICBpZiAodGhpcy5vcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5tZW51ID0gdGhpcy5vcHRpb25zLm1lbnUgPyBfLnVuaW9uKHRoaXMubWVudSwgdGhpcy5vcHRpb25zLm1lbnUpIDogdGhpcy5tZW51O1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnNldENoYXJ0U2l6ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjaGFuZ2VTaXplKHBhcmFtcykge1xyXG4gICAgICB0aGlzLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID0gcGFyYW1zLnNpemVYO1xyXG4gICAgICB0aGlzLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID0gcGFyYW1zLnNpemVZO1xyXG5cclxuICAgICAgdGhpcy5yZXNldCA9IHRydWU7XHJcbiAgICAgIHRoaXMuc2V0Q2hhcnRTaXplKCk7XHJcbiAgICAgIHRoaXMuXyR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLnJlc2V0ID0gZmFsc2U7XHJcbiAgICAgIH0sIDUwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRDaGFydFNpemUoKSB7XHJcbiAgICAgIHRoaXMuY2hhcnRTaXplID0gdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmIHRoaXMub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiA/IEJJR19DSEFSVCA6IFNNQUxMX0NIQVJUO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIGNvbnN0IFN0YXRpc3RpY3NUaWxlOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcclxuICAgIGJpbmRpbmdzOiB7XHJcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiBTdGF0aXN0aWNzVGlsZUNvbnRyb2xsZXIsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ3N0YXRpc3RpY3NfdGlsZS9TdGF0aXN0aWNzVGlsZS5odG1sJ1xyXG4gIH1cclxuXHJcbiAgYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcclxuICAgIC5jb21wb25lbnQoJ3BpcFN0YXRpc3RpY3NUaWxlJywgU3RhdGlzdGljc1RpbGUpO1xyXG59Iiwie1xyXG4gIGludGVyZmFjZSBEcmFnZ2FibGVUaWxlQXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcclxuICAgIHBpcERyYWdnYWJsZVRpbGVzOiBhbnk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBEcmFnZ2FibGVUaWxlTGluayhcclxuICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgJGVsZW06IEpRdWVyeSxcclxuICAgICRhdHRyOiBEcmFnZ2FibGVUaWxlQXR0cmlidXRlc1xyXG4gICkge1xyXG4gICAgY29uc3QgZG9jRnJhZyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcclxuICAgICAgZ3JvdXAgPSAkc2NvcGUuJGV2YWwoJGF0dHIucGlwRHJhZ2dhYmxlVGlsZXMpO1xyXG5cclxuICAgIGdyb3VwLmZvckVhY2goZnVuY3Rpb24gKHRpbGUpIHtcclxuICAgICAgY29uc3QgdHBsID0gd3JhcENvbXBvbmVudCh0aWxlLmdldENvbXBpbGVkVGVtcGxhdGUoKSk7XHJcbiAgICAgIGRvY0ZyYWcuYXBwZW5kQ2hpbGQodHBsKTtcclxuICAgIH0pO1xyXG5cclxuICAgICRlbGVtLmFwcGVuZChkb2NGcmFnKTtcclxuXHJcbiAgICBmdW5jdGlvbiB3cmFwQ29tcG9uZW50KGVsZW0pIHtcclxuICAgICAgcmV0dXJuICQoJzxkaXY+JylcclxuICAgICAgICAuYWRkQ2xhc3MoJ3BpcC1kcmFnZ2FibGUtdGlsZScpXHJcbiAgICAgICAgLmFwcGVuZChlbGVtKVxyXG4gICAgICAgIC5nZXQoMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBEcmFnZ2FibGVUaWxlcygpOiBuZy5JRGlyZWN0aXZlIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgIGxpbms6IGZ1bmN0aW9uKFxyXG4gICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgICAgICRlbGVtOiBKUXVlcnksXHJcbiAgICAgICAgJGF0dHI6IERyYWdnYWJsZVRpbGVBdHRyaWJ1dGVzXHJcbiAgICAgICkge1xyXG4gICAgICAgICAgbmV3IERyYWdnYWJsZVRpbGVMaW5rKCRzY29wZSwgJGVsZW0sICRhdHRyKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcERyYWdnYWJsZVRpbGVzR3JvdXAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncGlwRHJhZ2dhYmxlVGlsZXMnLCBEcmFnZ2FibGVUaWxlcyk7XHJcbn0iLCJleHBvcnQgaW50ZXJmYWNlIFRpbGVzR3JpZENvbnN0cnVjdG9yIHtcclxuICBuZXcodGlsZXMsIG9wdGlvbnMsIGNvbHVtbnMsIGVsZW0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gSVRpbGVzR3JpZENvbnN0cnVjdG9yKGNvbnN0cnVjdG9yOiBUaWxlc0dyaWRDb25zdHJ1Y3RvciwgdGlsZXMsIG9wdGlvbnMsIGNvbHVtbnMsIGVsZW0pOiBJVGlsZXNHcmlkU2VydmljZSB7XHJcbiAgcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvcih0aWxlcywgb3B0aW9ucywgY29sdW1ucywgZWxlbSk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVRpbGVzR3JpZFNlcnZpY2Uge1xyXG4gIHRpbGVzOiBhbnk7XHJcbiAgb3B0czogYW55O1xyXG4gIGNvbHVtbnM6IGFueTtcclxuICBlbGVtOiBhbnk7XHJcbiAgZ3JpZENlbGxzOiBhbnk7XHJcbiAgaW5saW5lOiBib29sZWFuO1xyXG4gIGlzTW9iaWxlTGF5b3V0OiBib29sZWFuO1xyXG5cclxuICBhZGRUaWxlKHRpbGUpOiBhbnk7XHJcbiAgZ2V0Q2VsbEJ5UG9zaXRpb24ocm93LCBjb2wpOiBhbnk7XHJcbiAgZ2V0Q2VsbHMocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pOiBhbnk7XHJcbiAgZ2V0QXZhaWxhYmxlQ2VsbHNEZXNrdG9wKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55O1xyXG4gIGdldENlbGwoc3JjLCBiYXNpY1JvdywgYmFzaWNDb2wsIGNvbHVtbnMpOiBhbnk7XHJcbiAgZ2V0QXZhaWxhYmxlQ2VsbHNNb2JpbGUocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pOiBhbnk7XHJcbiAgZ2V0QmFzaWNSb3cocHJldkNlbGwpOiBhbnk7XHJcbiAgaXNDZWxsRnJlZShyb3csIGNvbCk6IGFueTtcclxuICBnZXRDZWxsSW5kZXgoc3JjQ2VsbCk6IGFueTtcclxuICByZXNlcnZlQ2VsbHMoc3RhcnQsIGVuZCwgZWxlbSk6IHZvaWQ7XHJcbiAgY2xlYXJFbGVtZW50cygpOiB2b2lkO1xyXG4gIHNldEF2YWlsYWJsZUNvbHVtbnMoY29sdW1ucyk6IGFueTtcclxuICBnZW5lcmF0ZUdyaWQoc2luZ2xlVGlsZVdpZHRoID8gKTogYW55O1xyXG4gIHNldFRpbGVzRGltZW5zaW9ucyhvbmx5UG9zaXRpb24sIGRyYWdnZWRUaWxlKTogYW55O1xyXG4gIGNhbGNDb250YWluZXJIZWlnaHQoKTogYW55O1xyXG4gIGdldFRpbGVCeU5vZGUobm9kZSk6IGFueTtcclxuICBnZXRUaWxlQnlDb29yZGluYXRlcyhjb29yZHMsIGRyYWdnZWRUaWxlKTogYW55O1xyXG4gIGdldFRpbGVJbmRleCh0aWxlKTogYW55O1xyXG4gIHN3YXBUaWxlcyhtb3ZlZFRpbGUsIGJlZm9yZVRpbGUpOiBhbnk7XHJcbiAgcmVtb3ZlVGlsZShyZW1vdmVUaWxlKTogYW55O1xyXG4gIHVwZGF0ZVRpbGVPcHRpb25zKG9wdHMpOiBhbnk7XHJcbn1cclxuXHJcbmNvbnN0IE1PQklMRV9MQVlPVVRfQ09MVU1OUyA9IDI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGlsZXNHcmlkU2VydmljZSBpbXBsZW1lbnRzIElUaWxlc0dyaWRTZXJ2aWNlIHtcclxuICBwdWJsaWMgdGlsZXM6IGFueTtcclxuICBwdWJsaWMgb3B0czogYW55O1xyXG4gIHB1YmxpYyBjb2x1bW5zOiBhbnk7XHJcbiAgcHVibGljIGVsZW06IGFueTtcclxuICBwdWJsaWMgZ3JpZENlbGxzOiBhbnkgPSBbXTtcclxuICBwdWJsaWMgaW5saW5lOiBib29sZWFuID0gZmFsc2U7XHJcbiAgcHVibGljIGlzTW9iaWxlTGF5b3V0OiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih0aWxlcywgb3B0aW9ucywgY29sdW1ucywgZWxlbSkge1xyXG4gICAgdGhpcy50aWxlcyA9IHRpbGVzO1xyXG4gICAgdGhpcy5vcHRzID0gb3B0aW9ucztcclxuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnMgfHwgMDsgLy8gYXZhaWxhYmxlIGNvbHVtbnMgaW4gYSByb3dcclxuICAgIHRoaXMuZWxlbSA9IGVsZW07XHJcbiAgICB0aGlzLmdyaWRDZWxscyA9IFtdO1xyXG4gICAgdGhpcy5pbmxpbmUgPSBvcHRpb25zLmlubGluZSB8fCBmYWxzZTtcclxuICAgIHRoaXMuaXNNb2JpbGVMYXlvdXQgPSBjb2x1bW5zID09PSBNT0JJTEVfTEFZT1VUX0NPTFVNTlM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkVGlsZSh0aWxlKTogYW55IHtcclxuICAgIHRoaXMudGlsZXMucHVzaCh0aWxlKTtcclxuICAgIGlmICh0aGlzLnRpbGVzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICB0aGlzLmdlbmVyYXRlR3JpZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRDZWxsQnlQb3NpdGlvbihyb3csIGNvbCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5ncmlkQ2VsbHNbcm93XVtjb2xdO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRDZWxscyhwcmV2Q2VsbCwgcm93U3BhbiwgY29sU3Bhbik6IGFueSB7XHJcbiAgICBpZiAodGhpcy5pc01vYmlsZUxheW91dCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5nZXRBdmFpbGFibGVDZWxsc01vYmlsZShwcmV2Q2VsbCwgcm93U3BhbiwgY29sU3Bhbik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5nZXRBdmFpbGFibGVDZWxsc0Rlc2t0b3AocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRBdmFpbGFibGVDZWxsc0Rlc2t0b3AocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pOiBhbnkge1xyXG4gICAgbGV0IGxlZnRDb3JuZXJDZWxsO1xyXG4gICAgbGV0IHJpZ2h0Q29ybmVyQ2VsbDtcclxuICAgIGNvbnN0IGJhc2ljQ29sID0gcHJldkNlbGwgJiYgcHJldkNlbGwuY29sIHx8IDA7XHJcbiAgICBjb25zdCBiYXNpY1JvdyA9IHRoaXMuZ2V0QmFzaWNSb3cocHJldkNlbGwpO1xyXG5cclxuICAgIC8vIFNtYWxsIHRpbGVcclxuICAgIGlmIChjb2xTcGFuID09PSAxICYmIHJvd1NwYW4gPT09IDEpIHtcclxuICAgICAgY29uc3QgZ3JpZENvcHkgPSB0aGlzLmdyaWRDZWxscy5zbGljZSgpO1xyXG5cclxuICAgICAgaWYgKCFwcmV2Q2VsbCkge1xyXG4gICAgICAgIGxlZnRDb3JuZXJDZWxsID0gZ3JpZENvcHlbMF1bMF07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGwoZ3JpZENvcHksIGJhc2ljUm93LCBiYXNpY0NvbCwgdGhpcy5jb2x1bW5zKTtcclxuXHJcbiAgICAgICAgaWYgKCFsZWZ0Q29ybmVyQ2VsbCkge1xyXG4gICAgICAgICAgY29uc3Qgcm93U2hpZnQgPSB0aGlzLmlzTW9iaWxlTGF5b3V0ID8gMSA6IDI7XHJcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3cgKyByb3dTaGlmdCwgMCwgdGhpcy5jb2x1bW5zKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBNZWRpdW0gdGlsZVxyXG4gICAgaWYgKGNvbFNwYW4gPT09IDIgJiYgcm93U3BhbiA9PT0gMSkge1xyXG4gICAgICBjb25zdCBwcmV2VGlsZVNpemUgPSBwcmV2Q2VsbCAmJiBwcmV2Q2VsbC5lbGVtLnNpemUgfHwgbnVsbDtcclxuXHJcbiAgICAgIGlmICghcHJldlRpbGVTaXplKSB7XHJcbiAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCk7XHJcbiAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wgKyAxKTtcclxuICAgICAgfSBlbHNlIGlmIChwcmV2VGlsZVNpemUuY29sU3BhbiA9PT0gMiAmJiBwcmV2VGlsZVNpemUucm93U3BhbiA9PT0gMikge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbHVtbnMgLSBiYXNpY0NvbCAtIDIgPiAwKSB7XHJcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMSk7XHJcbiAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAyLCAwKTtcclxuICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAyLCAxKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSBpZiAocHJldlRpbGVTaXplLmNvbFNwYW4gPT09IDIgJiYgcHJldlRpbGVTaXplLnJvd1NwYW4gPT09IDEpIHtcclxuICAgICAgICBpZiAocHJldkNlbGwucm93ICUgMiA9PT0gMCkge1xyXG4gICAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMSwgYmFzaWNDb2wgLSAxKTtcclxuICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAxLCBiYXNpY0NvbCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmICh0aGlzLmNvbHVtbnMgLSBiYXNpY0NvbCAtIDMgPj0gMCkge1xyXG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMSk7XHJcbiAgICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAyLCAwKTtcclxuICAgICAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDEpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChwcmV2VGlsZVNpemUuY29sU3BhbiA9PT0gMSAmJiBwcmV2VGlsZVNpemUucm93U3BhbiA9PT0gMSkge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbHVtbnMgLSBiYXNpY0NvbCAtIDMgPj0gMCkge1xyXG4gICAgICAgICAgaWYgKHRoaXMuaXNDZWxsRnJlZShiYXNpY1JvdywgYmFzaWNDb2wgKyAxKSkge1xyXG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMSk7XHJcbiAgICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XHJcbiAgICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDApO1xyXG4gICAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEJpZyB0aWxlXHJcbiAgICBpZiAoIXByZXZDZWxsICYmIHJvd1NwYW4gPT09IDIgJiYgY29sU3BhbiA9PT0gMikge1xyXG4gICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sKTtcclxuICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDEsIGJhc2ljQ29sICsgMSk7XHJcbiAgICB9IGVsc2UgaWYgKHJvd1NwYW4gPT09IDIgJiYgY29sU3BhbiA9PT0gMikge1xyXG4gICAgICBpZiAodGhpcy5jb2x1bW5zIC0gYmFzaWNDb2wgLSAyID4gMCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzQ2VsbEZyZWUoYmFzaWNSb3csIGJhc2ljQ29sICsgMSkpIHtcclxuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wgKyAxKTtcclxuICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAxLCBiYXNpY0NvbCArIDIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XHJcbiAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMSwgYmFzaWNDb2wgKyAzKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMiwgMCk7XHJcbiAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDMsIDEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RhcnQ6IGxlZnRDb3JuZXJDZWxsLFxyXG4gICAgICBlbmQ6IHJpZ2h0Q29ybmVyQ2VsbFxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgZ2V0Q2VsbChzcmMsIGJhc2ljUm93LCBiYXNpY0NvbCwgY29sdW1ucyk6IGFueSB7XHJcbiAgICBsZXQgY2VsbCwgY29sLCByb3c7XHJcblxyXG4gICAgaWYgKHRoaXMuaXNNb2JpbGVMYXlvdXQpIHtcclxuICAgICAgLy8gbW9iaWxlIGxheW91dFxyXG4gICAgICBmb3IgKGNvbCA9IGJhc2ljQ29sOyBjb2wgPCBjb2x1bW5zOyBjb2wrKykge1xyXG4gICAgICAgIGlmICghc3JjW2Jhc2ljUm93XVtjb2xdLmVsZW0pIHtcclxuICAgICAgICAgIGNlbGwgPSBzcmNbYmFzaWNSb3ddW2NvbF07XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBjZWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGRlc2t0b3BcclxuICAgIGZvciAoY29sID0gYmFzaWNDb2w7IGNvbCA8IGNvbHVtbnM7IGNvbCsrKSB7XHJcbiAgICAgIGZvciAocm93ID0gMDsgcm93IDwgMjsgcm93KyspIHtcclxuICAgICAgICBpZiAoIXNyY1tyb3cgKyBiYXNpY1Jvd11bY29sXS5lbGVtKSB7XHJcbiAgICAgICAgICBjZWxsID0gc3JjW3JvdyArIGJhc2ljUm93XVtjb2xdO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY2VsbCkge1xyXG4gICAgICAgIHJldHVybiBjZWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGdldEF2YWlsYWJsZUNlbGxzTW9iaWxlKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55IHtcclxuICAgIGxldCBsZWZ0Q29ybmVyQ2VsbDtcclxuICAgIGxldCByaWdodENvcm5lckNlbGw7XHJcbiAgICBjb25zdCBiYXNpY1JvdyA9IHRoaXMuZ2V0QmFzaWNSb3cocHJldkNlbGwpO1xyXG4gICAgY29uc3QgYmFzaWNDb2wgPSBwcmV2Q2VsbCAmJiBwcmV2Q2VsbC5jb2wgfHwgMDtcclxuXHJcblxyXG4gICAgaWYgKGNvbFNwYW4gPT09IDEgJiYgcm93U3BhbiA9PT0gMSkge1xyXG4gICAgICBjb25zdCBncmlkQ29weSA9IHRoaXMuZ3JpZENlbGxzLnNsaWNlKCk7XHJcblxyXG4gICAgICBpZiAoIXByZXZDZWxsKSB7XHJcbiAgICAgICAgbGVmdENvcm5lckNlbGwgPSBncmlkQ29weVswXVswXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3csIGJhc2ljQ29sLCB0aGlzLmNvbHVtbnMpO1xyXG5cclxuICAgICAgICBpZiAoIWxlZnRDb3JuZXJDZWxsKSB7XHJcbiAgICAgICAgICBjb25zdCByb3dTaGlmdCA9IHRoaXMuaXNNb2JpbGVMYXlvdXQgPyAxIDogMjtcclxuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsKGdyaWRDb3B5LCBiYXNpY1JvdyArIHJvd1NoaWZ0LCAwLCB0aGlzLmNvbHVtbnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICghcHJldkNlbGwpIHtcclxuICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCAwKTtcclxuICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIHJvd1NwYW4gLSAxLCAxKTtcclxuICAgIH0gZWxzZSBpZiAoY29sU3BhbiA9PT0gMikge1xyXG4gICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAxLCAwKTtcclxuICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIHJvd1NwYW4sIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHN0YXJ0OiBsZWZ0Q29ybmVyQ2VsbCxcclxuICAgICAgZW5kOiByaWdodENvcm5lckNlbGxcclxuICAgIH07XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGdldEJhc2ljUm93KHByZXZDZWxsKTogYW55IHtcclxuICAgIGxldCBiYXNpY1JvdztcclxuXHJcbiAgICBpZiAodGhpcy5pc01vYmlsZUxheW91dCkge1xyXG4gICAgICBpZiAocHJldkNlbGwpIHtcclxuICAgICAgICBiYXNpY1JvdyA9IHByZXZDZWxsICYmIHByZXZDZWxsLnJvdyB8fCAwO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGJhc2ljUm93ID0gMDtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHByZXZDZWxsKSB7XHJcbiAgICAgICAgYmFzaWNSb3cgPSBwcmV2Q2VsbC5yb3cgJSAyID09PSAwID8gcHJldkNlbGwucm93IDogcHJldkNlbGwucm93IC0gMTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBiYXNpY1JvdyA9IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYmFzaWNSb3c7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGlzQ2VsbEZyZWUocm93LCBjb2wpOiBhbnkge1xyXG4gICAgcmV0dXJuICF0aGlzLmdyaWRDZWxsc1tyb3ddW2NvbF0uZWxlbTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgZ2V0Q2VsbEluZGV4KHNyY0NlbGwpOiBhbnkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICBsZXQgaW5kZXg7XHJcblxyXG4gICAgdGhpcy5ncmlkQ2VsbHMuZm9yRWFjaCgocm93LCByb3dJbmRleCkgPT4ge1xyXG4gICAgICBpbmRleCA9IF8uZmluZEluZGV4KHNlbGYuZ3JpZENlbGxzW3Jvd0luZGV4XSwgKGNlbGwpID0+IHtcclxuICAgICAgICByZXR1cm4gY2VsbCA9PT0gc3JjQ2VsbDtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoaW5kZXggIT09IC0xKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaW5kZXggIT09IC0xID8gaW5kZXggOiAwO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyByZXNlcnZlQ2VsbHMoc3RhcnQsIGVuZCwgZWxlbSkge1xyXG4gICAgdGhpcy5ncmlkQ2VsbHMuZm9yRWFjaCgocm93KSA9PiB7XHJcbiAgICAgIHJvdy5mb3JFYWNoKChjZWxsKSA9PiB7XHJcbiAgICAgICAgaWYgKGNlbGwucm93ID49IHN0YXJ0LnJvdyAmJiBjZWxsLnJvdyA8PSBlbmQucm93ICYmXHJcbiAgICAgICAgICBjZWxsLmNvbCA+PSBzdGFydC5jb2wgJiYgY2VsbC5jb2wgPD0gZW5kLmNvbCkge1xyXG4gICAgICAgICAgY2VsbC5lbGVtID0gZWxlbTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGNsZWFyRWxlbWVudHMoKSB7XHJcbiAgICB0aGlzLmdyaWRDZWxscy5mb3JFYWNoKChyb3cpID0+IHtcclxuICAgICAgcm93LmZvckVhY2goKHRpbGUpID0+IHtcclxuICAgICAgICB0aWxlLmVsZW0gPSBudWxsO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBzZXRBdmFpbGFibGVDb2x1bW5zKGNvbHVtbnMpOiBhbnkge1xyXG4gICAgdGhpcy5pc01vYmlsZUxheW91dCA9IGNvbHVtbnMgPT09IE1PQklMRV9MQVlPVVRfQ09MVU1OUztcclxuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGdlbmVyYXRlR3JpZChzaW5nbGVUaWxlV2lkdGggPyApOiBhbnkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXMsXHJcbiAgICAgIHRpbGVXaWR0aCA9IHNpbmdsZVRpbGVXaWR0aCB8fCB0aGlzLm9wdHMudGlsZVdpZHRoLFxyXG4gICAgICBvZmZzZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGlwLWRyYWdnYWJsZS1ncm91cC10aXRsZScpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgbGV0IGNvbHNJblJvdyA9IDAsXHJcbiAgICAgIHJvd3MgPSAwLFxyXG4gICAgICBncmlkSW5Sb3cgPSBbXTtcclxuXHJcbiAgICB0aGlzLmdyaWRDZWxscyA9IFtdO1xyXG5cclxuICAgIHRoaXMudGlsZXMuZm9yRWFjaCgodGlsZSwgaW5kZXgsIHNyY1RpbGVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IHRpbGVTaXplID0gdGlsZS5nZXRTaXplKCk7XHJcblxyXG4gICAgICBnZW5lcmF0ZUNlbGxzKHRpbGVTaXplLmNvbFNwYW4pO1xyXG5cclxuICAgICAgaWYgKHNyY1RpbGVzLmxlbmd0aCA9PT0gaW5kZXggKyAxKSB7XHJcbiAgICAgICAgaWYgKGNvbHNJblJvdyA8IHNlbGYuY29sdW1ucykge1xyXG4gICAgICAgICAgZ2VuZXJhdGVDZWxscyhzZWxmLmNvbHVtbnMgLSBjb2xzSW5Sb3cpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gR2VuZXJhdGUgbW9yZSBjZWxscyBmb3IgZXh0ZW5kcyB0aWxlIHNpemUgdG8gYmlnXHJcbiAgICAgICAgaWYgKHNlbGYudGlsZXMubGVuZ3RoICogMiA+IHNlbGYuZ3JpZENlbGxzLmxlbmd0aCkge1xyXG4gICAgICAgICAgQXJyYXkuYXBwbHkobnVsbCwgQXJyYXkoc2VsZi50aWxlcy5sZW5ndGggKiAyIC0gc2VsZi5ncmlkQ2VsbHMubGVuZ3RoKSkuZm9yRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGdlbmVyYXRlQ2VsbHMoc2VsZi5jb2x1bW5zKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgZnVuY3Rpb24gZ2VuZXJhdGVDZWxscyhuZXdDZWxsQ291bnQpIHtcclxuICAgICAgQXJyYXkuYXBwbHkobnVsbCwgQXJyYXkobmV3Q2VsbENvdW50KSkuZm9yRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKHNlbGYuY29sdW1ucyA8IGNvbHNJblJvdyArIDEpIHtcclxuICAgICAgICAgIHJvd3MrKztcclxuICAgICAgICAgIGNvbHNJblJvdyA9IDA7XHJcblxyXG4gICAgICAgICAgc2VsZi5ncmlkQ2VsbHMucHVzaChncmlkSW5Sb3cpO1xyXG4gICAgICAgICAgZ3JpZEluUm93ID0gW107XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdG9wID0gcm93cyAqIHNlbGYub3B0cy50aWxlSGVpZ2h0ICsgKHJvd3MgPyByb3dzICogc2VsZi5vcHRzLmd1dHRlciA6IDApICsgb2Zmc2V0LmhlaWdodDtcclxuICAgICAgICBsZXQgbGVmdCA9IGNvbHNJblJvdyAqIHRpbGVXaWR0aCArIChjb2xzSW5Sb3cgPyBjb2xzSW5Sb3cgKiBzZWxmLm9wdHMuZ3V0dGVyIDogMCk7XHJcblxyXG4gICAgICAgIC8vIERlc2NyaWJlIGdyaWQgY2VsbCBzaXplIHRocm91Z2ggYmxvY2sgY29ybmVycyBjb29yZGluYXRlc1xyXG4gICAgICAgIGdyaWRJblJvdy5wdXNoKHtcclxuICAgICAgICAgIHRvcDogdG9wLFxyXG4gICAgICAgICAgbGVmdDogbGVmdCxcclxuICAgICAgICAgIGJvdHRvbTogdG9wICsgc2VsZi5vcHRzLnRpbGVIZWlnaHQsXHJcbiAgICAgICAgICByaWdodDogbGVmdCArIHRpbGVXaWR0aCxcclxuICAgICAgICAgIHJvdzogcm93cyxcclxuICAgICAgICAgIGNvbDogY29sc0luUm93XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbHNJblJvdysrO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9O1xyXG5cclxuICBwdWJsaWMgc2V0VGlsZXNEaW1lbnNpb25zKG9ubHlQb3NpdGlvbiwgZHJhZ2dlZFRpbGUpOiBhbnkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICBsZXQgY3VyckluZGV4ID0gMDtcclxuICAgIGxldCBwcmV2Q2VsbDtcclxuXHJcbiAgICBpZiAob25seVBvc2l0aW9uKSB7XHJcbiAgICAgIHNlbGYuY2xlYXJFbGVtZW50cygpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMudGlsZXMuZm9yRWFjaCgodGlsZSkgPT4ge1xyXG4gICAgICBjb25zdCB0aWxlU2l6ZSA9IHRpbGUuZ2V0U2l6ZSgpO1xyXG4gICAgICBsZXQgc3RhcnRDZWxsO1xyXG4gICAgICBsZXQgd2lkdGg7XHJcbiAgICAgIGxldCBoZWlnaHQ7XHJcbiAgICAgIGxldCBjZWxscztcclxuXHJcbiAgICAgIHRpbGUudXBkYXRlRWxlbSgnLnBpcC1kcmFnZ2FibGUtdGlsZScpO1xyXG4gICAgICBpZiAodGlsZVNpemUuY29sU3BhbiA9PT0gMSkge1xyXG4gICAgICAgIGlmIChwcmV2Q2VsbCAmJiBwcmV2Q2VsbC5lbGVtLnNpemUuY29sU3BhbiA9PT0gMiAmJiBwcmV2Q2VsbC5lbGVtLnNpemUucm93U3BhbiA9PT0gMSkge1xyXG4gICAgICAgICAgc3RhcnRDZWxsID0gc2VsZi5nZXRDZWxscyhzZWxmLmdldENlbGxCeVBvc2l0aW9uKHByZXZDZWxsLnJvdywgcHJldkNlbGwuY29sIC0gMSksIDEsIDEpLnN0YXJ0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzdGFydENlbGwgPSBzZWxmLmdldENlbGxzKHByZXZDZWxsLCAxLCAxKS5zdGFydDtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICBpZiAoIW9ubHlQb3NpdGlvbikge1xyXG4gICAgICAgICAgd2lkdGggPSBzdGFydENlbGwucmlnaHQgLSBzdGFydENlbGwubGVmdDtcclxuICAgICAgICAgIGhlaWdodCA9IHN0YXJ0Q2VsbC5ib3R0b20gLSBzdGFydENlbGwudG9wO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJldkNlbGwgPSBzdGFydENlbGw7XHJcblxyXG4gICAgICAgIHNlbGYucmVzZXJ2ZUNlbGxzKHN0YXJ0Q2VsbCwgc3RhcnRDZWxsLCB0aWxlKTtcclxuXHJcbiAgICAgICAgY3VyckluZGV4Kys7XHJcbiAgICAgIH0gZWxzZSBpZiAodGlsZVNpemUuY29sU3BhbiA9PT0gMikge1xyXG4gICAgICAgIGNlbGxzID0gc2VsZi5nZXRDZWxscyhwcmV2Q2VsbCwgdGlsZVNpemUucm93U3BhbiwgdGlsZVNpemUuY29sU3Bhbik7XHJcbiAgICAgICAgc3RhcnRDZWxsID0gY2VsbHMuc3RhcnQ7XHJcblxyXG4gICAgICAgIGlmICghb25seVBvc2l0aW9uKSB7XHJcbiAgICAgICAgICB3aWR0aCA9IGNlbGxzLmVuZC5yaWdodCAtIGNlbGxzLnN0YXJ0LmxlZnQ7XHJcbiAgICAgICAgICBoZWlnaHQgPSBjZWxscy5lbmQuYm90dG9tIC0gY2VsbHMuc3RhcnQudG9wO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJldkNlbGwgPSBjZWxscy5lbmQ7XHJcblxyXG4gICAgICAgIHNlbGYucmVzZXJ2ZUNlbGxzKGNlbGxzLnN0YXJ0LCBjZWxscy5lbmQsIHRpbGUpO1xyXG5cclxuICAgICAgICBjdXJySW5kZXggKz0gMjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gUmVuZGVyIHByZXZpZXdcclxuICAgICAgLy8gd2hpbGUgdGlsZXMgZnJvbSBncm91cCBpcyBkcmFnZ2VkXHJcbiAgICAgIGlmIChkcmFnZ2VkVGlsZSA9PT0gdGlsZSkge1xyXG4gICAgICAgIHRpbGUuc2V0UHJldmlld1Bvc2l0aW9uKHtcclxuICAgICAgICAgIGxlZnQ6IHN0YXJ0Q2VsbC5sZWZ0LFxyXG4gICAgICAgICAgdG9wOiBzdGFydENlbGwudG9wXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFvbmx5UG9zaXRpb24pIHtcclxuICAgICAgICB0aWxlLnNldFNpemUod2lkdGgsIGhlaWdodCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRpbGUuc2V0UG9zaXRpb24oc3RhcnRDZWxsLmxlZnQsIHN0YXJ0Q2VsbC50b3ApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGNhbGNDb250YWluZXJIZWlnaHQoKTogYW55IHtcclxuICAgIGxldCBtYXhIZWlnaHRTaXplLCBtYXhXaWR0aFNpemU7XHJcblxyXG4gICAgaWYgKCF0aGlzLnRpbGVzLmxlbmd0aCkge1xyXG4gICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBtYXhIZWlnaHRTaXplID0gXy5tYXhCeSh0aGlzLnRpbGVzLCAodGlsZSkgPT4ge1xyXG4gICAgICBjb25zdCB0aWxlU2l6ZSA9IHRpbGVbJ2dldFNpemUnXSgpO1xyXG4gICAgICByZXR1cm4gdGlsZVNpemUudG9wICsgdGlsZVNpemUuaGVpZ2h0O1xyXG4gICAgfSlbJ2dldFNpemUnXSgpO1xyXG5cclxuICAgIHRoaXMuZWxlbS5zdHlsZS5oZWlnaHQgPSBtYXhIZWlnaHRTaXplLnRvcCArIG1heEhlaWdodFNpemUuaGVpZ2h0ICsgJ3B4JztcclxuXHJcbiAgICBpZiAodGhpcy5pbmxpbmUpIHtcclxuICAgICAgbWF4V2lkdGhTaXplID0gXy5tYXhCeSh0aGlzLnRpbGVzLCAodGlsZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRpbGVTaXplID0gdGlsZVsnZ2V0U2l6ZSddKCk7XHJcbiAgICAgICAgcmV0dXJuIHRpbGVTaXplLmxlZnQgKyB0aWxlU2l6ZS53aWR0aDtcclxuICAgICAgfSlbJ2dldFNpemUnXSgpO1xyXG5cclxuICAgICAgdGhpcy5lbGVtLnN0eWxlLndpZHRoID0gbWF4V2lkdGhTaXplLmxlZnQgKyBtYXhXaWR0aFNpemUud2lkdGggKyAncHgnO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRUaWxlQnlOb2RlKG5vZGUpOiBhbnkge1xyXG4gICAgY29uc3QgZm91bmRUaWxlID0gdGhpcy50aWxlcy5maWx0ZXIoKHRpbGUpID0+IHtcclxuICAgICAgcmV0dXJuIG5vZGUgPT09IHRpbGUuZ2V0RWxlbSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGZvdW5kVGlsZS5sZW5ndGggPyBmb3VuZFRpbGVbMF0gOiBudWxsO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBnZXRUaWxlQnlDb29yZGluYXRlcyhjb29yZHMsIGRyYWdnZWRUaWxlKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLnRpbGVzXHJcbiAgICAgIC5maWx0ZXIoKHRpbGUpID0+IHtcclxuICAgICAgICBjb25zdCB0aWxlU2l6ZSA9IHRpbGUuZ2V0U2l6ZSgpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGlsZSAhPT0gZHJhZ2dlZFRpbGUgJiZcclxuICAgICAgICAgIHRpbGVTaXplLmxlZnQgPD0gY29vcmRzLmxlZnQgJiYgY29vcmRzLmxlZnQgPD0gKHRpbGVTaXplLmxlZnQgKyB0aWxlU2l6ZS53aWR0aCkgJiZcclxuICAgICAgICAgIHRpbGVTaXplLnRvcCA8PSBjb29yZHMudG9wICYmIGNvb3Jkcy50b3AgPD0gKHRpbGVTaXplLnRvcCArIHRpbGVTaXplLmhlaWdodCk7XHJcbiAgICAgIH0pWzBdIHx8IG51bGw7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGdldFRpbGVJbmRleCh0aWxlKTogYW55IHtcclxuICAgIHJldHVybiBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCB0aWxlKTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgc3dhcFRpbGVzKG1vdmVkVGlsZSwgYmVmb3JlVGlsZSk6IGFueSB7XHJcbiAgICBjb25zdCBtb3ZlZFRpbGVJbmRleCA9IF8uZmluZEluZGV4KHRoaXMudGlsZXMsIG1vdmVkVGlsZSk7XHJcbiAgICBjb25zdCBiZWZvcmVUaWxlSW5kZXggPSBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCBiZWZvcmVUaWxlKTtcclxuXHJcbiAgICB0aGlzLnRpbGVzLnNwbGljZShtb3ZlZFRpbGVJbmRleCwgMSk7XHJcbiAgICB0aGlzLnRpbGVzLnNwbGljZShiZWZvcmVUaWxlSW5kZXgsIDAsIG1vdmVkVGlsZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHJlbW92ZVRpbGUocmVtb3ZlVGlsZSk6IGFueSB7XHJcbiAgICBsZXQgZHJvcHBlZFRpbGU7XHJcblxyXG4gICAgdGhpcy50aWxlcy5mb3JFYWNoKCh0aWxlLCBpbmRleCwgdGlsZXMpID0+IHtcclxuICAgICAgaWYgKHRpbGUgPT09IHJlbW92ZVRpbGUpIHtcclxuICAgICAgICBkcm9wcGVkVGlsZSA9IHRpbGVzLnNwbGljZShpbmRleCwgMSlbMF07XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZHJvcHBlZFRpbGU7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHVwZGF0ZVRpbGVPcHRpb25zKG9wdHMpOiBhbnkge1xyXG4gICAgY29uc3QgaW5kZXggPSBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCAodGlsZSkgPT4ge1xyXG4gICAgICByZXR1cm4gdGlsZVsnZ2V0T3B0aW9ucyddKCkgPT09IG9wdHM7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XHJcbiAgICAgIHRoaXMudGlsZXNbaW5kZXhdLnNldE9wdGlvbnMob3B0cyk7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG59XHJcblxyXG5cclxuYW5ndWxhclxyXG4gIC5tb2R1bGUoJ3BpcERyYWdnYWJsZVRpbGVzR3JvdXAnKVxyXG4gIC5zZXJ2aWNlKCdwaXBUaWxlc0dyaWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRpbGVzLCBvcHRpb25zLCBjb2x1bW5zLCBlbGVtKSB7XHJcbiAgICAgIGNvbnN0IG5ld0dyaWQgPSBuZXcgVGlsZXNHcmlkU2VydmljZSh0aWxlcywgb3B0aW9ucywgY29sdW1ucywgZWxlbSk7XHJcblxyXG4gICAgICByZXR1cm4gbmV3R3JpZDtcclxuICAgIH1cclxuICB9KTsiLCJhbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlc0dyb3VwJywgW10pO1xyXG5cclxuaW1wb3J0ICcuL1RpbGVHcm91cERpcmVjdGl2ZSc7XHJcbmltcG9ydCAnLi9UaWxlR3JvdXBTZXJ2aWNlJzsiLCJleHBvcnQgaW50ZXJmYWNlIElUaWxlVGVtcGxhdGVTZXJ2aWNlIHtcclxuICAgIGdldFRlbXBsYXRlKHNvdXJjZSwgdHBsID8gLCB0aWxlU2NvcGUgPyAsIHN0cmljdENvbXBpbGUgPyApOiBhbnk7XHJcbiAgICBzZXRJbWFnZU1hcmdpbkNTUygkZWxlbWVudCwgaW1hZ2UpOiB2b2lkO1xyXG59IFxyXG5cclxue1xyXG4gICAgY2xhc3MgdGlsZVRlbXBsYXRlU2VydmljZSBpbXBsZW1lbnRzIElUaWxlVGVtcGxhdGVTZXJ2aWNlIHtcclxuICAgICAgICBwcml2YXRlIF8kaW50ZXJwb2xhdGU6IGFuZ3VsYXIuSUludGVycG9sYXRlU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF8kY29tcGlsZTogYW5ndWxhci5JQ29tcGlsZVNlcnZpY2U7XHJcbiAgICAgICAgcHJpdmF0ZSBfJHRlbXBsYXRlUmVxdWVzdDogYW5ndWxhci5JVGVtcGxhdGVSZXF1ZXN0U2VydmljZTtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgICRpbnRlcnBvbGF0ZTogYW5ndWxhci5JSW50ZXJwb2xhdGVTZXJ2aWNlLFxyXG4gICAgICAgICAgICAkY29tcGlsZTogYW5ndWxhci5JQ29tcGlsZVNlcnZpY2UsXHJcbiAgICAgICAgICAgICR0ZW1wbGF0ZVJlcXVlc3Q6IGFuZ3VsYXIuSVRlbXBsYXRlUmVxdWVzdFNlcnZpY2VcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgdGhpcy5fJGludGVycG9sYXRlID0gJGludGVycG9sYXRlO1xyXG4gICAgICAgICAgICB0aGlzLl8kY29tcGlsZSA9ICRjb21waWxlO1xyXG4gICAgICAgICAgICB0aGlzLl8kdGVtcGxhdGVSZXF1ZXN0ID0gJHRlbXBsYXRlUmVxdWVzdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBnZXRUZW1wbGF0ZShzb3VyY2UsIHRwbCA/ICwgdGlsZVNjb3BlID8gLCBzdHJpY3RDb21waWxlID8gKTogYW55IHtcclxuICAgICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGUsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybCxcclxuICAgICAgICAgICAgICAgIHR5cGVcclxuICAgICAgICAgICAgfSA9IHNvdXJjZTtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdDtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnBvbGF0ZWQgPSB0cGwgPyB0aGlzLl8kaW50ZXJwb2xhdGUodHBsKShzb3VyY2UpIDogdGhpcy5fJGludGVycG9sYXRlKHRlbXBsYXRlKShzb3VyY2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0cmljdENvbXBpbGUgPT0gdHJ1ZSA/XHJcbiAgICAgICAgICAgICAgICAgICAgKHRpbGVTY29wZSA/IHRoaXMuXyRjb21waWxlKGludGVycG9sYXRlZCkodGlsZVNjb3BlKSA6IHRoaXMuXyRjb21waWxlKGludGVycG9sYXRlZCkpIDpcclxuICAgICAgICAgICAgICAgICAgICBpbnRlcnBvbGF0ZWQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0ZW1wbGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRpbGVTY29wZSA/IHRoaXMuXyRjb21waWxlKHRlbXBsYXRlKSh0aWxlU2NvcGUpIDogdGhpcy5fJGNvbXBpbGUodGVtcGxhdGUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGVtcGxhdGVVcmwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuXyR0ZW1wbGF0ZVJlcXVlc3QodGVtcGxhdGVVcmwsIGZhbHNlKS50aGVuKChodG1sKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gdGlsZVNjb3BlID8gdGhpcy5fJGNvbXBpbGUoaHRtbCkodGlsZVNjb3BlKSA6IHRoaXMuXyRjb21waWxlKGh0bWwpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc2V0SW1hZ2VNYXJnaW5DU1MoJGVsZW1lbnQsIGltYWdlKSB7XHJcbiAgICAgICAgICAgIGxldFxyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyV2lkdGggPSAkZWxlbWVudC53aWR0aCA/ICRlbGVtZW50LndpZHRoKCkgOiAkZWxlbWVudC5jbGllbnRXaWR0aCxcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lckhlaWdodCA9ICRlbGVtZW50LmhlaWdodCA/ICRlbGVtZW50LmhlaWdodCgpIDogJGVsZW1lbnQuY2xpZW50SGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgaW1hZ2VXaWR0aCA9IChpbWFnZVswXSA/IGltYWdlWzBdLm5hdHVyYWxXaWR0aCA6IGltYWdlLm5hdHVyYWxXaWR0aCkgfHwgaW1hZ2Uud2lkdGgsXHJcbiAgICAgICAgICAgICAgICBpbWFnZUhlaWdodCA9IChpbWFnZVswXSA/IGltYWdlWzBdLm5hdHVyYWxIZWlnaHQgOiBpbWFnZS5uYXR1cmFsV2lkdGgpIHx8IGltYWdlLmhlaWdodCxcclxuICAgICAgICAgICAgICAgIG1hcmdpbiA9IDAsXHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXMgPSB7fTtcclxuXHJcbiAgICAgICAgICAgIGlmICgoaW1hZ2VXaWR0aCAvIGNvbnRhaW5lcldpZHRoKSA+IChpbWFnZUhlaWdodCAvIGNvbnRhaW5lckhlaWdodCkpIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbiA9IC0oKGltYWdlV2lkdGggLyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lckhlaWdodCAtIGNvbnRhaW5lcldpZHRoKSAvIDIpO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tbGVmdCddID0gJycgKyBtYXJnaW4gKyAncHgnO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydoZWlnaHQnXSA9ICcnICsgY29udGFpbmVySGVpZ2h0ICsgJ3B4JzsgLy8nMTAwJSc7XHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGltYWdlV2lkdGggKiBjb250YWluZXJIZWlnaHQgLyBpbWFnZUhlaWdodCArICdweCc7IC8vJzEwMCUnO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tdG9wJ10gPSAnJztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbiA9IC0oKGltYWdlSGVpZ2h0IC8gaW1hZ2VXaWR0aCAqIGNvbnRhaW5lcldpZHRoIC0gY29udGFpbmVySGVpZ2h0KSAvIDIpO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tdG9wJ10gPSAnJyArIG1hcmdpbiArICdweCc7XHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ2hlaWdodCddID0gJycgKyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lcldpZHRoIC8gaW1hZ2VXaWR0aCArICdweCc7IC8vJzEwMCUnO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWyd3aWR0aCddID0gJycgKyBjb250YWluZXJXaWR0aCArICdweCc7IC8vJzEwMCUnO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tbGVmdCddID0gJyc7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQoaW1hZ2UpLmNzcyhjc3NQYXJhbXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBpbWFnZSBsb2FkIGRpcmVjdGl2ZSBUT0RPOiByZW1vdmUgdG8gcGlwSW1hZ2VVdGlsc1xyXG4gICAgY29uc3QgSW1hZ2VMb2FkID0gZnVuY3Rpb24gSW1hZ2VMb2FkKCRwYXJzZTogbmcuSVBhcnNlU2VydmljZSk6IG5nLklEaXJlY3RpdmUge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZTogbmcuSVNjb3BlLCBlbGVtZW50OiBKUXVlcnksIGF0dHJzOiBhbnkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gJHBhcnNlKGF0dHJzLnBpcEltYWdlTG9hZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kKCdsb2FkJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soc2NvcGUsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiBldmVudFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXHJcbiAgICAgICAgLnNlcnZpY2UoJ3BpcFRpbGVUZW1wbGF0ZScsIHRpbGVUZW1wbGF0ZVNlcnZpY2UpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwSW1hZ2VMb2FkJywgSW1hZ2VMb2FkKTtcclxufSIsIihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdhZGRfdGlsZV9kaWFsb2cvQWRkVGlsZS5odG1sJyxcbiAgICAnPG1kLWRpYWxvZyBjbGFzcz1cInBpcC1kaWFsb2cgcGlwLWFkZC1jb21wb25lbnQtZGlhbG9nXCI+PG1kLWRpYWxvZy1jb250ZW50IGNsYXNzPVwibGF5b3V0LWNvbHVtblwiPjxkaXYgY2xhc3M9XCJ0aGVtZS1kaXZpZGVyIHAxNiBmbGV4LWF1dG9cIj48aDMgY2xhc3M9XCJoaWRlLXhzIG0wIGJtMTYgdGhlbWUtdGV4dC1wcmltYXJ5XCIgaGlkZS14cz1cIlwiPnt7IFxcJ0RBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfVElUTEVcXCcgfCB0cmFuc2xhdGUgfX08bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibGF5b3V0LXJvdyBmbGV4LWF1dG8gbTAgdG0xNlwiPjxtZC1zZWxlY3QgY2xhc3M9XCJmbGV4LWF1dG8gbTAgdGhlbWUtdGV4dC1wcmltYXJ5XCIgbmctbW9kZWw9XCJkaWFsb2dDdHJsLmFjdGl2ZUdyb3VwSW5kZXhcIiBwbGFjZWhvbGRlcj1cInt7IFxcJ0RBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfQ1JFQVRFX05FV19HUk9VUFxcJyB8IHRyYW5zbGF0ZSB9fVwiIGFyaWEtbGFiZWw9XCJHcm91cFwiPjxtZC1vcHRpb24gbmctdmFsdWU9XCIkaW5kZXhcIiBuZy1yZXBlYXQ9XCJncm91cCBpbiBkaWFsb2dDdHJsLmdyb3Vwc1wiPnt7IGdyb3VwIH19PC9tZC1vcHRpb24+PC9tZC1zZWxlY3Q+PC9tZC1pbnB1dC1jb250YWluZXI+PC9oMz48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWJvZHkgcGlwLXNjcm9sbCBwMCBmbGV4LWF1dG9cIj48cCBjbGFzcz1cIm1kLWJvZHktMSB0aGVtZS10ZXh0LXNlY29uZGFyeSBtMCBscDE2IHJwMTZcIj57eyBcXCdEQVNIQk9BUkRfQUREX1RJTEVfRElBTE9HX1VTRV9IT1RfS0VZU1xcJyB8IHRyYW5zbGF0ZSB9fTwvcD48bWQtbGlzdCBuZy1pbml0PVwiZ3JvdXBJbmRleCA9ICRpbmRleFwiIG5nLXJlcGVhdD1cImdyb3VwIGluIGRpYWxvZ0N0cmwuZGVmYXVsdFdpZGdldHNcIj48bWQtbGlzdC1pdGVtIGNsYXNzPVwibGF5b3V0LXJvdyBwaXAtbGlzdC1pdGVtIGxwMTYgcnAxNlwiIG5nLXJlcGVhdD1cIml0ZW0gaW4gZ3JvdXBcIj48ZGl2IGNsYXNzPVwiaWNvbi1ob2xkZXIgZmxleC1ub25lXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczp7ezo6IGl0ZW0uaWNvbiB9fVwiPjwvbWQtaWNvbj48ZGl2IGNsYXNzPVwicGlwLWJhZGdlIHRoZW1lLWJhZGdlIG1kLXdhcm5cIiBuZy1pZj1cIml0ZW0uYW1vdW50XCI+PHNwYW4+e3sgaXRlbS5hbW91bnQgfX08L3NwYW4+PC9kaXY+PC9kaXY+PHNwYW4gY2xhc3M9XCJmbGV4LWF1dG8gbG0yNCB0aGVtZS10ZXh0LXByaW1hcnlcIj57ezo6IGl0ZW0udGl0bGUgfX08L3NwYW4+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uIGZsZXgtbm9uZVwiIG5nLWNsaWNrPVwiZGlhbG9nQ3RybC5lbmNyZWFzZShncm91cEluZGV4LCAkaW5kZXgpXCIgYXJpYS1sYWJlbD1cIkVuY3JlYXNlXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbHVzLWNpcmNsZVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gZmxleC1ub25lXCIgbmctY2xpY2s9XCJkaWFsb2dDdHJsLmRlY3JlYXNlKGdyb3VwSW5kZXgsICRpbmRleClcIiBhcmlhLWxhYmVsPVwiRGVjcmVhc2VcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOm1pbnVzLWNpcmNsZVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48L21kLWxpc3QtaXRlbT48bWQtZGl2aWRlciBjbGFzcz1cImxtNzIgdG04IGJtOFwiIG5nLWlmPVwiZ3JvdXBJbmRleCAhPT0gKGRpYWxvZ0N0cmwuZGVmYXVsdFdpZGdldHMubGVuZ3RoIC0gMSlcIj48L21kLWRpdmlkZXI+PC9tZC1saXN0PjwvZGl2PjwvbWQtZGlhbG9nLWNvbnRlbnQ+PG1kLWRpYWxvZy1hY3Rpb25zIGNsYXNzPVwiZmxleC1ub25lIGxheW91dC1hbGlnbi1lbmQtY2VudGVyIHRoZW1lLWRpdmlkZXIgZGl2aWRlci10b3AgdGhlbWUtdGV4dC1wcmltYXJ5XCI+PG1kLWJ1dHRvbiBuZy1jbGljaz1cImRpYWxvZ0N0cmwuY2FuY2VsKClcIiBhcmlhLWxhYmVsPVwiQ2FuY2VsXCI+e3sgXFwnQ0FOQ0VMXFwnIHwgdHJhbnNsYXRlIH19PC9tZC1idXR0b24+PG1kLWJ1dHRvbiBuZy1jbGljaz1cImRpYWxvZ0N0cmwuYWRkKClcIiBuZy1kaXNhYmxlZD1cImRpYWxvZ0N0cmwudG90YWxXaWRnZXRzID09PSAwXCIgYXJpYWwtbGFiZWw9XCJBZGRcIj57eyBcXCdBRERcXCcgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48L21kLWRpYWxvZy1hY3Rpb25zPjwvbWQtZGlhbG9nPicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2NhbGVuZGFyX3RpbGUvQ2FsZW5kYXJUaWxlLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwid2lkZ2V0LWJveCBwaXAtY2FsZW5kYXItd2lkZ2V0IHt7ICRjdHJsLmNvbG9yIH19IGxheW91dC1jb2x1bW4gbGF5b3V0LWZpbGwgdHAwXCIgbmctY2xhc3M9XCJ7IHNtYWxsOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIG1lZGl1bTogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBiaWc6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiB9XCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXIgZmxleC1ub25lXCI+PHBpcC10aWxlLW1lbnU+PC9waXAtdGlsZS1tZW51PjwvZGl2PjxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudCBmbGV4LWF1dG8gbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tY2VudGVyLWNlbnRlclwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxXCI+PHNwYW4gY2xhc3M9XCJkYXRlIGxtMjQgcm0xMlwiPnt7ICRjdHJsLm9wdGlvbnMuZGF0ZS5nZXREYXRlKCkgfX08L3NwYW4+PGRpdiBjbGFzcz1cImZsZXgtYXV0byBsYXlvdXQtY29sdW1uXCI+PHNwYW4gY2xhc3M9XCJ3ZWVrZGF5IG1kLWhlYWRsaW5lXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0TG9uZ0RheU9mV2VlayB9fTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJtb250aC15ZWFyIG1kLWhlYWRsaW5lXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0TG9uZ01vbnRoIH19IHt7ICRjdHJsLm9wdGlvbnMuZGF0ZSB8IGZvcm1hdFllYXIgfX08L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50IGZsZXgtYXV0byBsYXlvdXQtY29sdW1uIGxheW91dC1hbGlnbi1zcGFjZS1hcm91bmQtY2VudGVyXCIgbmctaGlkZT1cIiRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMVwiPjxzcGFuIGNsYXNzPVwid2Vla2RheSBtZC1oZWFkbGluZVwiIG5nLWhpZGU9XCIkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDFcIj57eyAkY3RybC5vcHRpb25zLmRhdGUgfCBmb3JtYXRMb25nRGF5T2ZXZWVrIH19PC9zcGFuPiA8c3BhbiBjbGFzcz1cIndlZWtkYXlcIiBuZy1zaG93PVwiJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMSAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0TG9uZ0RheU9mV2VlayB9fTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJkYXRlIGxtMTIgcm0xMlwiPnt7ICRjdHJsLm9wdGlvbnMuZGF0ZS5nZXREYXRlKCkgfX08L3NwYW4+IDxzcGFuIGNsYXNzPVwibW9udGgteWVhciBtZC1oZWFkbGluZVwiPnt7ICRjdHJsLm9wdGlvbnMuZGF0ZSB8IGZvcm1hdExvbmdNb250aCB9fSB7eyAkY3RybC5vcHRpb25zLmRhdGUgfCBmb3JtYXRZZWFyIH19PC9zcGFuPjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2NhbGVuZGFyX3RpbGUvQ29uZmlnRGlhbG9nRXh0ZW5zaW9uLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwidy1zdHJldGNoIGJtMTZcIj5EYXRlOjxtZC1kYXRlcGlja2VyIG5nLW1vZGVsPVwiJGN0cmwuZGF0ZVwiIGNsYXNzPVwidy1zdHJldGNoXCI+PC9tZC1kYXRlcGlja2VyPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2NvbmZpZ190aWxlX2RpYWxvZy9Db25maWdEaWFsb2cuaHRtbCcsXG4gICAgJzxtZC1kaWFsb2cgY2xhc3M9XCJwaXAtZGlhbG9nIHBpcC10aWxlLWNvbmZpZy1kaWFsb2cge3sgdm0ucGFyYW1zLmRpYWxvZ0NsYXNzIH19XCIgd2lkdGg9XCI0MDBcIiBtZC10aGVtZT1cInt7dm0udGhlbWV9fVwiPjxwaXAtdGlsZS1jb25maWctZXh0ZW5kLWNvbXBvbmVudCBjbGFzcz1cImxheW91dC1jb2x1bW5cIiBwaXAtZGlhbG9nLXNjb3BlPVwidm1cIiBwaXAtZXh0ZW5zaW9uLXVybD1cInZtLmV4dGVuc2lvblVybFwiIHBpcC1hcHBseT1cInZtLm9uQXBwbHkodXBkYXRlZERhdGEpXCI+PC9waXAtdGlsZS1jb25maWctZXh0ZW5kLWNvbXBvbmVudD48L21kLWRpYWxvZz4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdjb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nRXh0ZW5kQ29tcG9uZW50Lmh0bWwnLFxuICAgICc8aDMgY2xhc3M9XCJ0bTAgZmxleC1ub25lXCI+e3sgXFwnREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19USVRMRVxcJyB8IHRyYW5zbGF0ZSB9fTwvaDM+PGRpdiBjbGFzcz1cInBpcC1ib2R5IHBpcC1zY3JvbGwgcDE2IGJwMCBmbGV4LWF1dG9cIj48cGlwLWV4dGVuc2lvbi1wb2ludD48L3BpcC1leHRlbnNpb24tcG9pbnQ+PHBpcC10b2dnbGUtYnV0dG9ucyBjbGFzcz1cImJtMTZcIiBuZy1pZj1cIiEkY3RybC5oaWRlU2l6ZXNcIiBwaXAtYnV0dG9ucz1cIiRjdHJsLnNpemVzXCIgbmctbW9kZWw9XCIkY3RybC5zaXplSWRcIj48L3BpcC10b2dnbGUtYnV0dG9ucz48cGlwLWNvbG9yLXBpY2tlciBuZy1pZj1cIiEkY3RybC5oaWRlQ29sb3JzXCIgcGlwLWNvbG9ycz1cIiRjdHJsLmNvbG9yc1wiIG5nLW1vZGVsPVwiJGN0cmwuY29sb3JcIj48L3BpcC1jb2xvci1waWNrZXI+PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1mb290ZXIgZmxleC1ub25lXCI+PGRpdj48bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgbmctY2xpY2s9XCIkY3RybC5vbkNhbmNlbCgpXCI+e3sgXFwnQ0FOQ0VMXFwnIHwgdHJhbnNsYXRlIH19PC9tZC1idXR0b24+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWFjY2VudFwiIG5nLWNsaWNrPVwiJGN0cmwub25BcHBseSgpXCI+e3sgXFwnQVBQTFlcXCcgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdkcmFnZ2FibGUvRHJhZ2dhYmxlLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ob2xkZXJcIj48ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ncm91cFwiIG5nLXJlcGVhdD1cImdyb3VwIGluICRjdHJsLmdyb3Vwc1wiIGRhdGEtZ3JvdXAtaWQ9XCJ7eyAkaW5kZXggfX1cIiBwaXAtZHJhZ2dhYmxlLXRpbGVzPVwiZ3JvdXAuc291cmNlXCI+PGRpdiBjbGFzcz1cInBpcC1kcmFnZ2FibGUtZ3JvdXAtdGl0bGUgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tc3RhcnQtY2VudGVyXCI+PGRpdiBjbGFzcz1cInRpdGxlLWlucHV0LWNvbnRhaW5lclwiIG5nLWNsaWNrPVwiJGN0cmwub25UaXRsZUNsaWNrKGdyb3VwLCAkZXZlbnQpXCI+PGlucHV0IG5nLWlmPVwiZ3JvdXAuZWRpdGluZ05hbWVcIiBuZy1ibHVyPVwiJGN0cmwub25CbHVyVGl0bGVJbnB1dChncm91cClcIiBuZy1rZXlwcmVzcz1cIiRjdHJsLm9uS3llcHJlc3NUaXRsZUlucHV0KGdyb3VwLCAkZXZlbnQpXCIgbmctbW9kZWw9XCJncm91cC50aXRsZVwiPjxkaXYgY2xhc3M9XCJ0ZXh0LW92ZXJmbG93IGZsZXgtbm9uZVwiIG5nLWlmPVwiIWdyb3VwLmVkaXRpbmdOYW1lXCI+e3sgZ3JvdXAudGl0bGUgfX08L2Rpdj48L2Rpdj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gZmxleC1ub25lIGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyXCIgbmctc2hvdz1cImdyb3VwLmVkaXRpbmdOYW1lXCIgbmctY2xpY2s9XCIkY3RybC5jYW5jZWxFZGl0aW5nKGdyb3VwKVwiIGFyaWEtbGFiZWw9XCJDYW5jZWxcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmNyb3NzXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjxtZC1tZW51IGNsYXNzPVwiZmxleC1ub25lIGxheW91dC1jb2x1bW5cIiBtZC1wb3NpdGlvbi1tb2RlPVwidGFyZ2V0LXJpZ2h0IHRhcmdldFwiIG5nLXNob3c9XCIhZ3JvdXAuZWRpdGluZ05hbWVcIj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gZmxleC1ub25lIGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyXCIgbmctY2xpY2s9XCIkbWRPcGVuTWVudSgpOyBncm91cElkID0gJGluZGV4XCIgYXJpYS1sYWJlbD1cIk1lbnVcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmRvdHNcIj48L21kLWljb24+PC9tZC1idXR0b24+PG1kLW1lbnUtY29udGVudCB3aWR0aD1cIjRcIj48bWQtbWVudS1pdGVtIG5nLXJlcGVhdD1cImFjdGlvbiBpbiAkY3RybC5ncm91cE1lbnVBY3Rpb25zXCI+PG1kLWJ1dHRvbiBuZy1jbGljaz1cImFjdGlvbi5jYWxsYmFjayhncm91cElkKVwiPnt7IGFjdGlvbi50aXRsZSB9fTwvbWQtYnV0dG9uPjwvbWQtbWVudS1pdGVtPjwvbWQtbWVudS1jb250ZW50PjwvbWQtbWVudT48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ncm91cCBmaWN0LWdyb3VwIGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyIGxheW91dC1jb2x1bW4gdG0xNlwiPjxkaXYgY2xhc3M9XCJmaWN0LWdyb3VwLXRleHQtY29udGFpbmVyXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbHVzXCI+PC9tZC1pY29uPnt7IFxcJ0RST1BfVE9fQ1JFQVRFX05FV19HUk9VUFxcJyB8IHRyYW5zbGF0ZSB9fTwvZGl2PjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2Rhc2hib2FyZC9EYXNoYm9hcmQuaHRtbCcsXG4gICAgJzxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnQgbWQtcmFpc2VkIG1kLWZhYiBsYXlvdXQtY29sdW1uIGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyXCIgYXJpYS1sYWJlbD1cIkFkZCBjb21wb25lbnRcIiBuZy1jbGljaz1cIiRjdHJsLmFkZENvbXBvbmVudCgpXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbHVzXCIgY2xhc3M9XCJtZC1oZWFkbGluZSBjZW50ZXJlZC1hZGQtaWNvblwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ncmlkLWhvbGRlclwiPjxwaXAtZHJhZ2dhYmxlLWdyaWQgcGlwLXRpbGVzLXRlbXBsYXRlcz1cIiRjdHJsLmdyb3VwZWRXaWRnZXRzXCIgcGlwLXRpbGVzLWNvbnRleHQ9XCIkY3RybC53aWRnZXRzQ29udGV4dFwiIHBpcC1kcmFnZ2FibGUtZ3JpZD1cIiRjdHJsLmRyYWdnYWJsZUdyaWRPcHRpb25zXCIgcGlwLWdyb3VwLW1lbnUtYWN0aW9ucz1cIiRjdHJsLmdyb3VwTWVudUFjdGlvbnNcIj48L3BpcC1kcmFnZ2FibGUtZ3JpZD48bWQtcHJvZ3Jlc3MtY2lyY3VsYXIgbWQtbW9kZT1cImluZGV0ZXJtaW5hdGVcIiBjbGFzcz1cInByb2dyZXNzLXJpbmdcIj48L21kLXByb2dyZXNzLWNpcmN1bGFyPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2V2ZW50X3RpbGUvQ29uZmlnRGlhbG9nRXh0ZW5zaW9uLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwidy1zdHJldGNoXCI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cInctc3RyZXRjaCBibTBcIj48bGFiZWw+VGl0bGU6PC9sYWJlbD4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC50aXRsZVwiPjwvbWQtaW5wdXQtY29udGFpbmVyPkRhdGU6PG1kLWRhdGVwaWNrZXIgbmctbW9kZWw9XCIkY3RybC5kYXRlXCIgY2xhc3M9XCJ3LXN0cmV0Y2ggYm04XCI+PC9tZC1kYXRlcGlja2VyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJ3LXN0cmV0Y2hcIj48bGFiZWw+RGVzY3JpcHRpb246PC9sYWJlbD4gPHRleHRhcmVhIHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC50ZXh0XCI+XFxuJyArXG4gICAgJyAgICA8L3RleHRhcmVhPjwvbWQtaW5wdXQtY29udGFpbmVyPkJhY2tkcm9wXFwncyBvcGFjaXR5OjxtZC1zbGlkZXIgYXJpYS1sYWJlbD1cIm9wYWNpdHlcIiB0eXBlPVwibnVtYmVyXCIgbWluPVwiMC4xXCIgbWF4PVwiMC45XCIgc3RlcD1cIjAuMDFcIiBuZy1tb2RlbD1cIiRjdHJsLm9wYWNpdHlcIiBuZy1jaGFuZ2U9XCIkY3RybC5vbk9wYWNpdHl0ZXN0KCRjdHJsLm9wYWNpdHkpXCI+PC9tZC1zbGlkZXI+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnZXZlbnRfdGlsZS9FdmVudFRpbGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3aWRnZXQtYm94IHBpcC1ldmVudC13aWRnZXQge3sgJGN0cmwuY29sb3IgfX0gbGF5b3V0LWNvbHVtbiBsYXlvdXQtZmlsbFwiIG5nLWNsYXNzPVwieyBzbWFsbDogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMSAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBtZWRpdW06ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMSwgYmlnOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDIgfVwiPjxpbWcgbmctaWY9XCIkY3RybC5vcHRpb25zLmltYWdlXCIgbmctc3JjPVwie3skY3RybC5vcHRpb25zLmltYWdlfX1cIiBhbHQ9XCJ7eyRjdHJsLm9wdGlvbnMudGl0bGUgfHwgJGN0cmwub3B0aW9ucy5uYW1lfX1cIj48ZGl2IGNsYXNzPVwidGV4dC1iYWNrZHJvcFwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCB7eyAkY3RybC5vcGFjaXR5IH19KVwiPjxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZGluZyBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1zdGFydC1jZW50ZXIgZmxleC1ub25lXCI+PHNwYW4gY2xhc3M9XCJ3aWRnZXQtdGl0bGUgZmxleC1hdXRvIHRleHQtb3ZlcmZsb3dcIj57eyAkY3RybC5vcHRpb25zLnRpdGxlIHx8ICRjdHJsLm9wdGlvbnMubmFtZSB9fTwvc3Bhbj48cGlwLXRpbGUtbWVudSBuZy1pZj1cIiEkY3RybC5vcHRpb25zLmhpZGVNZW51XCI+PC9waXAtdGlsZS1tZW51PjwvZGl2PjxkaXYgY2xhc3M9XCJ0ZXh0LWNvbnRhaW5lciBmbGV4LWF1dG8gcGlwLXNjcm9sbFwiPjxwIGNsYXNzPVwiZGF0ZSBmbGV4LW5vbmVcIiBuZy1pZj1cIiRjdHJsLm9wdGlvbnMuZGF0ZVwiPnt7ICRjdHJsLm9wdGlvbnMuZGF0ZSB8IGZvcm1hdFNob3J0RGF0ZSB9fTwvcD48cCBjbGFzcz1cInRleHQgZmxleC1hdXRvXCI+e3sgJGN0cmwub3B0aW9ucy50ZXh0IHx8ICRjdHJsLm9wdGlvbnMuZGVzY3JpcHRpb24gfX08L3A+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnbWVudV90aWxlL01lbnVUaWxlLmh0bWwnLFxuICAgICc8bWQtbWVudSBjbGFzcz1cIndpZGdldC1tZW51XCIgbWQtcG9zaXRpb24tbW9kZT1cInRhcmdldC1yaWdodCB0YXJnZXRcIj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gZmxleC1ub25lXCIgbmctY2xpY2s9XCIkbWRPcGVuTWVudSgpXCIgYXJpYS1sYWJlbD1cIk1lbnVcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnZkb3RzXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjxtZC1tZW51LWNvbnRlbnQgd2lkdGg9XCI0XCI+PG1kLW1lbnUtaXRlbSBuZy1yZXBlYXQ9XCJpdGVtIGluICRjdHJsLm1lbnVcIj48bWQtYnV0dG9uIG5nLWlmPVwiIWl0ZW0uc3VibWVudVwiIG5nLWNsaWNrPVwiJGN0cmwuY2FsbEFjdGlvbihpdGVtLmFjdGlvbiwgaXRlbS5wYXJhbXMsIGl0ZW0pXCI+e3s6OiBpdGVtLnRpdGxlIH19PC9tZC1idXR0b24+PG1kLW1lbnUgbmctaWY9XCJpdGVtLnN1Ym1lbnVcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiJGN0cmwuY2FsbEFjdGlvbihpdGVtLmFjdGlvbilcIj57ezo6IGl0ZW0udGl0bGUgfX08L21kLWJ1dHRvbj48bWQtbWVudS1jb250ZW50PjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0PVwic3ViaXRlbSBpbiBpdGVtLnN1Ym1lbnVcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiJGN0cmwuY2FsbEFjdGlvbihzdWJpdGVtLmFjdGlvbiwgc3ViaXRlbS5wYXJhbXMsIHN1Yml0ZW0pXCI+e3s6OiBzdWJpdGVtLnRpdGxlIH19PC9tZC1idXR0b24+PC9tZC1tZW51LWl0ZW0+PC9tZC1tZW51LWNvbnRlbnQ+PC9tZC1tZW51PjwvbWQtbWVudS1pdGVtPjwvbWQtbWVudS1jb250ZW50PjwvbWQtbWVudT4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdub3RlX3RpbGUvQ29uZmlnRGlhbG9nRXh0ZW5zaW9uLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwidy1zdHJldGNoXCI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cInctc3RyZXRjaCBibTBcIj48bGFiZWw+VGl0bGU6PC9sYWJlbD4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC50aXRsZVwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJ3LXN0cmV0Y2ggdG0wXCI+PGxhYmVsPlRleHQ6PC9sYWJlbD4gPHRleHRhcmVhIHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC50ZXh0XCI+XFxuJyArXG4gICAgJyAgICA8L3RleHRhcmVhPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ25vdGVfdGlsZS9Ob3RlVGlsZS5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cIndpZGdldC1ib3ggcGlwLW5vdGVzLXdpZGdldCB7eyAkY3RybC5jb2xvciB9fSBsYXlvdXQtY29sdW1uXCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlciBmbGV4LW5vbmVcIiBuZy1pZj1cIiRjdHJsLm9wdGlvbnMudGl0bGUgfHwgJGN0cmwub3B0aW9ucy5uYW1lXCI+PHNwYW4gY2xhc3M9XCJ3aWRnZXQtdGl0bGUgZmxleC1hdXRvIHRleHQtb3ZlcmZsb3dcIj57eyAkY3RybC5vcHRpb25zLnRpdGxlIHx8ICRjdHJsLm9wdGlvbnMubmFtZSB9fTwvc3Bhbj48L2Rpdj48cGlwLXRpbGUtbWVudSBuZy1pZj1cIiEkY3RybC5vcHRpb25zLmhpZGVNZW51XCI+PC9waXAtdGlsZS1tZW51PjxkaXYgY2xhc3M9XCJ0ZXh0LWNvbnRhaW5lciBmbGV4LWF1dG8gcGlwLXNjcm9sbFwiPjxwPnt7ICRjdHJsLm9wdGlvbnMudGV4dCB9fTwvcD48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdwb3NpdGlvbl90aWxlL0NvbmZpZ0RpYWxvZ0V4dGVuc2lvbi5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInctc3RyZXRjaFwiPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJ3LXN0cmV0Y2ggYm0wXCI+PGxhYmVsPkxvY2F0aW9uIG5hbWU6PC9sYWJlbD4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC5sb2NhdGlvbk5hbWVcIj48L21kLWlucHV0LWNvbnRhaW5lcj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdwb3NpdGlvbl90aWxlL1Bvc2l0aW9uVGlsZS5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1wb3NpdGlvbi13aWRnZXQgd2lkZ2V0LWJveCBwMCBsYXlvdXQtY29sdW1uIGxheW91dC1maWxsXCIgbmctY2xhc3M9XCJ7IHNtYWxsOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIG1lZGl1bTogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBiaWc6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiB9XCIgaW5kZXg9XCJ7eyAkY3RybC5pbmRleCB9fVwiIGdyb3VwPVwie3sgJGN0cmwuZ3JvdXAgfX1cIj48ZGl2IGNsYXNzPVwicG9zaXRpb24tYWJzb2x1dGUtcmlnaHQtdG9wXCIgbmctaWY9XCIhJGN0cmwub3B0aW9ucy5sb2NhdGlvbk5hbWVcIj48cGlwLXRpbGUtbWVudSBuZy1pZj1cIiEkY3RybC5vcHRpb25zLmhpZGVNZW51XCI+PC9waXAtdGlsZS1tZW51PjwvZGl2PjxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZGluZyBscDE2IHJwOCBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1lbmQtY2VudGVyIGZsZXgtbm9uZVwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy5sb2NhdGlvbk5hbWVcIj48c3BhbiBjbGFzcz1cImZsZXggdGV4dC1vdmVyZmxvd1wiPnt7ICRjdHJsLm9wdGlvbnMubG9jYXRpb25OYW1lIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PC9kaXY+PHBpcC1sb2NhdGlvbi1tYXAgY2xhc3M9XCJmbGV4XCIgbmctaWY9XCIkY3RybC5zaG93UG9zaXRpb25cIiBwaXAtc3RyZXRjaD1cInRydWVcIiBwaXAtcmViaW5kPVwidHJ1ZVwiIHBpcC1sb2NhdGlvbi1wb3M9XCIkY3RybC5vcHRpb25zLmxvY2F0aW9uXCI+PC9waXAtbG9jYXRpb24tbWFwPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3BpY3R1cmVfc2xpZGVyX3RpbGUvUGljdHVyZVNsaWRlclRpbGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3aWRnZXQtYm94IHBpcC1waWN0dXJlLXNsaWRlci13aWRnZXQge3sgJGN0cmwuY29sb3IgfX0gbGF5b3V0LWNvbHVtbiBsYXlvdXQtZmlsbFwiIG5nLWNsYXNzPVwieyBzbWFsbDogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMSAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBtZWRpdW06ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMSwgYmlnOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDIgfVwiIGluZGV4PVwie3sgJGN0cmwuaW5kZXggfX1cIiBncm91cD1cInt7ICRjdHJsLmdyb3VwIH19XCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxwMTYgcnA4IGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXIgZmxleC1ub25lXCI+PHNwYW4gY2xhc3M9XCJmbGV4IHRleHQtb3ZlcmZsb3dcIj57eyAkY3RybC5vcHRpb25zLnRpdGxlIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PC9kaXY+PGRpdiBjbGFzcz1cInNsaWRlci1jb250YWluZXJcIj48ZGl2IHBpcC1pbWFnZS1zbGlkZXI9XCJcIiBwaXAtYW5pbWF0aW9uLXR5cGU9XCJcXCdmYWRpbmdcXCdcIiBwaXAtYW5pbWF0aW9uLWludGVydmFsPVwiJGN0cmwuYW5pbWF0aW9uSW50ZXJ2YWxcIiBuZy1pZj1cIiRjdHJsLmFuaW1hdGlvblR5cGUgPT0gXFwnZmFkaW5nXFwnXCI+PGRpdiBjbGFzcz1cInBpcC1hbmltYXRpb24tYmxvY2tcIiBuZy1yZXBlYXQ9XCJzbGlkZSBpbiAkY3RybC5vcHRpb25zLnNsaWRlc1wiPjxpbWcgbmctc3JjPVwie3sgc2xpZGUuaW1hZ2UgfX1cIiBhbHQ9XCJ7eyBzbGlkZS5pbWFnZSB9fVwiIHBpcC1pbWFnZS1sb2FkPVwiJGN0cmwub25JbWFnZUxvYWQoJGV2ZW50KVwiPjxwIGNsYXNzPVwic2xpZGUtdGV4dFwiIG5nLWlmPVwic2xpZGUudGV4dFwiPnt7IHNsaWRlLnRleHQgfX08L3A+PC9kaXY+PC9kaXY+PGRpdiBwaXAtaW1hZ2Utc2xpZGVyPVwiXCIgcGlwLWFuaW1hdGlvbi10eXBlPVwiXFwnY2Fyb3VzZWxcXCdcIiBwaXAtYW5pbWF0aW9uLWludGVydmFsPVwiJGN0cmwuYW5pbWF0aW9uSW50ZXJ2YWxcIiBuZy1pZj1cIiRjdHJsLmFuaW1hdGlvblR5cGUgPT0gXFwnY2Fyb3VzZWxcXCdcIj48ZGl2IGNsYXNzPVwicGlwLWFuaW1hdGlvbi1ibG9ja1wiIG5nLXJlcGVhdD1cInNsaWRlIGluICRjdHJsLm9wdGlvbnMuc2xpZGVzXCI+PGltZyBuZy1zcmM9XCJ7eyBzbGlkZS5pbWFnZSB9fVwiIGFsdD1cInt7IHNsaWRlLmltYWdlIH19XCIgcGlwLWltYWdlLWxvYWQ9XCIkY3RybC5vbkltYWdlTG9hZCgkZXZlbnQpXCI+PHAgY2xhc3M9XCJzbGlkZS10ZXh0XCIgbmctaWY9XCJzbGlkZS50ZXh0XCI+e3sgc2xpZGUudGV4dCB9fTwvcD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzdGF0aXN0aWNzX3RpbGUvU3RhdGlzdGljc1RpbGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3aWRnZXQtYm94IHBpcC1zdGF0aXN0aWNzLXdpZGdldCBsYXlvdXQtY29sdW1uIGxheW91dC1maWxsXCIgbmctY2xhc3M9XCJ7IHNtYWxsOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIG1lZGl1bTogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBiaWc6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiB9XCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlciBmbGV4LW5vbmVcIj48c3BhbiBjbGFzcz1cIndpZGdldC10aXRsZSBmbGV4LWF1dG8gdGV4dC1vdmVyZmxvd1wiPnt7ICRjdHJsLm9wdGlvbnMudGl0bGUgfHwgJGN0cmwub3B0aW9ucy5uYW1lIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51PjwvcGlwLXRpbGUtbWVudT48L2Rpdj48ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRlbnQgZmxleC1hdXRvIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWNlbnRlci1jZW50ZXJcIiBuZy1pZj1cIiRjdHJsLm9wdGlvbnMuc2VyaWVzICYmICEkY3RybC5yZXNldFwiPjxwaXAtcGllLWNoYXJ0IHBpcC1zZXJpZXM9XCIkY3RybC5vcHRpb25zLnNlcmllc1wiIG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuY2hhcnRUeXBlIHx8ICRjdHJsLm9wdGlvbnMuY2hhcnRUeXBlID09IFxcJ3BpZVxcJ1wiIHBpcC1kb251dD1cInRydWVcIiBwaXAtcGllLXNpemU9XCIkY3RybC5jaGFydFNpemVcIiBwaXAtc2hvdy10b3RhbD1cInRydWVcIiBwaXAtY2VudGVyZWQ9XCJ0cnVlXCI+PC9waXAtcGllLWNoYXJ0PjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwLXdlYnVpLWRhc2hib2FyZC1odG1sLm1pbi5qcy5tYXBcbiJdfQ=="}