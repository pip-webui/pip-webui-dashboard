{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableController.ts","src/draggable/DraggableDirective.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":[],"mappings":"AAAA;;;ACAA,6BAA2B;AAC3B,iCAA+B;AAE/B,CAAC;IACC,YAAY,CAAC;IAEb,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE;QAC7B,WAAW;QACX,YAAY;QACZ,uBAAuB;QACvB,gCAAgC;QAChC,wBAAwB;QAGxB,WAAW;QACX,cAAc;QACd,aAAa;QACb,WAAW;QACX,cAAc;QACd,aAAa;KACd,CAAC,CAAC;AAEL,CAAC,CAAC,EAAE,CAAC;AAEL,2CAAyC;AACzC,0DAAwD;AACxD,gEAA8D;AAC9D,iCAA+B;AAC/B,gCAA8B;;AC5B9B,CAAC;IACC,YAAY,CAAC;IAEb,IAAM,YAAY,GAAG;QACnB,QAAQ,EAAE;YACR,WAAW,EAAE,iBAAiB;YAC9B,sBAAsB,EAAE,kBAAkB;YAC1C,cAAc,EAAE,YAAY;SAC7B;QACD,UAAU,EAAE,kBAAkB;QAC9B,YAAY,EAAE,eAAe;QAC7B,WAAW,EAAE,gBAAgB;KAC9B,CAAA;IAED,OAAO;SACJ,MAAM,CAAC,cAAc,CAAC;SACtB,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC7C,CAAC,CAAC,EAAE,CAAC;;ACjBL,YAAY,CAAC;;AAIb,yBAAyB,SAAS;IAChC,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;IACxF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACjB,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE;YACjC,wBAAwB,EAAE,+BAA+B;SAC1D,CAAC,CAAC;QACH,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE;YACjC,wBAAwB,EAAE,2CAA2C;SACtE,CAAC,CAAC;IACL,CAAC;AACH,CAAC;AAED,mCAAmC,6BAA6B;IAC9D,6BAA6B,CAAC,gBAAgB,CAAC;QAC7C,CAAC;gBACG,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,CAAC;aACV;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,CAAC;aACV;SACF;QACD,CAAC;gBACG,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,CAAC;aACV;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,CAAC;aACV;YACD;gBACE,KAAK,EAAE,YAAY;gBACnB,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,CAAC;aACV;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAID;IAAA;IAKA,CAAC;IAAD,uBAAC;AAAD,CALA,AAKC,IAAA;AAED,IAAI,oBAAoB,GAAqB;IAC3C,SAAS,EAAE,GAAG;IACd,UAAU,EAAE,GAAG;IACf,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,KAAK;CACd,CAAC;AAEF;IAsCE,6BACE,MAAsB,EACtB,UAAqC,EACrC,MAAW,EACX,QAAa,EACb,QAAiC,EACjC,YAAyC,EACzC,qBAAiD,EACjD,iBAAyC;QAR3C,iBAuCC;QA5EO,4BAAuB,GAAQ,CAAC;gBACpC,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,UAAC,UAAU;oBACnB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAChC,CAAC;aACF;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,QAAQ,EAAE,UAAC,UAAU;oBACnB,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAC/B,CAAC;aACF;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,QAAQ,EAAE,UAAC,UAAU;oBACnB,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC;gBAC3D,CAAC;aACF;SACF,CAAC;QASM,gBAAW,GAAW,yDAAyD;YACrF,yFAAyF;YACzF,0BAA0B,CAAC;QAKtB,qBAAgB,GAAQ,IAAI,CAAC,uBAAuB,CAAC;QAoGrD,gBAAW,GAAG,UAAC,UAAU;YAC9B,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YACvC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAA;QA1FC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAG5C,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAGhC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,oBAAoB,CAAC;QAG1E,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;YAC9C,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;YAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAG9G,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAEO,4CAAc,GAAtB;QAAA,iBAyBC;QAxBC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,KAAK,EAAE,UAAU;YAC1C,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,IAAI,EAAE;gBACjD,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;oBAE5C,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI;wBAC3B,OAAO,EAAE,CAAC;wBACV,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;oBACrB,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC/B,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;oBAChC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;4BAC3B,KAAK,EAAE,QAAQ;4BACf,KAAK,EAAE,UAAC,IAAI,EAAE,MAAM,EAAE,MAAM;gCAC1B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;4BAC1C,CAAC;yBACF,CAAC,CAAC,CAAC;oBAEJ,MAAM,CAAC;wBACL,IAAI,EAAE,MAAM;wBACZ,QAAQ,EAAE,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC;qBACxE,CAAC;gBACJ,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,0CAAY,GAAnB,UAAoB,UAAU;QAA9B,iBA2BC;QA1BC,IAAI,CAAC,sBAAsB;aACxB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC;aACrC,IAAI,CAAC,UAAC,IAAI;YACT,IAAI,WAAW,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,WAAW,GAAG;oBACZ,KAAK,EAAE,WAAW;oBAClB,MAAM,EAAE,EAAE;iBACX,CAAC;YACJ,CAAC;YAED,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAElD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,CAAC;YAED,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IAOM,wCAAU,GAAlB,UAAmB,KAAK,EAAE,OAAO;QAC/B,OAAO,CAAC,OAAO,CAAC,UAAC,WAAW;YAC1B,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClB,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;wBAC9C,KAAK,CAAC,IAAI,CAAC;4BACT,IAAI,EAAE,MAAM,CAAC,IAAI;yBAClB,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAY,GAApB,UAAqB,IAAI,EAAE,MAAM,EAAE,MAAM;QAAzC,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,0BAAC;AAAD,CAnKA,AAmKC,IAAA;AAED,OAAO;KACJ,MAAM,CAAC,cAAc,CAAC;KACtB,MAAM,CAAC,yBAAyB,CAAC;KACjC,GAAG,CAAC,eAAe,CAAC;KACpB,UAAU,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;;AC9OvD,YAAY,CAAC;;AAEb;IAMI,sCACI,MAAM,EACN,gBAAgB,EAChB,UAAU,EACV,SAA0C;QAE1C,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,GAAG,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,cAAc,GAAK,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,KAAK;YACzC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAEM,0CAAG,GAAV;QACM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB,UAAU,EAAE,IAAI,CAAC,gBAAgB;YACjC,OAAO,EAAK,IAAI,CAAC,cAAc;SAChC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEC,6CAAM,GAAb;QACM,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAAA,CAAC;IAEC,+CAAQ,GAAf,UAAiB,UAAU,EAAE,WAAW;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC;QAC1D,MAAM,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAAA,CAAC;IAEK,+CAAQ,GAAf,UAAiB,UAAU,EAAE,WAAW;QAClC,IAAI,MAAM,GAAM,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5D,CAAC;IAAA,CAAC;IACN,mCAAC;AAAD,CAxCA,AAwCC,IAAA;AAxCY,oEAA4B;AA0CzC,OAAO;KACF,MAAM,CAAC,gCAAgC,EAAE,CAAC,YAAY,CAAC,CAAC;KACxD,UAAU,CAAC,0CAA0C,EAAE,4BAA4B,CAAC,CAAC;AAE1F,kCAAgC;;AChDhC,YAAY,CAAC;;AAMb;IAII,mCAAmB,UAAe,EAAE,SAA0C;QAC1E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAEM,wCAAI,GAAX,UAAY,MAAM,EAAE,gBAAgB;QAApC,iBAmBG;QAlBC,MAAM,CAAC,IAAI,CAAC,SAAS;aAClB,IAAI,CAAC;YACJ,WAAW,EAAO,yCAAyC;YAC3D,gBAAgB,EAAE,IAAI;YACtB,UAAU,EAAQ,0CAA0C;YAC5D,YAAY,EAAM,YAAY;YAC9B,OAAO,EAAE;gBACP,MAAM,EAAE;oBACN,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;gBACD,gBAAgB,EAAE;oBAChB,MAAM,CAAC,gBAAgB,CAAC;gBAC1B,CAAC;gBACD,UAAU,EAAE;oBACV,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;gBAC1B,CAAC;aACH;SACD,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACR,gCAAC;AAAD,CA7BA,AA6BC,IAAA;AAED;IAIE;QAFQ,gBAAW,GAAQ,IAAI,CAAC;QAKzB,qBAAgB,GAAG,UAAU,IAAI;YACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC;IAJF,CAAC;IAMM,yCAAI,GAAX,UAAY,SAA0C;QAChD,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC3B,CAAC;IACH,iCAAC;AAAD,CAnBA,AAmBC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,cAAc,CAAC;KACtB,QAAQ,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,CAAC;;AC5DnE,YAAY,CAAC;;AAEb;IAAA;IAEA,CAAC;IAAD,iBAAC;AAAD,CAFA,AAEC;AADU,cAAG,GAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AAGzE;IAAA;IAMA,CAAC;IAAD,gBAAC;AAAD,CANA,AAMC;AALU,aAAG,GAAQ;IACd,EAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAC;IACzB,EAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAC;IACxB,EAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAC;CAC5B,CAAC;AAGN;IAYI,sCACI,MAAM,EACN,SAA0C,EAC1C,QAAiC,EACjC,QAAiC,EACjC,SAAS,EACT,MAAsB,EACtB,UAAU;QACV,UAAU,CAAC;QAnBR,gBAAW,GAAW,WAAW,CAAC;QAIlC,WAAM,GAAa,UAAU,CAAC,GAAG,CAAC;QAClC,UAAK,GAAQ,SAAS,CAAC,GAAG,CAAC;QAC3B,WAAM,GAAW,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAexC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3E,CAAC;IAEM,8CAAO,GAAd;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,+CAAQ,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IACL,mCAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,oEAA4B;AAyCzC,OAAO;KACF,MAAM,CAAC,uBAAuB,EAAE,CAAC,YAAY,CAAC,CAAC;KAC/C,UAAU,CAAC,iCAAiC,EAAE,4BAA4B,CAAC,CAAC;AAEjF,iCAA+B;AAC/B,yCAAuC;;AC3DvC,CAAC;IACG,YAAY,CAAC;IAEb,kCACI,gBAAiD,EACjD,QAAiC;QAEjC,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,UAAC,MAAsB,EAAE,QAAa,EAAE,MAAW;gBACrD,gBAAgB,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBACtD,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,uBAAuB,CAAC;SAC/B,SAAS,CAAC,gCAAgC,EAAE,wBAAwB,CAAC,CAAC;AAE/E,CAAC,CAAC,EAAE,CAAC;;;;ACpBL;IAEI,mCAAmB,SAA0C;QACzD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IACM,wCAAI,GAAX,UAAY,MAAM,EAAE,eAA+B,EAAE,cAA2B;QAC3E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YACjB,WAAW,EAAE,MAAM,CAAC,KAAK;YACzB,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,yCAAyC;YAC5E,UAAU,EAAE,iCAAiC;YAC7C,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC;YACxB,mBAAmB,EAAE,IAAI;SAC3B,CAAC;aACF,IAAI,CAAC,UAAC,GAAG;YACN,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBAClB,eAAe,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;QACL,CAAC,EAAE;YACC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACjB,cAAc,EAAE,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,gCAAC;AAAD,CAxBA,AAwBC,IAAA;AAGD,CAAC;IACC,YAAY,CAAC;IAEb,OAAO;SACJ,MAAM,CAAC,uBAAuB,CAAC;SAC/B,OAAO,CAAC,8BAA8B,EAAE,yBAAyB,CAAC,CAAC;AAExE,CAAC,CAAC,EAAE,CAAC;;;;ACtCL,CAAC;IACC,YAAY,CAAC;IAEb,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACnC,CAAC,CAAC,EAAE,CAAC;AAEL,kCAAgC;AAChC,iCAA+B;AAC/B,gCAA8B;AAC9B,wDAAqD;AACrD,0DAAuD;;ACVvD,YAAY,CAAC;;AAIb,+DAAiG;AACjG,2FAA0H;AAE1H,IAAI,2BAA2B,GAAW,CAAC,CAAC;AACjC,QAAA,kBAAkB,GAAW,GAAG,CAAC;AACjC,QAAA,mBAAmB,GAAW,GAAG,CAAC;AAClC,QAAA,mBAAmB,GAAG,gCAAgC,CAAC;AAElE,IAAI,eAAe,GAAG;IAClB,SAAS,EAAgB,0BAAkB;IAC3C,UAAU,EAAe,2BAAmB;IAC5C,MAAM,EAAmB,EAAE;IAC3B,SAAS,EAAgB,kCAAkC;IAE3D,mBAAmB,EAAM,iBAAiB;IAC1C,uBAAuB,EAAE,uCAAuC;CACnE,CAAC;AAEF;IAoBE,6BACE,MAAsB,EACtB,UAAqC,EACrC,QAAiC,EACjC,QAAiC,EACjC,QAAa,EACb,WAA6B,EAC7B,YAA+B,EAC/B,QAAmC;QARrC,iBA0DC;QA3EM,uBAAkB,GAAQ,IAAI,CAAC;QAC/B,mBAAc,GAAY,IAAI,CAAC;QAC/B,eAAU,GAAQ,IAAI,CAAC;QAyB5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,gBAAgB,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,eAAe,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC;QAErH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,UAAU;YACzE,MAAM,CAAC;gBACL,KAAK,EAAG,KAAK,CAAC,KAAK;gBACnB,WAAW,EAAG,KAAK;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAI;oBAC5B,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;oBAC7E,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACrC,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;oBAE/C,MAAM,CAAC,2CAAoB,CAAC,sCAAe,EAAE;wBAC3C,GAAG,EAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;wBAC3C,OAAO,EAAE,IAAI,CAAC,IAAI;wBAClB,IAAI,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI;qBACxB,CAAC,CAAC;gBACL,CAAC,CAAC;aACH,CAAC;QACJ,CAAC,CAAC,CAAC;QAGH,MAAM,CAAC,MAAM,CAAC,8BAA8B,EAAE,UAAC,MAAM;YACnD,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QAGT,IAAI,CAAC,UAAU,EAAE,CAAC;QAGlB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC;YAChC,KAAI,CAAC,cAAc,GAAK,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACjD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;YAEtE,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;gBAC5B,KAAK;qBACF,mBAAmB,CAAC,KAAI,CAAC,gBAAgB,CAAC;qBAC1C,YAAY,CAAC,KAAI,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;qBACnE,kBAAkB,EAAE;qBACpB,mBAAmB,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAGO,mCAAK,GAAb,UAAc,MAAM;QAApB,iBA6CC;QA5CG,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,iBAAiB,GAAG,IAAI,CAAC;QAE7B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAEzC,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAE1B,MAAM,CAAC;QACT,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvC,IAAM,eAAe,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3E,EAAE,CAAC,CAAC,eAAe,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzF,iBAAiB,GAAG,CAAC,CAAC;gBAEtB,EAAE,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxB,IAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;oBAEzE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAI;wBACpB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAE/G,IAAI,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACzI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBAChC,IAAI,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAED,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC;IACL,CAAC;IAGM,0CAAY,GAAnB,UAAoB,KAAK,EAAE,KAAK;QAC5B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC;IACL,CAAC;IAEM,2CAAa,GAApB,UAAsB,KAAK;QACvB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEM,8CAAgB,GAAvB,UAAyB,KAAK;QAA9B,iBAOC;QANC,IAAI,CAAC,SAAS,CAAC;YACb,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,2BAAmB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;YAE9D,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAChF,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAEM,kDAAoB,GAA3B,UAA6B,KAAK,EAAE,KAAK;QACvC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAGO,kDAAoB,GAA5B,UAA6B,UAAkB,EAAE,MAAY;QAC3D,MAAM,CAAA,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,KAAK,UAAU;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC7E,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC9D,CAAC;gBACD,KAAK,CAAC;YACR,KAAK,UAAU;gBACP,IAAA;;;;;iBAKL,EALM,wBAAS,EAAE,oBAAO,EAAE,4BAAW,EAAE,gCAAa,CAKpD;gBACD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;gBAEvF,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAClC,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAGO,yCAAW,GAAnB,UAAoB,KAAK,EAAE,OAAO,EAAE,SAAS;QAC3C,IAAM,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEvD,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,KAAK;YACpB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7B,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAEO,0CAAY,GAApB,UAAqB,SAAS,EAAE,MAAO;QACrC,IAAM,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAChD,UAAU,GAAG,MAAM,KAAK,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;QAE/F,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI,EAAE,KAAK;YACxB,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YAChD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAY,GAApB,UAAqB,SAAS;QAA9B,iBA4BC;QA3BC,IAAM,aAAa,GAAG,EAAE,EAClB,MAAM,GAAG,EAAE,EACX,UAAU,GAAG,EAAE,CAAC;QAGtB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,KAAK;YAC7B,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,CAAC,IAAO,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,CAAA,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5E,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,UAAC,KAAK;YAClC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7B,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;YACjB,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;QAEpC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,SAAS,EAAE,KAAK;YAC3C,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,WAAW;QAA5B,iBA6BC;QA5BC,IAAI,KAAK,GAAG;YACV,KAAK,EAAG,WAAW,CAAC,KAAK;YACzB,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAI;gBAClC,IAAI,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;gBACzF,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE;gBAC/F,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClH,MAAM,CAAC,2CAAoB,CAAC,sCAAe,EAAE;oBAC3C,GAAG,EAAM,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;oBACjD,OAAO,EAAE,IAAI,CAAC,IAAI;oBAClB,IAAI,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI;iBACxB,CAAC,CAAC;YACL,CAAC,CAAC;SACH,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,KAAI,CAAC,UAAU,CAAC,IAAI,CAClB,kDAAqB,CAAC,6CAAgB,EAAE,KAAK,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBAC7I,YAAY,CAAC,KAAI,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;iBACnE,kBAAkB,EAAE;iBACpB,mBAAmB,EAAE,CACzB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,QAAQ,EAAE,KAAK,EAAE,cAAc;QAAzD,iBAmBC;QAlBC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;YACpB,IAAM,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;YAC3F,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE;YAC/F,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAElH,IAAM,OAAO,GAAG,2CAAoB,CAAC,sCAAe,EAAC;gBACnD,GAAG,EAAM,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;gBACjD,OAAO,EAAE,IAAI,CAAC,IAAI;gBAClB,IAAI,EAAK,IAAI,CAAC,IAAI,CAAC,IAAI;aACxB,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAEvB,CAAC,CAAC,OAAO,CAAC;iBACP,QAAQ,CAAC,oBAAoB,CAAC;iBAC9B,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;iBACrC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gDAAkB,GAA1B,UAA2B,YAAY;QAAvC,iBAQC;QAPC,YAAY,CAAC,OAAO,CAAC,UAAC,WAAW;YAC/B,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,WAAW;gBACrC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;oBAC5B,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,6CAAe,GAAvB,UAAwB,UAAU,EAAE,IAAI,EAAE,gBAAgB;QAA1D,iBAOC;QANC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK;YACjC,MAAM,CAAC,kDAAqB,CAAC,6CAAgB,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAI,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBAC/G,YAAY,CAAC,KAAI,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;iBACnE,kBAAkB,EAAE;iBACpB,mBAAmB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,YAAa,EAAE,WAAY;QAArD,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;YAC5B,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAC5E,CAAC;YAED,KAAK;iBACF,kBAAkB,CAAC,YAAY,EAAE,WAAW,CAAC;iBAC7C,mBAAmB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,+CAAiB,GAAzB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAEO,iDAAmB,GAA3B,UAA4B,cAAc;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,cAAc,GAAG,2BAA2B;cAC5E,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEO,mDAAqB,GAA7B,UAA8B,IAAI;QAChC,IAAM,MAAM,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;YAC5B,IAAM,SAAS,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAE5C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBACxB,MAAM,CAAC,MAAM,CAAC,GAAI,SAAS,CAAC;gBAC5B,MAAM,CAAC;YACT,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEO,yDAA2B,GAAnC,UAAoC,cAAc;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,cAAc,GAAG,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpG,CAAC;IAEO,iDAAmB,GAA3B,UAA4B,KAAK;QAC/B,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEhE,IAAI,CAAC,SAAS,GAAY,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,GAAU,cAAc,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QAElD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAEzC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAEO,gDAAkB,GAA1B,UAA2B,KAAK;QAAhC,iBA6BC;QA5BC,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAM,CAAC,GAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;QAC/D,IAAM,CAAC,GAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;QAE9D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAEjD,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,GAAI,CAAC,GAAG,IAAI,CAAC;QAE7B,IAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC;YAChE,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI;YAC7C,GAAG,EAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG;SAC7C,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAErB,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,IAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChF,IAAM,cAAc,GAAK,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAE5E,EAAE,CAAC,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC;YACT,CAAC;YAED,IAAI,CAAC,kBAAkB;iBACpB,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;iBACzC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9C,IAAI,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;IAEO,+CAAiB,GAAzB;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAU,IAAI,CAAC;IACjC,CAAC;IAEO,gDAAkB,GAA1B;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC;QAE7D,MAAM,CAAC;YACL,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,GAAG,EAAG,aAAa,CAAC,GAAG;SACxB,CAAC;IACJ,CAAC;IAEO,sDAAwB,GAAhC;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,SAAS;YAChC,SAAS,CAAC,mBAAmB,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,IAAI,EAAE,EAAE,EAAE,IAAI;QAC7B,IAAI,IAAI,CAAC;QACT,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;QACvF,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE;QAC/F,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAEtH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;aACzD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;aACzB,MAAM,EAAE,CAAC;QAEZ,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAEtB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YAEtD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;iBACvD,MAAM,CAAC,IAAI,CAAC,CAAC;YAEhB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;IAC/E,CAAC;IAEO,4CAAc,GAAtB,UAAuB,KAAK;QAC1B,IAAM,iBAAiB,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QACzE,IAAM,YAAY,GAAQ,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAE7D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,KAAK,YAAY,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAEO,uDAAyB,GAAjC,UAAkC,KAAK;QAAvC,iBAWC;QAVC,IAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9B,IAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACvE,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAEO,iDAAmB,GAA3B,UAA4B,KAAK;QAC/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;QACtD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1D,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC3D,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAEO,sDAAwB,GAAhC,UAAiC,KAAK;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC7D,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAEO,iDAAmB,GAA3B,UAA4B,KAAK;QAC/B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC/D,CAAC;IAEO,wCAAU,GAAlB;QAAA,iBAyCC;QAxCC,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,cAAc,GAAK,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACjD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;YACtE,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,KAAI,CAAC,UAAU,GAAS,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;YAE5F,QAAQ,CAAC,qBAAqB,CAAC;iBAC5B,SAAS,CAAC;gBAET,UAAU,EAAE,IAAI;gBAChB,OAAO,EAAE,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBACvD,MAAM,EAAG,UAAC,KAAK,IAAO,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBACtD,KAAK,EAAI,UAAC,KAAK,IAAO,KAAI,CAAC,iBAAiB,EAAE,CAAA,CAAC,CAAC;aACjD,CAAC,CAAC;YAEL,QAAQ,CAAC,iCAAiC,CAAC;iBACxC,QAAQ,CAAC;gBACR,MAAM,EAAE,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAE,KAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBAClF,WAAW,EAAO,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBAChE,gBAAgB,EAAE,UAAC,KAAK,IAAO,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBACrE,WAAW,EAAO,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;aACjE,CAAC,CAAA;YAEJ,QAAQ,CAAC,sBAAsB,CAAC;iBAC7B,QAAQ,CAAC;gBACR,MAAM,EAAY,UAAC,KAAK,IAAO,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBAC3D,WAAW,EAAO,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBAChE,gBAAgB,EAAE,UAAC,KAAK,IAAO,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;gBACrE,WAAW,EAAO,UAAC,KAAK,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;aACjE,CAAC,CAAC;YAEL,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC;iBACvB,EAAE,CAAC,sBAAsB,EAAE,yBAAyB,EAAE;gBACrD,QAAQ,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACjD,CAAC,CAAC,KAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC;iBACD,EAAE,CAAC,kBAAkB,EAAE;gBACtB,QAAQ,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAEL,0BAAC;AAAD,CArhBA,AAqhBC,IAAA;AAGD,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,UAAU,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;;AChjBzD,YAAY,CAAC;AAEb,OAAO;KACJ,MAAM,CAAC,YAAY,CAAC;KACpB,SAAS,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;AAEhD;IACE,MAAM,CAAC;QACL,QAAQ,EAAE,GAAG;QACb,KAAK,EAAE;YACL,cAAc,EAAE,oBAAoB;YACpC,YAAY,EAAE,kBAAkB;YAChC,OAAO,EAAE,mBAAmB;YAC5B,gBAAgB,EAAE,sBAAsB;SACzC;QACD,WAAW,EAAE,0BAA0B;QACvC,gBAAgB,EAAE,IAAI;QACtB,YAAY,EAAE,eAAe;QAC7B,UAAU,EAAE,kBAAkB;QAC9B,IAAI,EAAE,UAAU,MAAM,EAAE,KAAK;YAC3B,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;KACF,CAAC;AACJ,CAAC;;ACvBD,YAAY,CAAC;;AAMb,8BAAqC,WAAgC,EAAE,OAAY;IACjF,MAAM,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AAClC,CAAC;AAFD,oDAEC;AAqBD,IAAI,iBAAiB,GAAG;IACtB,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,CAAC;CACX,CAAC;AAEF;IAOE,yBAAa,OAAY;QACvB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,iCAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,iCAAO,GAAd,UAAe,KAAK,EAAE,MAAM;QAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;aACf,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,qCAAW,GAAlB,UAAmB,IAAI,EAAE,GAAG;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,EAAE,IAAI;gBACV,GAAG,EAAE,GAAG;aACT,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,6CAAmB,GAA1B;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAAA,CAAC;IAEK,oCAAU,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,iCAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAAA,CAAC;IAEK,mCAAS,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;aACtB,QAAQ,CAAC,qBAAqB,CAAC;aAC/B,GAAG,CAAC;YACH,QAAQ,EAAE,UAAU;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;YAC3B,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;QAEL,IAAI,CAAC,IAAI;aACN,QAAQ,CAAC,cAAc,CAAC;aACxB,GAAG,CAAC;YACH,MAAM,EAAE,MAAM;SACf,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,kCAAQ,GAAf,UAAgB,SAAS;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI;iBACN,WAAW,CAAC,cAAc,CAAC;iBAC3B,GAAG,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBAC9B,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;aAC7B,CAAC;iBACD,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QAC1C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBAC9B,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;gBAC5B,MAAM,EAAE,EAAE;aACX,CAAC;iBACD,WAAW,CAAC,cAAc,CAAC,CAAC;YAE/B,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;QAEZ;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC;YAED,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;iBACjB,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAAA,CAAC;IAEK,4CAAkB,GAAzB,UAA0B,MAAM;QAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAAA,CAAC;IAEK,oCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3B,CAAC;IAAA,CAAC;IAEK,oCAAU,GAAjB,UAAkB,OAAO;QACvB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IACJ,sBAAC;AAAD,CArIA,AAqIC,IAAA;AArIY,0CAAe;AAuI5B,OAAO;KACJ,MAAM,CAAC,YAAY,CAAC;KACpB,OAAO,CAAC,aAAa,EAAE;IACtB,MAAM,CAAC,UAAU,OAAO;QACtB,IAAI,OAAO,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC;QAE3C,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC,CAAA;AACH,CAAC,CAAC,CAAC;;ACjLL,YAAY,CAAC;AAEb,OAAO;KACJ,MAAM,CAAC,YAAY,CAAC;KACpB,SAAS,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;AAEjD;IACE,MAAM,CAAC;QACL,QAAQ,EAAE,GAAG;QACb,IAAI,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE,KAAK;YAClC,IAAI,OAAO,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;YAChD,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAElD,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;gBAC1B,IAAI,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;gBACpD,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAEtB,uBAAuB,IAAI;gBACzB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;qBACd,QAAQ,CAAC,oBAAoB,CAAC;qBAC9B,MAAM,CAAC,IAAI,CAAC;qBACZ,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC;QACH,CAAC;KACF,CAAC;AACJ,CAAC;;AC5BD,YAAY,CAAC;;AAMb,+BAAsC,WAAiC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI;IACpG,MAAM,CAAC,IAAI,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACxD,CAAC;AAFD,sDAEC;AAkCD,IAAI,qBAAqB,GAAG,CAAC,CAAC;AAE9B;IASE,0BAAY,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI;QAJlC,cAAS,GAAQ,EAAE,CAAC;QACpB,WAAM,GAAY,KAAK,CAAC;QAI7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,OAAO,KAAK,qBAAqB,CAAC;IAC1D,CAAC;IAEM,kCAAO,GAAd,UAAe,IAAI;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,4CAAiB,GAAxB,UAAyB,GAAG,EAAE,GAAG;QAC/B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAAA,CAAC;IAEK,mCAAQ,GAAf,UAAgB,QAAQ,EAAE,OAAO,EAAE,OAAO;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAClE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAAA,CAAC;IAEK,mDAAwB,GAA/B,UAAgC,QAAQ,EAAE,OAAO,EAAE,OAAO;QACxD,IAAI,cAAc,CAAC;QACnB,IAAI,eAAe,CAAC;QACpB,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;QAC7C,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAG1C,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAEtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE1E,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC3C,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChF,CAAC;YACH,CAAC;QACH,CAAC;QAGD,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,YAAY,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;YAE1D,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC5D,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;YACnE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,CAAC,IAAI,YAAY,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;gBACnE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,CAAC,IAAI,YAAY,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACpE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACnE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACrC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;wBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACnE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;wBACzD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5D,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,CAAC,IAAI,YAAY,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;wBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACnE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;wBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBACnE,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC;QAGD,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAChD,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC5D,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;QACvE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;gBACvE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;oBAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;gBACvE,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,CAAC;QACH,CAAC;QAED,MAAM,CAAC;YACL,KAAK,EAAE,cAAc;YACrB,GAAG,EAAE,eAAe;SACrB,CAAC;IACJ,CAAC;IAAA,CAAC;IAEK,kCAAO,GAAd,UAAe,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;QAC7C,IAAI,IAAI,CAAC;QACT,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QAER,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAExB,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,EAAE,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC;gBAC1C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC7B,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC1B,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAGD,GAAG,CAAC,CAAC,GAAG,GAAG,QAAQ,EAAE,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC;YAC1C,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;gBAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChC,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;IACH,CAAC;IAAA,CAAC;IAEK,kDAAuB,GAA9B,UAA+B,QAAQ,EAAE,OAAO,EAAE,OAAO;QACvD,IAAI,cAAc,CAAC;QACnB,IAAI,eAAe,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;QAG7C,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAEtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE1E,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC3C,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChF,CAAC;YACH,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACrD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;QAClE,CAAC;QAED,MAAM,CAAC;YACL,KAAK,EAAE,cAAc;YACrB,GAAG,EAAE,eAAe;SACrB,CAAC;IACJ,CAAC;IAAA,CAAC;IAEK,sCAAW,GAAlB,UAAmB,QAAQ;QACzB,IAAI,QAAQ,CAAC;QAEb,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,GAAG,QAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,QAAQ,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;YACtE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;QACH,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAAA,CAAC;IAEK,qCAAU,GAAjB,UAAkB,GAAG,EAAE,GAAG;QACxB,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACxC,CAAC;IAAA,CAAC;IAEK,uCAAY,GAAnB,UAAoB,OAAO;QACzB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,KAAK,CAAC;QAEV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,QAAQ;YACnC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,UAAC,IAAI;gBACjD,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC;YACT,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IAClC,CAAC;IAAA,CAAC;IAEK,uCAAY,GAAnB,UAAoB,KAAK,EAAE,GAAG,EAAE,IAAI;QAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG;YACzB,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG;oBAC9C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACnB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEK,wCAAa,GAApB;QACE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG;YACzB,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI;gBACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;IAEK,8CAAmB,GAA1B,UAA2B,OAAO;QAChC,IAAI,CAAC,cAAc,GAAG,OAAO,KAAK,qBAAqB,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,uCAAY,GAAnB,UAAoB,eAAgB;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,SAAS,GAAG,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACvD,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC,qBAAqB,EAAE,CAAC;QAC1F,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK,EAAE,QAAQ;YACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAE9B,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEhC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7B,aAAa,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC;gBAC1C,CAAC;gBAGD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClD,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;wBAC9E,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,uBAAuB,YAAY;YAC/B,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjC,IAAI,EAAE,CAAC;oBACP,SAAS,GAAG,CAAC,CAAC;oBAEd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC/B,SAAS,GAAG,EAAE,CAAC;gBACjB,CAAC;gBAED,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC7F,IAAI,IAAI,GAAG,SAAS,GAAG,SAAS,GAAG,CAAC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAGlF,SAAS,CAAC,IAAI,CAAC;oBACb,GAAG,EAAE,GAAG;oBACR,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU;oBAClC,KAAK,EAAE,IAAI,GAAG,SAAS;oBACvB,GAAG,EAAE,IAAI;oBACT,GAAG,EAAE,SAAS;iBACf,CAAC,CAAC;gBAEH,SAAS,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,6CAAkB,GAAzB,UAA0B,YAAY,EAAE,WAAW;QACjD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,QAAQ,CAAC;QAEb,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;YACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,SAAS,CAAC;YACd,IAAI,KAAK,CAAC;YACV,IAAI,MAAM,CAAC;YACX,IAAI,KAAK,CAAC;YAEV,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrF,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAChG,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAClD,CAAC;gBAGD,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClB,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC;oBACzC,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC;gBAC5C,CAAC;gBAED,QAAQ,GAAG,SAAS,CAAC;gBAErB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBAE9C,SAAS,EAAE,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACpE,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;gBAExB,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC3C,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC9C,CAAC;gBAED,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;gBAErB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAEhD,SAAS,IAAI,CAAC,CAAC;YACjB,CAAC;YAID,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,kBAAkB,CAAC;oBACtB,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,GAAG,EAAE,SAAS,CAAC,GAAG;iBACnB,CAAC,CAAC;gBAEH,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC9B,CAAC;YAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,8CAAmB,GAA1B;QACE,IAAI,aAAa,EAAE,YAAY,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI;YACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACjC,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC;QAEhB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;QAEzE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI;gBACtC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;YACxC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QACxE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,wCAAa,GAApB,UAAqB,IAAI;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;YACrC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,CAAC;IAAA,CAAC;IAEK,+CAAoB,GAA3B,UAA4B,MAAM,EAAE,WAAW;QAC7C,MAAM,CAAC,IAAI,CAAC,KAAK;aACd,MAAM,CAAC,UAAC,IAAI;YACX,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAE9B,MAAM,CAAC,IAAI,KAAK,WAAW;gBACzB,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC/E,QAAQ,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IAClB,CAAC;IAAA,CAAC;IAEK,uCAAY,GAAnB,UAAoB,IAAI;QACtB,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAAA,CAAC;IAEK,oCAAS,GAAhB,UAAiB,SAAS,EAAE,UAAU;QACpC,IAAI,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,eAAe,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAE1D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAA,CAAC;IAEK,qCAAU,GAAjB,UAAkB,UAAU;QAC1B,IAAI,WAAW,CAAC;QAEhB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK,EAAE,KAAK;YACpC,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxB,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAAA,CAAC;IAEK,4CAAiB,GAAxB,UAAyB,IAAI;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI;YACvC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,IAAI,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAAA,CAAC;IACJ,uBAAC;AAAD,CAjeA,AAieC,IAAA;AAjeY,4CAAgB;AAme7B,OAAO;KACJ,MAAM,CAAC,YAAY,CAAC;KACpB,OAAO,CAAC,cAAc,EAAE;IACvB,MAAM,CAAC,UAAU,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI;QAC5C,IAAI,OAAO,GAAG,IAAI,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAElE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC,CAAA;AACH,CAAC,CAAC,CAAC;;;;AClhBL;IAKI,+BACI,YAAyC,EACzC,QAAiC,EACjC,gBAAiD;QAEjD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC9C,CAAC;IAEM,2CAAW,GAAlB,UAAmB,MAAM,EAAE,GAAK,EAAG,SAAW,EAAG,aAAe;QAAhE,iBA0BC;QAxBO,IAAA,0BAAQ,EACR,gCAAW,EACX,kBAAI,CACG;QACX,IAAI,MAAM,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,IAAM,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;YAClG,MAAM,CAAC,aAAa,IAAI,IAAI;gBACxB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBACpF,YAAY,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACtF,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACjD,MAAM,GAAG,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,iDAAiB,GAAxB,UAAyB,QAAQ,EAAE,KAAK;QACpC,IACI,cAAc,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAG,QAAQ,CAAC,WAAW,EACzE,eAAe,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,YAAY,EAC7E,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,KAAK,EACnF,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,MAAM,EACtF,MAAM,GAAG,CAAC,EACV,SAAS,GAAG,EAAE,CAAC;QAEnB,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAClE,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,WAAW,GAAG,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;YAC9C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC;YAClD,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,UAAU,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC;YAC5E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,GAAG,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;YAC7C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,cAAc,GAAG,UAAU,GAAG,IAAI,CAAC;YAC5E,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;YAChD,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QAClC,CAAC;QAED,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC5B,CAAC;IACL,4BAAC;AAAD,CApEA,AAoEC,IAAA;AAGD,mBAAmB,MAAM;IACrB,MAAM,CAAC;QACH,QAAQ,EAAE,GAAG;QACb,IAAI,EAAE,UAAS,KAAK,EAAE,OAAO,EAAE,KAAK;YAChC,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC1C,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;gBACvB,QAAQ,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAA;AACL,CAAC;AAED,OAAO;KACF,MAAM,CAAC,cAAc,CAAC;KACtB,OAAO,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;KACnD,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;;;;AC3F1C,CAAC;IACC,YAAY,CAAC;IAEb,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAClC,CAAC,CAAC,EAAE,CAAC;AAEL,qCAAmC;AACnC,+BAA6B;AAC7B,oCAAkC;AAClC,sCAAoC;AACpC,+BAA6B;AAC7B,qCAAmC;AACnC,yCAAuC;AACvC,gDAA8C;;;;;;;;;;;;;;ACb9C,+DAA8D;AAG9D;IAAuC,4CAAiB;IAMtD,kCACE,aAAkB,EAClB,MAAsB,EACtB,4BAAkD;QAHpD,YAKI,iBAAO,SAYV;QAnBM,WAAK,GAAW,MAAM,CAAC;QAQ1B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;QAElD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC;YAC9F,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;oBAC5C,KAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,CAAC,EAAC,CAAC,CAAC;YACJ,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YAC1D,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC;QACnD,CAAC;;IACL,CAAC;IAEO,gDAAa,GAArB;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACtB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,YAAY,EAAE,6CAA6C;SAC5D,EAAE,UAAC,MAAW;YACb,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,+BAAC;AAAD,CAxCA,AAwCC,CAxCsC,qCAAiB,GAwCvD;AAED,CAAC;IAEC,IAAI,iBAAiB,GAAG;QACpB,QAAQ,EAAU;YAChB,OAAO,EAAE,aAAa;SACvB;QACD,UAAU,EAAQ,wBAAwB;QAC1C,YAAY,EAAM,YAAY;QAC9B,WAAW,EAAO,sCAAsC;KAC3D,CAAA;IAED,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAEvD,CAAC,CAAC,EAAE,CAAC;;;;;;;;;;;;;;AC5DL,+DAA6D;AAG7D;IAAoC,yCAAiB;IAUnD,+BACE,aAAkB,EAClB,MAAsB,EACtB,QAAa,EACb,QAAiC,EACjC,4BAAkD;QALpD,YAOE,iBAAO,SAsBR;QAhCM,WAAK,GAAW,MAAM,CAAC;QACvB,aAAO,GAAW,IAAI,CAAC;QAU5B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,KAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;QAElD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvF,CAAC;QAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;gBACxC,KAAI,CAAC,aAAa,EAAE,CAAC;YAC3B,CAAC,EAAC,CAAC,CAAC;QACJ,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC;QACjD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,CAAC;QAEvD,KAAI,CAAC,SAAS,EAAE,CAAC;QAGjB,MAAM,CAAC,MAAM,CAAC,cAAQ,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAC,MAAM;YAC9D,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;;IACL,CAAC;IAEO,yCAAS,GAAjB;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC;gBACb,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/C,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IAEO,6CAAa,GAArB;QAAA,iBAyBC;QAxBC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACtB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,EAAC,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC;YACtD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK;YAC5B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,UAAC,OAAO;gBACrB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC;YACD,YAAY,EAAE,0CAA0C;SACzD,EAAE,UAAC,MAAW;YACb,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACrC,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,SAAS,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3C,CAAC,EAAE;YACD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2CAAW,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAEM,0CAAU,GAAjB,UAAkB,MAAM;QAAxB,iBASC;QARC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAE5C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC;gBACb,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9E,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IAGO,iDAAiB,GAAzB,UAA0B,QAAQ,EAAE,KAAK;QACvC,IACE,cAAc,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAG,QAAQ,CAAC,WAAW,EACzE,eAAe,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,YAAY,EAC7E,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,KAAK,CAAC,KAAK,EACjD,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,EACpD,MAAM,GAAG,CAAC,EACV,SAAS,GAAG,EAAE,CAAC;QAEjB,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpE,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,WAAW,GAAG,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;YAC9C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC;YAClD,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,UAAU,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC;YAC5E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,GAAG,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;YAC7C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,cAAc,GAAG,UAAU,GAAG,IAAI,CAAC;YAC5E,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;YAChD,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QAChC,CAAC;QAED,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC;IACH,4BAAC;AAAD,CArHA,AAqHC,CArHmC,qCAAiB,GAqHpD;AAGD,CAAC;IACC,IAAI,cAAc,GAAI;QAClB,QAAQ,EAAE;YACR,OAAO,EAAE,aAAa;SACvB;QACD,UAAU,EAAE,qBAAqB;QACjC,YAAY,EAAE,YAAY;QAC1B,WAAW,EAAE,gCAAgC;KAChD,CAAA;IAED,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACjD,CAAC,CAAC,EAAE,CAAC;;ACxIL,CAAC;IACC,YAAY,CAAC;IAEb,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;IAE7C;QACE,MAAM,CAAC;YACL,QAAQ,EAAU,IAAI;YACtB,WAAW,EAAO,8BAA8B;SACjD,CAAC;IACJ,CAAC;AACH,CAAC,CAAC,EAAE,CAAC;;;;ACZL;IAiCE;QACE,UAAU,CAAC;QAjCN,SAAI,GAAQ;YACjB;gBACE,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,OAAO,CAAC,IAAI;gBACpB,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,YAAY;wBACpB,MAAM,EAAE;4BACN,KAAK,EAAE,CAAC;4BACR,KAAK,EAAE,CAAC;yBACT;qBACF;oBACD;wBACE,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,YAAY;wBACpB,MAAM,EAAE;4BACN,KAAK,EAAE,CAAC;4BACR,KAAK,EAAE,CAAC;yBACT;qBACF;oBACD;wBACE,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,YAAY;wBACpB,MAAM,EAAE;4BACN,KAAK,EAAE,CAAC;4BACR,KAAK,EAAE,CAAC;yBACT;qBACF;iBACF;aACF;SACF,CAAC;IAIF,CAAC;IAEM,sCAAU,GAAjB,UAAkB,UAAU,EAAE,MAAM,EAAE,IAAI;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAAA,CAAC;IAEK,sCAAU,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;IAC9C,CAAC;IAAA,CAAC;IACJ,wBAAC;AAAD,CAnDA,AAmDC,IAAA;AAnDY,8CAAiB;AAqD9B;IAGI;IACA,CAAC;IAEK,iCAAI,GAAX;QACK,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAE5C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,yBAAC;AAAD,CAdA,AAcC,IAAA;AAED,CAAC;IACC,YAAY,CAAC;IAEb,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;AACnD,CAAC,CAAC,EAAE,CAAC;;AC5EL,YAAY,CAAC;;;;;;;;;;;;AAEb,+DAA8D;AAG9D;IAAoC,yCAAiB;IAMnD,+BACE,aAAkB,EAClB,MAAsB,EACtB,4BAAkD;QAHpD,YAKI,iBAAO,SAYV;QAnBM,WAAK,GAAW,QAAQ,CAAC;QAQ5B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;QAElD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC;QAChG,CAAC;QAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;gBAC1C,KAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC,EAAC,CAAC,CAAC;QACJ,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC;;IACrD,CAAC;IAEO,6CAAa,GAArB;QAAA,iBAeC;QAdC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACtB,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK;YAC5B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,YAAY,EAAE,0CAA0C;SACzD,EAAE,UAAC,MAAW;YACb,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IACH,4BAAC;AAAD,CAzCA,AAyCC,CAzCmC,qCAAiB,GAyCpD;AAEC,IAAI,cAAc,GAAG;IACjB,QAAQ,EAAa;QACnB,OAAO,EAAE,aAAa;KACvB;IACD,UAAU,EAAQ,qBAAqB;IACvC,YAAY,EAAM,YAAY;IAC9B,WAAW,EAAO,gCAAgC;CACrD,CAAA;AAED,OAAO;KACJ,MAAM,CAAC,WAAW,CAAC;KACnB,SAAS,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;AC3DjD,YAAY,CAAC;;;;;;;;;;;;AAEb,+DAEmC;AAQnC;IAAsC,2CAAiB;IAUrD,iCACE,aAAkB,EAClB,MAAsB,EACtB,QAAa,EACb,QAAiC,EACjC,4BAAkD,EAClD,iBAAyC;QAN3C,YAQE,iBAAO,SAUR;QArBM,mBAAa,GAAW,QAAQ,CAAC;QACjC,uBAAiB,GAAW,IAAI,CAAC;QAWtC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;QAClD,KAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;QACxC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,aAAa,IAAI,KAAI,CAAC,aAAa,CAAC;YACzE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,iBAAiB,IAAI,KAAI,CAAC,iBAAiB,CAAC;QACvF,CAAC;;IACH,CAAC;IAEM,6CAAW,GAAlB,UAAmB,MAAM;QAAzB,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4CAAU,GAAjB,UAAkB,MAAM;QAAxB,iBASC;QARC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAE5C,IAAI,CAAC,SAAS,CAAC;YACb,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,UAAC,KAAK;gBACvC,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IACH,8BAAC;AAAD,CA9CA,AA8CC,CA9CqC,qCAAiB,GA8CtD;AAED,IAAI,sBAAsB,GAAG;IAC3B,QAAQ,EAAE;QACR,OAAO,EAAE,aAAa;QACtB,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;KACX;IACD,UAAU,EAAE,uBAAuB;IACnC,WAAW,EAAE,iDAAiD;IAC9D,YAAY,EAAE,YAAY;CAC3B,CAAA;AAED,OAAO;KACJ,MAAM,CAAC,WAAW,CAAC;KACnB,SAAS,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;;;;;;;;;;;;;;ACzE/D,+DAEmC;AAKnC;IAAuC,4CAAiB;IAQtD,kCACE,aAAkB,EAClB,MAAsB,EACtB,QAAiC,EACjC,QAAa,EACb,4BAAkD,EAClD,qBAA0B;QAN5B,YAQE,iBAAO,SAiCR;QA3CM,kBAAY,GAAY,IAAI,CAAC;QAWlC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,KAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;QAClD,KAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC;QAE7C,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvF,CAAC;QAED,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,KAAK,EAAE,aAAa;YACpB,KAAK,EAAE;gBACL,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;QACH,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,KAAK,EAAE,iBAAiB;YACxB,KAAK,EAAE;gBACL,KAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;QAEH,KAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;QAEhF,MAAM,CAAC,MAAM,CAAC,6BAA6B,EAAE;YAC3C,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAGH,MAAM,CAAC,MAAM,CAAC,cAAQ,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,UAAC,MAAM;YAC9D,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC;gBAAC,KAAI,CAAC,cAAc,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;;IACL,CAAC;IAEO,gDAAa,GAArB;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACtB,WAAW,EAAE,qBAAqB;YAClC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;YAC1B,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY;YAC1C,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,6CAA6C;SAC5D,EAAE,UAAC,MAAW;YACb,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,6CAAU,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAE5C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,yDAAsB,GAA7B;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY;YAC1C,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ;SACtC,EAAE,UAAC,WAAW;YACb,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,CAAC,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC;YACzD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iDAAc,GAAtB;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IACH,+BAAC;AAAD,CAzFA,AAyFC,CAzFsC,qCAAiB,GAyFvD;AAGD,IAAI,iBAAiB,GAAG;IACtB,QAAQ,EAAE;QACR,OAAO,EAAE,aAAa;QACtB,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;KACX;IACD,UAAU,EAAE,wBAAwB;IACpC,YAAY,EAAE,YAAY;IAC1B,WAAW,EAAE,sCAAsC;CACpD,CAAA;AAED,OAAO;KACJ,MAAM,CAAC,WAAW,CAAC;KACnB,SAAS,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;AChHrD,+DAA8D;AAE9D,IAAI,WAAW,GAAW,EAAE,CAAC;AAC7B,IAAI,SAAS,GAAW,GAAG,CAAC;AAE5B;IAAyC,8CAAiB;IAOxD,oCACE,aAAkB,EAClB,MAAsB,EACtB,QAAiC;QAHnC,YAKI,iBAAO,SASV;QAjBM,WAAK,GAAY,KAAK,CAAC;QACvB,eAAS,GAAW,WAAW,CAAC;QAQnC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC;QAChG,CAAC;QAED,KAAI,CAAC,YAAY,EAAE,CAAC;;IACxB,CAAC;IAEM,+CAAU,GAAjB,UAAkB,MAAM;QAAxB,iBASC;QARC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;QAE5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC;YACb,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAEO,iDAAY,GAApB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,SAAS,GAAG,WAAW,CAAC;IACpH,CAAC;IACH,iCAAC;AAAD,CArCA,AAqCC,CArCwC,qCAAiB,GAqCzD;AAED,CAAC;IACC,YAAY,CAAC;IAEb,IAAI,mBAAmB,GAAG;QACtB,QAAQ,EAAa;YACnB,OAAO,EAAE,aAAa;SACvB;QACD,gBAAgB,EAAE,IAAI;QACtB,UAAU,EAAQ,0BAA0B;QAC5C,YAAY,EAAM,YAAY;QAC9B,WAAW,EAAO,0CAA0C;KAC/D,CAAA;IAED,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC3D,CAAC,CAAC,EAAE,CAAC;;AC5DL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\r\nimport './draggable/Draggable';\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('pipDashboard', [\r\n    'pipWidget', \r\n    'pipDragged', \r\n    'pipWidgetConfigDialog', \r\n    'pipAddDashboardComponentDialog',\r\n    'pipDashboard.Templates',\r\n\r\n    // External pip modules\r\n    'pipLayout',\r\n    'pipLocations',\r\n    'pipDateTime',\r\n    'pipCharts',\r\n    'pipTranslate',\r\n    'pipControls'\r\n  ]);\r\n  \r\n})();\r\n\r\nimport './utility/WidgetTemplateUtility';\r\nimport './dialogs/widget_config/ConfigDialogController';\r\nimport './dialogs/add_component/AddComponentDialogController';\r\nimport './DashboardController';\r\nimport './DashboardComponent';\r\n","(function () {\r\n  'use strict';\r\n\r\n  const pipDashboard = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: 'pipDashboardCtrl',\r\n    controllerAs: 'dashboardCtrl',\r\n    templateUrl: 'Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .component('pipDashboard', pipDashboard);\r\n})();","'use strict';\r\n\r\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\r\n\r\nfunction setTranslations($injector) {\r\n  var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n  if (pipTranslate) {\r\n    pipTranslate.setTranslations('en', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n    });\r\n    pipTranslate.setTranslations('ru', {\r\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n    });\r\n  }\r\n}\r\n\r\nfunction configureAvailableWidgets(pipAddComponentDialogProvider) {\r\n  pipAddComponentDialogProvider.configWidgetList([\r\n    [{\r\n        title: 'Event',\r\n        icon: 'document',\r\n        name: 'event',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Position',\r\n        icon: 'location',\r\n        name: 'position',\r\n        amount: 0\r\n      }\r\n    ],\r\n    [{\r\n        title: 'Calendar',\r\n        icon: 'date',\r\n        name: 'calendar',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Sticky Notes',\r\n        icon: 'note-take',\r\n        name: 'notes',\r\n        amount: 0\r\n      },\r\n      {\r\n        title: 'Statistics',\r\n        icon: 'tr-statistics',\r\n        name: 'statistics',\r\n        amount: 0\r\n      }\r\n    ]\r\n  ]);\r\n}\r\n\r\nimport { IAddComponentDialogService } from './dialogs/add_component/AddComponentProvider'\r\n\r\nclass draggableOptions {\r\n  tileWidth: number;\r\n  tileHeight: number;\r\n  gutter: number;\r\n  inline: boolean;\r\n}\r\n\r\nlet DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n  tileWidth: 150, // 'px'\r\n  tileHeight: 150, // 'px'\r\n  gutter: 10, // 'px'\r\n  inline: false\r\n};\r\n\r\nclass DashboardController {\r\n  private defaultGroupMenuActions: any = [{\r\n      title: 'Add Component',\r\n      callback: (groupIndex) => {\r\n        this.addComponent(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Remove',\r\n      callback: (groupIndex) => {\r\n        this.removeGroup(groupIndex);\r\n      }\r\n    },\r\n    {\r\n      title: 'Configurate',\r\n      callback: (groupIndex) => {\r\n        console.log('configurate group with index:', groupIndex);\r\n      }\r\n    }\r\n  ];\r\n  private _$scope: angular.IScope;\r\n  private _$rootScope: angular.IRootScopeService;\r\n  private _$attrs: any;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _$interpolate: angular.IInterpolateService;\r\n  private _pipAddComponentDialog: IAddComponentDialogService;\r\n  private _pipWidgetTemplate: IWidgetTemplateService;\r\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\r\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n    '</pip-{{ type }}-widget>';\r\n\r\n  public groupedWidgets: any;\r\n  public draggableGridOptions: draggableOptions;\r\n  public widgetsTemplates: any;\r\n  public groupMenuActions: any = this.defaultGroupMenuActions;\r\n  public widgetsContext: any;\r\n\r\n  constructor(\r\n    $scope: angular.IScope,\r\n    $rootScope: angular.IRootScopeService,\r\n    $attrs: any,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    $interpolate: angular.IInterpolateService,\r\n    pipAddComponentDialog: IAddComponentDialogService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    this._$scope = $scope;\r\n    this._$rootScope = $rootScope;\r\n    this._$attrs = $attrs;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._$interpolate = $interpolate;\r\n    this._pipAddComponentDialog = pipAddComponentDialog;\r\n    this._pipWidgetTemplate = pipWidgetTemplate;\r\n\r\n    // Add class to style scroll bar\r\n    $element.addClass('pip-scroll');\r\n\r\n    // Set tiles grid options\r\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\r\n\r\n    // Switch inline displaying\r\n    if (this.draggableGridOptions.inline === true) {\r\n      $element.addClass('inline-grid');\r\n    }\r\n    // Extend group's menu actions\r\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\r\n\r\n    // Compile widgets\r\n    this.widgetsContext = $scope;\r\n    this.compileWidgets();\r\n\r\n    this._$timeout(() => {\r\n      this._$element.addClass('visible');\r\n    }, 700);\r\n  }\r\n\r\n  private compileWidgets() {\r\n    _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n        group.source = group.source.map((widget, index) => {\r\n          // Establish default props\r\n          widget.size = widget.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          };\r\n          widget.index = index;\r\n          widget.groupIndex = groupIndex;\r\n          widget.menu = widget.menu || {};\r\n          angular.extend(widget.menu, [{\r\n            title: 'Remove',\r\n            click: (item, params, object) => {\r\n              this.removeWidget(item, params, object);\r\n            }\r\n          }]);\r\n\r\n          return {\r\n            opts: widget,\r\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\r\n          };\r\n        })\r\n    });\r\n  }\r\n\r\n  public addComponent(groupIndex) {\r\n    this._pipAddComponentDialog\r\n      .show(this.groupedWidgets, groupIndex)\r\n      .then((data) => {\r\n        var activeGroup;\r\n\r\n        if (!data) {\r\n          return;\r\n        }\r\n\r\n        if (data.groupIndex !== -1) {\r\n          activeGroup = this.groupedWidgets[data.groupIndex];\r\n        } else {\r\n          activeGroup = {\r\n            title: 'New group',\r\n            source: []\r\n          };\r\n        }\r\n\r\n        this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n        if (data.groupIndex === -1) {\r\n          this.groupedWidgets.push(activeGroup);\r\n        }\r\n\r\n        this.compileWidgets();\r\n      });\r\n  };\r\n\r\n  public removeGroup = (groupIndex) => {\r\n    console.log('removeGroup', groupIndex);\r\n    this.groupedWidgets.splice(groupIndex, 1);\r\n  }\r\n\r\n  private addWidgets(group, widgets) {\r\n    widgets.forEach((widgetGroup) => {\r\n      widgetGroup.forEach((widget) => {\r\n        if (widget.amount) {\r\n          Array.apply(null, Array(widget.amount)).forEach(() => {\r\n            group.push({\r\n              type: widget.name\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private removeWidget(item, params, object) {\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n    this._$timeout(() => {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n    });\r\n  }\r\n\r\n}\r\n\r\nangular\r\n  .module('pipDashboard')\r\n  .config(configureAvailableWidgets)\r\n  .run(setTranslations)\r\n  .controller('pipDashboardCtrl', DashboardController);","'use strict';\r\n\r\nexport class AddComponentDialogController {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    public activeGroupIndex: number;\r\n    public defaultWidgets: any;\r\n    public groups: any;\r\n\r\n    constructor(\r\n        groups, \r\n        activeGroupIndex, \r\n        widgetList,\r\n        $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultWidgets   = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n          return group['title'];\r\n        });\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n\r\n    public add () {\r\n          this._mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets   : this.defaultWidgets\r\n          });\r\n        };\r\n\r\n    public cancel () {\r\n          this._mdDialog.cancel();\r\n        };\r\n\r\n    public encrease (groupIndex, widgetIndex) {\r\n          var widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n          widget.amount++;\r\n    };\r\n\r\n    public decrease (groupIndex, widgetIndex) {\r\n          var widget    = this.defaultWidgets[groupIndex][widgetIndex];\r\n          widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipAddDashboardComponentDialog', ['ngMaterial'])\r\n    .controller('pipAddDashboardComponentDialogController', AddComponentDialogController);\r\n\r\nimport './AddComponentProvider';","'use strict';\r\n\r\nexport interface IAddComponentDialogService {\r\n  show(groups, activeGroupIndex): any;\r\n}\r\n\r\nclass AddComponentDialogService implements IAddComponentDialogService {\r\n    public _mdDialog: angular.material.IDialogService;\r\n    private _widgetList: any;\r\n\r\n    public constructor(widgetList: any, $mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n        this._widgetList = widgetList;\r\n    }\r\n\r\n    public show(groups, activeGroupIndex) {\r\n        return this._mdDialog\r\n          .show({\r\n            templateUrl     : 'dialogs/add_component/AddComponent.html',\r\n            bindToController: true,\r\n            controller      : 'pipAddDashboardComponentDialogController',\r\n            controllerAs    : 'dialogCtrl',\r\n            resolve: {\r\n              groups: () => {\r\n                return groups;\r\n              },\r\n              activeGroupIndex: () => {\r\n                return activeGroupIndex;\r\n              },\r\n              widgetList: () => {\r\n                return this._widgetList;\r\n              }\r\n           }\r\n          });\r\n      };\r\n}\r\n\r\nclass AddComponentDialogProvider {\r\n  private _service: AddComponentDialogService;\r\n  private _widgetList: any = null;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public configWidgetList = function (list) {\r\n      this._widgetList = list;\r\n  };\r\n\r\n  public $get($mdDialog: angular.material.IDialogService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\r\n        \r\n        return this._service;\r\n  }\r\n}\r\n\r\nangular\r\n    .module('pipDashboard')\r\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\r\n","'use strict';\r\n\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [\r\n        {name: 'SMALL', id: '11'},\r\n        {name: 'WIDE', id: '21'},\r\n        {name: 'LARGE', id: '22'}\r\n    ];\r\n}\r\n\r\nexport class WidgetConfigDialogController {\r\n    public dialogTitle: string = \"Edit tile\";\r\n    public $mdDialog: angular.material.IDialogService;\r\n    public transclude: any;\r\n    public params: any;\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n\r\n    private _$element: any;\r\n    private _$timeout: angular.ITimeoutService;\r\n\r\n    constructor(\r\n        params,\r\n        $mdDialog: angular.material.IDialogService,\r\n        $compile: angular.ICompileService,\r\n        $timeout: angular.ITimeoutService,\r\n        $injector,\r\n        $scope: angular.IScope,\r\n        $rootScope) {\r\n        \"ngInject\";\r\n\r\n        this.$mdDialog = $mdDialog;\r\n        this._$timeout = $timeout;\r\n\r\n        this.params = params;\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n    }\r\n\r\n    public onApply(): void {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(this);\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.$mdDialog.cancel();\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipWidgetConfigDialog', ['ngMaterial'])\r\n    .controller('pipWidgetConfigDialogController', WidgetConfigDialogController);\r\n\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","\r\n(() => {\r\n    'use strict';\r\n    \r\n    function pipWidgetConfigComponent(\r\n        $templateRequest: angular.ITemplateRequestService,\r\n        $compile: angular.ICompileService\r\n    ) {\r\n        return {\r\n            restrict: 'E',\r\n            templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\r\n            scope: false,\r\n            link: ($scope: angular.IScope, $element: any, $attrs: any) => {\r\n                $templateRequest($attrs.pipExtensionUrl, false).then((html) => {\r\n                    $element.find('pip-extension-point').replaceWith($compile(html)($scope));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .directive('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\r\n\r\n})();","export interface IWidgetConfigService {\r\n    show(params: any, successCallback?: (key) => void, cancelCallback?: () => void): any;\r\n}\r\n\r\nclass WidgetConfigDialogService {\r\n  public _mdDialog: angular.material.IDialogService;\r\n    public constructor($mdDialog: angular.material.IDialogService) {\r\n        this._mdDialog = $mdDialog;\r\n    }\r\n    public show(params, successCallback?: (key) => void, cancelCallback?: () => void) {\r\n         this._mdDialog.show({\r\n            targetEvent: params.event,\r\n            templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\r\n            controller: 'pipWidgetConfigDialogController',\r\n            controllerAs: 'vm',\r\n            locals: {params: params},\r\n            clickOutsideToClose: true\r\n         })\r\n        .then((key) => {\r\n            if (successCallback) {\r\n                successCallback(key);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });         \r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidgetConfigDialog')\r\n    .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\r\n  \r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('pipDragged', []);\r\n})();\r\n\r\nimport './DraggableTileService';\r\nimport './DraggableController';\r\nimport './DraggableDirective';\r\nimport './draggable_group/DraggableTilesGroupService'\r\nimport './draggable_group/DraggableTilesGroupDirective'","'use strict';\r\n\r\ndeclare var interact;\r\n\r\nimport { DragTileService, IDragTileService, IDragTileConstructor } from './DraggableTileService';\r\nimport { TilesGridService, ITilesGridService, ITilesGridConstructor } from './draggable_group/DraggableTilesGroupService';\r\n\r\nlet SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nexport let DEFAULT_TILE_WIDTH: number = 150;\r\nexport let DEFAULT_TILE_HEIGHT: number = 150;\r\nexport let UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nlet DEFAULT_OPTIONS = {\r\n    tileWidth              : DEFAULT_TILE_WIDTH,   // 'px'\r\n    tileHeight             : DEFAULT_TILE_HEIGHT,   // 'px'\r\n    gutter                 : 20,    // 'px'\r\n    container              : 'pip-draggable-grid:first-of-type',\r\n    //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n    activeDropzoneClass    : 'dropzone-active',\r\n    groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\nclass DraggableController {\r\n  public opts: any;\r\n  public groups: any;\r\n  public sourceDropZoneElem: any = null;\r\n  public isSameDropzone: boolean = true;\r\n  public tileGroups: any = null;\r\n  public availableWidth: any;\r\n  public availableColumns: any;\r\n  public groupsContainers: any;\r\n  public container: any;\r\n  public activeDraggedGroup: any;\r\n  public draggedTile: any;\r\n  public containerOffset: any;\r\n\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _$rootScope: angular.IRootScopeService;\r\n  private _$scope: angular.IScope;\r\n  private _$compile: angular.ICompileService;\r\n  private _$element: any;\r\n\r\n  constructor(\r\n    $scope: angular.IScope, \r\n    $rootScope: angular.IRootScopeService, \r\n    $compile: angular.ICompileService, \r\n    $timeout: angular.ITimeoutService,\r\n    $element: any, \r\n    pipDragTile: IDragTileService, \r\n    pipTilesGrid: ITilesGridService,\r\n    pipMedia: pip.layouts.IMediaService\r\n  ) {\r\n    this._$timeout = $timeout;\r\n    this._$rootScope = $rootScope;\r\n    this._$scope = $scope;\r\n    this._$compile = $compile;\r\n    this._$element = $element;\r\n\r\n    this.opts = _.merge({ mobileBreakpoint: pipMedia.breakpoints.xs }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\r\n\r\n    this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\r\n      return {\r\n        title : group.title,\r\n        editingName : false,\r\n        index: groupIndex,\r\n        source: group.source.map((tile) => {\r\n          let tileScope = $rootScope.$new(false, $scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex;\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl    : $compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size   : tile.opts.size\r\n          });\r\n        })\r\n      };\r\n    });\r\n\r\n    // Add templates watcher\r\n    $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\r\n      this.watch(newVal);\r\n    }, true);\r\n\r\n    // Initialize data\r\n    this.initialize();\r\n\r\n    // Resize handler TODO: replace by pip resize watchers\r\n    $(window).on('resize', _.debounce(() => {\r\n      this.availableWidth   = this.getContainerWidth();\r\n      this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        group\r\n          .setAvailableColumns(this.availableColumns)\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }, 50));\r\n  }\r\n\r\n  // Watch handler\r\n  private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n            \r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this._$timeout(() => { this.updateTilesGroups(); });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this._$timeout(() => { this.updateTilesGroups(); });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this._$timeout(() => { this.updateTilesGroups(); });\r\n      }\r\n  }\r\n\r\n  // Inline edit group handlers\r\n  public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this._$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n  }\r\n\r\n  public cancelEditing (group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput (group) {\r\n      this._$timeout(() => {\r\n        group.editingName = false;\r\n        this._$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this._$scope['draggableCtrl'].tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput (group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source?: any) {\r\n      switch(updateType) {\r\n        case 'addGroup': \r\n          if (this.groups.length !== this._$scope['draggableCtrl'].tilesTemplates.length) {\r\n              this._$scope['draggableCtrl'].tilesTemplates.push(source);\r\n          }          \r\n          break;\r\n        case 'moveTile': \r\n          const {fromIndex, toIndex, tileOptions, fromTileIndex} = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this._$scope['draggableCtrl'].tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this._$scope['draggableCtrl'].tilesTemplates[toIndex].source.push({opts: tileOptions});\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex?) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n            groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        let child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n            remain = [],\r\n            containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n          if (_.findIndex(newGroups, (g) => { return g['title'] === group.title}) < 0) {\r\n            removeIndexes.push(index);\r\n          } else {\r\n            remain.push(index);\r\n          }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n          this.groups.splice(index, 1);\r\n          this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n          containers.push(this.groupsContainers[index]);\r\n      });\r\n      \r\n       this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n          this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      let group = {\r\n        title : sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          let tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl    : this._$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size   : tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this._$scope.$$phase) this._$scope.$apply();\r\n\r\n      this._$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n        tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n        tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n        const newTile = IDragTileConstructor(DragTileService,{\r\n          tpl    : this._$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size   : tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition?, draggedTile?) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this._$scope['$container'] || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT\r\n        : Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile']  = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container          = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile        = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n      \r\n      this._$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x      = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y      = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top  = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top : event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex   = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this._$timeout(() => { this.setGroupContainersHeight(); }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this._$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile        = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top : containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\r\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\r\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this._$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this._$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {from: from, to: to, tile: movedTile});\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup      = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({title: 'New group', source: []});\r\n      this._$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this._$timeout(() => {\r\n        this.availableWidth   = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups       = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            // enable autoScroll\r\n            autoScroll: true,\r\n            onstart: (event) => { this.onDragStartListener(event) },\r\n            onmove : (event) => { this.onDragMoveListener(event) },\r\n            onend  : (event) => { this.onDragEndListener() }\r\n          });\r\n        \r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => { console.log('here');  this.onDropToFictGroupListener(event) },\r\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\r\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\r\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\r\n          })\r\n        \r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop          : (event) => { this.onDropListener(event) },\r\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\r\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\r\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\r\n          });\r\n\r\n        this._$scope['$container']\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n      }, 0);\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipDragged')\r\n    .controller('pipDraggableCtrl', DraggableController);\r\n","'use strict';\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .directive('pipDraggableGrid', DragDirective);\r\n\r\nfunction DragDirective() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    templateUrl: 'draggable/Draggable.html',\r\n    bindToController: true,\r\n    controllerAs: 'draggableCtrl',\r\n    controller: 'pipDraggableCtrl',\r\n    link: function ($scope, $elem) {\r\n      $scope.$container = $elem;\r\n    }\r\n  };\r\n}","'use strict';\r\n\r\nexport interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","'use strict';\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .directive('pipDraggableTiles', DraggableTile);\r\n\r\nfunction DraggableTile() {\r\n  return {\r\n    restrict: 'A',\r\n    link: function ($scope, $elem, $attr) {\r\n      var docFrag = document.createDocumentFragment();\r\n      var group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n      group.forEach(function (tile) {\r\n        var tpl = wrapComponent(tile.getCompiledTemplate());\r\n        docFrag.appendChild(tpl);\r\n      });\r\n\r\n      $elem.append(docFrag);\r\n\r\n      function wrapComponent(elem) {\r\n        return $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(elem)\r\n          .get(0);\r\n      }\r\n    }\r\n  };\r\n}","'use strict';\r\n\r\nexport interface TilesGridConstructor {\r\n  new (tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem):ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth?): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nlet MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    let basicCol = prevCell && prevCell.col || 0;\r\n    let basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      let gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          let rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      let prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell;\r\n    let col;\r\n    let row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    let basicRow = this.getBasicRow(prevCell);\r\n    let basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      let gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          let rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    let self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth?): any {\r\n    let self = this;\r\n    let colsInRow = 0;\r\n    let rows = 0;\r\n    let tileWidth = singleTileWidth || this.opts.tileWidth;\r\n    let offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      let tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n        Array.apply(null, Array(newCellCount)).forEach(() => {\r\n          if (self.columns < colsInRow + 1) {\r\n            rows++;\r\n            colsInRow = 0;\r\n\r\n            self.gridCells.push(gridInRow);\r\n            gridInRow = [];\r\n          }\r\n\r\n          let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n          let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n          // Describe grid cell size through block corners coordinates\r\n          gridInRow.push({\r\n            top: top,\r\n            left: left,\r\n            bottom: top + self.opts.tileHeight,\r\n            right: left + tileWidth,\r\n            row: rows,\r\n            col: colsInRow\r\n          });\r\n\r\n          colsInRow++;\r\n        });\r\n      }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    let self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      let tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      let tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        let tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    let foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        let tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    let movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    let beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    let index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","export interface IWidgetTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n}\r\n\r\nclass widgetTemplateService implements IWidgetTemplateService {\r\n    private _$interpolate: angular.IInterpolateService;\r\n    private _$compile: angular.ICompileService;\r\n    private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n    constructor(\r\n        $interpolate: angular.IInterpolateService,\r\n        $compile: angular.ICompileService,\r\n        $templateRequest: angular.ITemplateRequestService\r\n    ) {\r\n        this._$interpolate = $interpolate;\r\n        this._$compile = $compile;\r\n        this._$templateRequest = $templateRequest;\r\n    }\r\n\r\n    public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n        const {\r\n            template,\r\n            templateUrl,\r\n            type\r\n        } = source;\r\n        let result;\r\n\r\n        if (type) {\r\n            const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n            return strictCompile == true ?\r\n                (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                interpolated;\r\n        }\r\n\r\n        if (template) {\r\n            return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n        }\r\n\r\n        if (templateUrl) {\r\n            this._$templateRequest(templateUrl, false).then((html) => {\r\n                result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public setImageMarginCSS($element, image) {\r\n        let\r\n            containerWidth = $element.width ? $element.width() : $element.clientWidth, \r\n            containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n            imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n            imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n            margin = 0,\r\n            cssParams = {};\r\n\r\n        if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n            margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n            cssParams['margin-left'] = '' + margin + 'px';\r\n            cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n            cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n            cssParams['margin-top'] = '';\r\n        } else {\r\n            margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n            cssParams['margin-top'] = '' + margin + 'px';\r\n            cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n            cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n            cssParams['margin-left'] = '';\r\n        }\r\n\r\n        $(image).css(cssParams);\r\n    }\r\n}\r\n\r\n// image load directive TODO: remove to pipImageUtils\r\nfunction ImageLoad($parse) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element, attrs) {\r\n            var callback = $parse(attrs.pipImageLoad);\r\n            element.bind('load', (event) => {\r\n                callback(scope, {$event: event});\r\n            });\r\n        } \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDashboard')\r\n    .service('pipWidgetTemplate', widgetTemplateService)\r\n    .directive('pipImageLoad', ImageLoad);","(() => {\r\n  'use strict';\r\n\r\n  angular.module('pipWidget', []);\r\n})();\r\n\r\nimport './calendar/WidgetCalendar';\r\nimport './event/WidgetEvent';\r\nimport './menu/WidgetMenuService';\r\nimport './menu/WidgetMenuDirective';\r\nimport './notes/WidgetNotes';\r\nimport './position/WidgetPosition';\r\nimport './statistics/WidgetStatistics';\r\nimport './picture_slider/WidgetPictureSlider';\r\n","import { MenuWidgetService } from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass CalendarWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n\r\n  public color: string = 'blue';\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n        this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n        }});\r\n        this['options'].date = this['options'].date || new Date();\r\n        this.color = this['options'].color || this.color;\r\n      }\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size,\r\n      date: this['options'].date,\r\n      extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].date = result.date;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n(() => {\r\n\r\n  let pipCalendarWidget = {\r\n      bindings        : {\r\n        options: '=pipOptions',\r\n      },\r\n      controller      : CalendarWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/calendar/WidgetCalendar.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipCalendarWidget', pipCalendarWidget);\r\n\r\n})();\r\n","import { MenuWidgetService} from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass EventWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _oldOpacity: number;\r\n\r\n  public color: string = 'gray';\r\n  public opacity: number = 0.57;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n    }});\r\n    this.color = this['options'].color || this.color;\r\n    this.opacity = this['options'].opacity || this.opacity;\r\n\r\n    this.drawImage();\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      this.drawImage();\r\n    });\r\n  }\r\n\r\n  private drawImage() {\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.onImageLoad(this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._oldOpacity = _.clone(this.opacity);\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\r\n      date: this['options'].date,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      opacity: this.opacity,\r\n      onOpacitytest: (opacity) => {\r\n        this.opacity = opacity;\r\n      },\r\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].date = result.date;\r\n      this['options'].title = result.title;\r\n      this['options'].text = result.text;\r\n      this['options'].opacity = result.opacity;\r\n    }, () => {\r\n      this.opacity = this._oldOpacity;\r\n    });\r\n  }\r\n\r\n  private onImageLoad(image) {\r\n    this.setImageMarginCSS(this._$element.parent(), image);\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    if (this['options'].image) {\r\n      this._$timeout(() => {\r\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  // Later replace by pipImageUtils sevice's function\r\n  private setImageMarginCSS($element, image) {\r\n    let\r\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n      imageWidth = image[0].naturalWidth || image.width,\r\n      imageHeight = image[0].naturalHeight || image.height,\r\n      margin = 0,\r\n      cssParams = {};\r\n\r\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n      cssParams['margin-left'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n      cssParams['margin-top'] = '';\r\n    } else {\r\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n      cssParams['margin-top'] = '' + margin + 'px';\r\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n      cssParams['margin-left'] = '';\r\n    }\r\n\r\n    image.css(cssParams);\r\n  }\r\n}\r\n\r\n\r\n(() => {\r\n  let pipEventWidget =  {\r\n      bindings: {\r\n        options: '=pipOptions'\r\n      },\r\n      controller: EventWidgetController,\r\n      controllerAs: 'widgetCtrl',\r\n      templateUrl: 'widgets/event/WidgetEvent.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipEventWidget', pipEventWidget);\r\n})();","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .directive('pipMenuWidget', pipMenuWidget);\r\n\r\n  function pipMenuWidget() {\r\n    return {\r\n      restrict        : 'EA',\r\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\r\n    };\r\n  }\r\n})();\r\n","\r\nexport class MenuWidgetService {\r\n  public menu: any = [\r\n    {\r\n      title: 'Change Size',\r\n      action: angular.noop,\r\n      submenu: [{\r\n          title: '1 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 1,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 1',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 1\r\n          }\r\n        },\r\n        {\r\n          title: '2 x 2',\r\n          action: 'changeSize',\r\n          params: {\r\n            sizeX: 2,\r\n            sizeY: 2\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\nclass MenuWidgetProvider {\r\n    private _service: MenuWidgetService;\r\n\r\n    constructor() {\r\n    }\r\n\r\n   public $get() {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new MenuWidgetService();\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .provider('pipWidgetMenu', MenuWidgetProvider);\r\n})();","'use strict';\r\n\r\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\r\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass NotesWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n\r\n  public color: string = 'orange';\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    pipWidgetConfigDialogService: IWidgetConfigService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._configDialog = pipWidgetConfigDialogService;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.menu.push({ title: 'Configurate', click: () => {\r\n          this.onConfigClick();\r\n      }});\r\n      this.color = this['options'].color || this.color;\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-calendar-config',\r\n      color: this.color,\r\n      size: this['options'].size,\r\n      title: this['options'].title,\r\n      text: this['options'].text,\r\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.color = result.color;\r\n      this['options'].color = result.color;\r\n      this.changeSize(result.size);\r\n      this['options'].text = result.text;\r\n      this['options'].title = result.title;\r\n    });\r\n  }\r\n}\r\n\r\n  let pipNotesWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      controller      : NotesWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipNotesWidget', pipNotesWidget);\r\n\r\n","'use strict';\r\n\r\nimport {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\nimport {\r\n  IWidgetTemplateService\r\n} from '../../utility/WidgetTemplateUtility';\r\n\r\nclass PictureSliderController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _widgetUtility: IWidgetTemplateService;\r\n  private _$element: any;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public animationType: string = 'fading';\r\n  public animationInterval: number = 5000;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $element: any,\r\n    $timeout: angular.ITimeoutService,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipWidgetTemplate: IWidgetTemplateService\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._widgetUtility = pipWidgetTemplate;\r\n    this._$element = $element;\r\n    this._$timeout = $timeout;\r\n    if (this['options']) {\r\n      this.animationType = this['options'].animationType || this.animationType;\r\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\r\n    }\r\n  }\r\n\r\n  public onImageLoad($event) {\r\n    this._$timeout(() => {\r\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this._$timeout(() => {\r\n      _.each(this._$element.find('img'), (image) => {\r\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\r\n      });\r\n    }, 500);\r\n  }\r\n}\r\n\r\nlet pipPictureSliderWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PictureSliderController,\r\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\r\n  controllerAs: 'widgetCtrl'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/widget_config/ConfigDialogService';\r\n\r\nclass PositionWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n  private _configDialog: IWidgetConfigService;\r\n  private _locationDialog: any;\r\n\r\n  public showPosition: boolean = true;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService,\r\n    $element: any,\r\n    pipWidgetConfigDialogService: IWidgetConfigService,\r\n    pipLocationEditDialog: any,\r\n  ) {\r\n    super();\r\n    this._$scope = $scope;\r\n    this._$timeout = $timeout;\r\n    this._configDialog = pipWidgetConfigDialogService;\r\n    this._locationDialog = pipLocationEditDialog;\r\n\r\n    if (this['options']) {\r\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\r\n    }\r\n\r\n    this.menu.push({\r\n      title: 'Configurate',\r\n      click: () => {\r\n        this.onConfigClick();\r\n      }\r\n    });\r\n    this.menu.push({\r\n      title: 'Change location',\r\n      click: () => {\r\n        this.openLocationEditDialog();\r\n      }\r\n    });\r\n\r\n    this['options'].location = this['options'].location || this['options'].position;\r\n\r\n    $scope.$watch('widgetCtrl.options.location', () => {\r\n      this.reDrawPosition();\r\n    });\r\n\r\n    // TODO it doesn't work\r\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\r\n      if (newVal == true) this.reDrawPosition();\r\n    });\r\n  }\r\n\r\n  private onConfigClick() {\r\n    this._configDialog.show({\r\n      dialogClass: 'pip-position-config',\r\n      size: this['options'].size,\r\n      locationName: this['options'].locationName,\r\n      hideColors: true,\r\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\r\n    }, (result: any) => {\r\n      this.changeSize(result.size);\r\n      this['options'].locationName = result.locationName;\r\n    });\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reDrawPosition();\r\n  }\r\n\r\n  public openLocationEditDialog() {\r\n    this._locationDialog.show({\r\n      locationName: this['options'].locationName,\r\n      locationPos: this['options'].location\r\n    }, (newPosition) => {\r\n      if (newPosition) {\r\n        this['options'].location = newPosition.location;\r\n        this['options'].locationName = newPosition.locatioName;\r\n      }\r\n    });\r\n  }\r\n\r\n  private reDrawPosition() {\r\n    this.showPosition = false;\r\n    this._$timeout(() => {\r\n      this.showPosition = true;\r\n    }, 50);\r\n  }\r\n}\r\n\r\n\r\nlet pipPositionWidget = {\r\n  bindings: {\r\n    options: '=pipOptions',\r\n    index: '=',\r\n    group: '='\r\n  },\r\n  controller: PositionWidgetController,\r\n  controllerAs: 'widgetCtrl',\r\n  templateUrl: 'widgets/position/WidgetPosition.html'\r\n}\r\n\r\nangular\r\n  .module('pipWidget')\r\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\r\n\r\nlet SMALL_CHART: number = 70;\r\nlet BIG_CHART: number = 250;\r\n\r\nclass StatisticsWidgetController extends MenuWidgetService {\r\n  private _$scope: angular.IScope;\r\n  private _$timeout: angular.ITimeoutService;\r\n\r\n  public reset: boolean = false;\r\n  public chartSize: number = SMALL_CHART;\r\n\r\n  constructor(\r\n    pipWidgetMenu: any,\r\n    $scope: angular.IScope,\r\n    $timeout: angular.ITimeoutService\r\n  ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this['options']) {\r\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n  }\r\n\r\n  public changeSize(params) {\r\n    this['options'].size.colSpan = params.sizeX;\r\n    this['options'].size.rowSpan = params.sizeY;\r\n\r\n    this.reset = true;\r\n    this.setChartSize();\r\n    this._$timeout(() => {\r\n      this.reset = false;\r\n    }, 500);\r\n  }\r\n\r\n  private setChartSize() {\r\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n  }\r\n}\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  let pipStatisticsWidget = {\r\n      bindings           : {\r\n        options: '=pipOptions'\r\n      },\r\n      bindToController: true,\r\n      controller      : StatisticsWidgetController,\r\n      controllerAs    : 'widgetCtrl',\r\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipStatisticsWidget', pipStatisticsWidget);\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">Add component<md-input-container class=\"layout-row flex-auto m0\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"Create New Group\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Add\">Cancel</md-button><md-button ng-click=\"dialogCtrl.add()\" arial-label=\"Cancel\">Add</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-extension-url=\"{{ vm.params.extensionUrl }}\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{vm.dialogTitle}}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!vm.hideSizes\" pip-buttons=\"vm.sizes\" ng-model=\"vm.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!vm.hideColors\" pip-colors=\"vm.colors\" ng-model=\"vm.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onApply()\">Apply</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container>Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"vm.opacity\" ng-change=\"vm.onOpacitytest(vm.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"vm.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}