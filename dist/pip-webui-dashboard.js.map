{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/add_component/index.ts","src/dialogs/index.ts","src/dialogs/tile_config/ConfigDialogController.ts","src/dialogs/tile_config/ConfigDialogExtendComponent.ts","src/dialogs/tile_config/ConfigDialogService.ts","src/dialogs/tile_config/index.ts","src/draggable/Draggable.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/draggable/index.ts","src/index.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/WidgetClass.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/index.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":[],"mappings":"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":"pip-webui-dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {\r\n  IWidgetTemplateService\r\n} from './utility/WidgetTemplateUtility';\r\nimport {\r\n  IAddComponentDialogService,\r\n  IAddComponentDialogprovider\r\n} from './dialogs/add_component/AddComponentProvider'\r\n\r\n{\r\n  const setTranslations = function ($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      ( < any > pipTranslate).setTranslations('en', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\r\n      });\r\n      ( < any > pipTranslate).setTranslations('ru', {\r\n        DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\r\n      });\r\n    }\r\n  }\r\n\r\n  const configureAvailableWidgets = function (pipAddComponentDialogProvider: IAddComponentDialogprovider) {\r\n    pipAddComponentDialogProvider.configWidgetList([\r\n      [{\r\n          title: 'Event',\r\n          icon: 'document',\r\n          name: 'event',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Position',\r\n          icon: 'location',\r\n          name: 'position',\r\n          amount: 0\r\n        }\r\n      ],\r\n      [{\r\n          title: 'Calendar',\r\n          icon: 'date',\r\n          name: 'calendar',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Sticky Notes',\r\n          icon: 'note-take',\r\n          name: 'notes',\r\n          amount: 0\r\n        },\r\n        {\r\n          title: 'Statistics',\r\n          icon: 'tr-statistics',\r\n          name: 'statistics',\r\n          amount: 0\r\n        }\r\n      ]\r\n    ]);\r\n  }\r\n\r\n  class draggableOptions {\r\n    tileWidth: number;\r\n    tileHeight: number;\r\n    gutter: number;\r\n    inline: boolean;\r\n  }\r\n\r\n  const DEFAULT_GRID_OPTIONS: draggableOptions = {\r\n    tileWidth: 150, // 'px'\r\n    tileHeight: 150, // 'px'\r\n    gutter: 10, // 'px'\r\n    inline: false\r\n  };\r\n\r\n  interface DashboardBindings {\r\n      gridOptions: any;\r\n      groupAdditionalActions: any;\r\n      groupedWidgets: any;\r\n  }\r\n\r\n  class DashboardController implements ng.IController, DashboardBindings {\r\n    private defaultGroupMenuActions: any = [{\r\n        title: 'Add Component',\r\n        callback: (groupIndex) => {\r\n          this.addComponent(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Remove',\r\n        callback: (groupIndex) => {\r\n          this.removeGroup(groupIndex);\r\n        }\r\n      },\r\n      {\r\n        title: 'Configurate',\r\n        callback: (groupIndex) => {\r\n          console.log('configurate group with index:', groupIndex);\r\n        }\r\n      }\r\n    ];\r\n    private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\r\n      'pip-options=\"$parent.$ctrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\r\n      '</pip-{{ type }}-widget>';\r\n\r\n    public groupedWidgets: any;\r\n    public draggableGridOptions: draggableOptions;\r\n    public widgetsTemplates: any;\r\n    public groupMenuActions: any = this.defaultGroupMenuActions;\r\n    public widgetsContext: any;\r\n    public gridOptions: any;\r\n    public groupAdditionalActions: any;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $attrs: any,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $interpolate: angular.IInterpolateService,\r\n      private pipAddComponentDialog: IAddComponentDialogService,\r\n      private pipWidgetTemplate: IWidgetTemplateService\r\n    ) {\r\n      // Add class to style scroll bar\r\n      $element.addClass('pip-scroll');\r\n\r\n      // Set tiles grid options\r\n      this.draggableGridOptions = this.gridOptions || DEFAULT_GRID_OPTIONS;\r\n\r\n      // Switch inline displaying\r\n      if (this.draggableGridOptions.inline === true) {\r\n        $element.addClass('inline-grid');\r\n      }\r\n      // Extend group's menu actions\r\n      if (this.groupAdditionalActions) angular.extend(this.groupMenuActions, this.groupAdditionalActions);\r\n\r\n      // Compile widgets\r\n      this.widgetsContext = $scope;\r\n      this.compileWidgets();\r\n\r\n      this.$timeout(() => {\r\n        this.$element.addClass('visible');\r\n      }, 700);\r\n    }\r\n\r\n    private compileWidgets() {\r\n      _.each(this.groupedWidgets, (group, groupIndex) => {\r\n        group.removedWidgets = group.removedWidgets || [],\r\n          group.source = group.source.map((widget, index) => {\r\n            // Establish default props\r\n            widget.size = widget.size || {\r\n              colSpan: 1,\r\n              rowSpan: 1\r\n            };\r\n            widget.index = index;\r\n            widget.groupIndex = groupIndex;\r\n            widget.menu = widget.menu || {};\r\n            angular.extend(widget.menu, [{\r\n              title: 'Remove',\r\n              click: (item, params, object) => {\r\n                this.removeWidget(item, params, object);\r\n              }\r\n            }]);\r\n\r\n            return {\r\n              opts: widget,\r\n              template: this.pipWidgetTemplate.getTemplate(widget, this._includeTpl)\r\n            };\r\n          })\r\n      });\r\n    }\r\n\r\n    public addComponent(groupIndex) {\r\n      this.pipAddComponentDialog\r\n        .show(this.groupedWidgets, groupIndex)\r\n        .then((data) => {\r\n          var activeGroup;\r\n\r\n          if (!data) {\r\n            return;\r\n          }\r\n\r\n          if (data.groupIndex !== -1) {\r\n            activeGroup = this.groupedWidgets[data.groupIndex];\r\n          } else {\r\n            activeGroup = {\r\n              title: 'New group',\r\n              source: []\r\n            };\r\n          }\r\n\r\n          this.addWidgets(activeGroup.source, data.widgets);\r\n\r\n          if (data.groupIndex === -1) {\r\n            this.groupedWidgets.push(activeGroup);\r\n          }\r\n\r\n          this.compileWidgets();\r\n        });\r\n    };\r\n\r\n    public removeGroup = (groupIndex) => {\r\n      console.log('removeGroup', groupIndex);\r\n      this.groupedWidgets.splice(groupIndex, 1);\r\n    }\r\n\r\n    private addWidgets(group, widgets) {\r\n      widgets.forEach((widgetGroup) => {\r\n        widgetGroup.forEach((widget) => {\r\n          if (widget.amount) {\r\n            Array.apply(null, Array(widget.amount)).forEach(() => {\r\n              group.push({\r\n                type: widget.name\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    private removeWidget(item, params, object) {\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\r\n      this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\r\n      this.$timeout(() => {\r\n        this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const pipDashboard: ng.IComponentOptions = {\r\n    bindings: {\r\n      gridOptions: '=pipGridOptions',\r\n      groupAdditionalActions: '=pipGroupActions',\r\n      groupedWidgets: '=pipGroups'\r\n    },\r\n    controller: DashboardController,\r\n    templateUrl: 'Dashboard.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipDashboard')\r\n    .config(configureAvailableWidgets)\r\n    .config(setTranslations)\r\n    .component('pipDashboard', pipDashboard);\r\n\r\n}","export class AddComponentDialogWidget {\r\n    title: string;\r\n    icon: string;\r\n    name: string;\r\n    amount: number;\r\n}\r\n\r\nexport class AddComponentDialogController implements ng.IController {\r\n    public defaultWidgets: [AddComponentDialogWidget[]];\r\n    public groups: any;\r\n    public totalWidgets: number = 0;\r\n\r\n    constructor(\r\n        groups, // Later may be group type\r\n        public activeGroupIndex: number,\r\n        widgetList: [AddComponentDialogWidget[]],\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\r\n        this.defaultWidgets = _.cloneDeep(widgetList);\r\n        this.groups = _.map(groups, function (group) {\r\n            return group['title'];\r\n        });\r\n    }\r\n\r\n    public add() {\r\n        this.$mdDialog.hide({\r\n            groupIndex: this.activeGroupIndex,\r\n            widgets: this.defaultWidgets\r\n        });\r\n    };\r\n\r\n    public cancel() {\r\n        this.$mdDialog.cancel();\r\n    };\r\n\r\n    public encrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount++;\r\n        this.totalWidgets++;\r\n    };\r\n\r\n    public decrease(groupIndex: number, widgetIndex: number) {\r\n        const widget = this.defaultWidgets[groupIndex][widgetIndex];\r\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\r\n        this.totalWidgets = this.totalWidgets ? this.totalWidgets - 1 : 0;\r\n    };\r\n}","import {\r\n  AddComponentDialogWidget,\r\n  AddComponentDialogController\r\n} from './AddComponentDialogController';\r\n\r\nexport interface IAddComponentDialogService {\r\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\r\n}\r\n\r\nexport interface IAddComponentDialogprovider {\r\n  configWidgetList(list: [AddComponentDialogWidget[]]): void;\r\n}\r\n\r\n{\r\n  const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n    if (pipTranslate) {\r\n      (<any>pipTranslate).setTranslations('en', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Add component',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Create new group'\r\n      });\r\n      (<any>pipTranslate).setTranslations('ru', {\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_TITLE: 'Добавить компонент',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\r\n        DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\r\n      });\r\n    }\r\n  }\r\n\r\n  class AddComponentDialogService implements IAddComponentDialogService {\r\n\r\n    public constructor(\r\n      private widgetList: [AddComponentDialogWidget[]],\r\n      private $mdDialog: angular.material.IDialogService\r\n    ) {}\r\n\r\n    public show(groups, activeGroupIndex) {\r\n      return this.$mdDialog\r\n        .show({\r\n          templateUrl: 'dialogs/add_component/AddComponent.html',\r\n          bindToController: true,\r\n          controller: AddComponentDialogController,\r\n          controllerAs: 'dialogCtrl',\r\n          clickOutsideToClose: true,\r\n          resolve: {\r\n            groups: () => {\r\n              return groups;\r\n            },\r\n            activeGroupIndex: () => {\r\n              return activeGroupIndex;\r\n            },\r\n            widgetList: () => {\r\n              return (<any>this.widgetList);\r\n            }\r\n          }\r\n        });\r\n    };\r\n  }\r\n\r\n  class AddComponentDialogProvider implements IAddComponentDialogprovider {\r\n    private _service: AddComponentDialogService;\r\n    private _widgetList: [AddComponentDialogWidget[]] = null;\r\n\r\n    constructor() {}\r\n\r\n    public configWidgetList = function (list: [AddComponentDialogWidget[]]) {\r\n      this._widgetList = list;\r\n    };\r\n\r\n    public $get($mdDialog: angular.material.IDialogService) {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipAddDashboardComponentDialog')\r\n    .config(setTranslations)\r\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\r\n    console.log('add provider pipAddComponentDialog');\r\n}","angular\r\n    .module('pipAddDashboardComponentDialog', ['ngMaterial']);\r\n\r\nimport './AddComponentDialogController';\r\nimport './AddComponentProvider';","\r\nangular.module('pipDashboardDialogs', [\r\n    'pipAddDashboardComponentDialog', \r\n    'pipWidgetConfigDialog'\r\n]);\r\n\r\nimport './add_component';\r\nimport './tile_config';","\r\nclass TileColors {\r\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\r\n}\r\n\r\nclass TileSizes {\r\n    static all: any = [{\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL',\r\n            id: '11'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE',\r\n            id: '21'\r\n        },\r\n        {\r\n            name: 'DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE',\r\n            id: '22'\r\n        }\r\n    ];\r\n}\r\n\r\nexport class WidgetConfigDialogController {\r\n    public colors: string[] = TileColors.all;\r\n    public sizes: any = TileSizes.all;\r\n    public sizeId: string = TileSizes.all[0].id;\r\n    public onCancel: Function;\r\n\r\n    constructor(\r\n        public params,\r\n        public extensionUrl,\r\n        public $mdDialog: angular.material.IDialogService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        angular.extend(this, this.params);\r\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\r\n\r\n        this.onCancel = () => {\r\n            this.$mdDialog.cancel();\r\n        }\r\n    }\r\n\r\n    public onApply(updatedData) {\r\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\r\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\r\n        this.$mdDialog.hide(updatedData);\r\n    }\r\n}","{    \r\n    interface IWidgetConfigExtendComponentBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtensionUrl: any;\r\n        pipDialogScope: any;\r\n        pipApply: any;\r\n    }\r\n\r\n    const WidgetConfigExtendComponentBindings: IWidgetConfigExtendComponentBindings = {\r\n        pipExtensionUrl: '<',\r\n        pipDialogScope: '<',\r\n        pipApply: '&'\r\n    }\r\n\r\n    class WidgetConfigExtendComponentChanges implements ng.IOnChangesObject, IWidgetConfigExtendComponentBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        pipExtensionUrl: ng.IChangesObject<string>;\r\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\r\n\r\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\r\n    }\r\n\r\n    interface IWidgetConfigExtendComponentAttributes extends ng.IAttributes {\r\n        pipExtensionUrl: string\r\n    }\r\n\r\n    class WidgetConfigExtendComponentController implements IWidgetConfigExtendComponentBindings {\r\n        public pipExtensionUrl: string;\r\n        public pipDialogScope: ng.IScope;\r\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\r\n\r\n        constructor(\r\n            private $templateRequest: angular.ITemplateRequestService,\r\n            private $compile: angular.ICompileService,\r\n            private $scope: angular.IScope, \r\n            private $element: JQuery, \r\n            private $attrs: IWidgetConfigExtendComponentAttributes\r\n        ) { }\r\n\r\n        public $onChanges(changes: WidgetConfigExtendComponentChanges) {\r\n            if (changes.pipDialogScope) {\r\n                delete changes.pipDialogScope.currentValue['$scope'];\r\n                angular.extend(this, changes.pipDialogScope.currentValue);\r\n            }\r\n            if (changes.pipExtensionUrl && changes.pipExtensionUrl.currentValue) {\r\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\r\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\r\n                });\r\n            }\r\n        }\r\n\r\n        public onApply() {\r\n            this.pipApply({updatedData: this});\r\n        }\r\n    }\r\n\r\n    const pipWidgetConfigComponent: ng.IComponentOptions = {\r\n        templateUrl: 'dialogs/tile_config/ConfigDialogExtendComponent.html',\r\n        controller: WidgetConfigExtendComponentController,\r\n        bindings: WidgetConfigExtendComponentBindings\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .component('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\r\n}","import { WidgetConfigDialogController } from './ConfigDialogController';\r\n\r\nexport interface IWidgetConfigService {\r\n    show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\r\n}\r\n\r\nexport interface IWidgetConfigDialogOptions extends angular.material.IDialogOptions {\r\n    dialogClass?: string;\r\n    extensionUrl?: string;\r\n    event?: any;\r\n}\r\n\r\n{\r\n    const setTranslations = function($injector: ng.auto.IInjectorService) {\r\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Edit tile',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Small',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Large'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE: 'Изменить виджет',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\r\n                DASHBOARD_WIDGET_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\r\n            });\r\n        }\r\n    }\r\n\r\n    class WidgetConfigDialogService {\r\n        public constructor(\r\n            public $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params: IWidgetConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void) {\r\n            this.$mdDialog.show({\r\n                    targetEvent: params.event,\r\n                    templateUrl: params.templateUrl || 'dialogs/tile_config/ConfigDialog.html',\r\n                    controller: WidgetConfigDialogController,\r\n                    bindToController: true,\r\n                    controllerAs: 'vm',\r\n                    locals: {\r\n                        extensionUrl: params.extensionUrl,\r\n                        params: params.locals\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((key) => {\r\n                    if (successCallback) {\r\n                        successCallback(key);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipWidgetConfigDialog')\r\n        .config(setTranslations)\r\n        .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\r\n}","\r\nangular\r\n    .module('pipWidgetConfigDialog', ['ngMaterial']);\r\n\r\nimport './ConfigDialogController';\r\nimport './ConfigDialogService';\r\nimport './ConfigDialogExtendComponent';","declare var interact;\r\n\r\nimport {\r\n  DragTileService,\r\n  IDragTileService,\r\n  IDragTileConstructor\r\n} from './DraggableTileService';\r\nimport {\r\n  TilesGridService,\r\n  ITilesGridService,\r\n  ITilesGridConstructor\r\n} from './draggable_group/DraggableTilesGroupService';\r\n\r\nexport const DEFAULT_TILE_WIDTH: number = 150;\r\nexport const DEFAULT_TILE_HEIGHT: number = 150;\r\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\r\n\r\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\r\nconst DEFAULT_OPTIONS = {\r\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\r\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\r\n  gutter: 20, // 'px'\r\n  container: 'pip-draggable-grid:first-of-type',\r\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\r\n  activeDropzoneClass: 'dropzone-active',\r\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\r\n};\r\n\r\n{\r\n  interface IDraggableBindings {\r\n      tilesTemplates: any;\r\n      tilesContext: any;\r\n      options: any;\r\n      groupMenuActions: any;\r\n      $container: JQuery;\r\n  }\r\n\r\n  interface IDraggableControllerScope extends ng.IScope {\r\n    $container: JQuery;\r\n    tilesTemplates: any;\r\n    options: any;\r\n  }\r\n\r\n  interface ITileScope extends ng.IScope {\r\n    index: number | string;\r\n    groupIndex: number | string;\r\n  }\r\n\r\n  class DraggableController implements ng.IComponentController, IDraggableBindings {\r\n    public opts: any;\r\n    public groups: any;\r\n    public sourceDropZoneElem: any = null;\r\n    public isSameDropzone: boolean = true;\r\n    public tileGroups: any = null;\r\n    public availableWidth: number;\r\n    public availableColumns: number;\r\n    public groupsContainers: any;\r\n    public container: any;\r\n    public activeDraggedGroup: any;\r\n    public draggedTile: any;\r\n    public containerOffset: any;\r\n    public tilesTemplates: any;\r\n    public tilesContext: any;\r\n    public options: any;\r\n    public groupMenuActions: any;\r\n    public $container: JQuery;\r\n\r\n    constructor(\r\n      private $scope: IDraggableControllerScope,\r\n      private $rootScope: angular.IRootScopeService,\r\n      private $compile: angular.ICompileService,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: JQuery,\r\n      pipDragTile: IDragTileService,\r\n      pipTilesGrid: ITilesGridService,\r\n      pipMedia: pip.layouts.IMediaService\r\n    ) {\r\n      this.opts = _.merge({\r\n        mobileBreakpoint: pipMedia.breakpoints.xs\r\n      }, DEFAULT_OPTIONS, this.options);\r\n\r\n      this.groups = this.tilesTemplates.map((group, groupIndex) => {\r\n        return {\r\n          title: group.title,\r\n          editingName: false,\r\n          index: groupIndex,\r\n          source: group.source.map((tile) => {\r\n            const tileScope = this.createTileScope(tile);\r\n\r\n            return IDragTileConstructor(DragTileService, {\r\n              tpl: $compile(tile.template)(tileScope),\r\n              options: tile.opts,\r\n              size: tile.opts.size\r\n            });\r\n          })\r\n        };\r\n      });\r\n\r\n      // Add templates watcher\r\n      $scope.$watch('$ctrl.tilesTemplates', (newVal) => {\r\n        this.watch(newVal);\r\n      }, true);\r\n\r\n      // Initialize data\r\n      this.initialize();\r\n\r\n      // Resize handler TODO: replace by pip resize watchers\r\n      $(window).on('resize', _.debounce(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n\r\n        this.tileGroups.forEach((group) => {\r\n          group\r\n            .setAvailableColumns(this.availableColumns)\r\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n            .setTilesDimensions()\r\n            .calcContainerHeight();\r\n        });\r\n      }, 50));\r\n    }\r\n\r\n    // Post link function\r\n    public $postLink() {\r\n      this.$container = this.$element;\r\n    }\r\n\r\n    // Watch handler\r\n    private watch(newVal) {\r\n      const prevVal = this.groups;\r\n      let changedGroupIndex = null;\r\n\r\n      if (newVal.length > prevVal.length) {\r\n        this.addGroup(newVal[newVal.length - 1]);\r\n\r\n        return;\r\n      }\r\n\r\n      if (newVal.length < prevVal.length) {\r\n        this.removeGroups(newVal);\r\n\r\n        return;\r\n      }\r\n\r\n      for (let i = 0; i < newVal.length; i++) {\r\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\r\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\r\n          changedGroupIndex = i;\r\n\r\n          if (groupWidgetDiff < 0) {\r\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\r\n\r\n            _.each(newTiles, (tile) => {\r\n              console.log('tile', tile);\r\n            });\r\n\r\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\r\n\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          } else {\r\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\r\n            this.updateTilesOptions(newVal);\r\n            this.$timeout(() => {\r\n              this.updateTilesGroups();\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (newVal && this.tileGroups) {\r\n        this.updateTilesOptions(newVal);\r\n        this.$timeout(() => {\r\n          this.updateTilesGroups();\r\n        });\r\n      }\r\n    }\r\n\r\n    // Inline edit group handlers\r\n    public onTitleClick(group, event) {\r\n      if (!group.editingName) {\r\n        group.oldTitle = _.clone(group.title);\r\n        group.editingName = true;\r\n        this.$timeout(() => {\r\n          $(event.currentTarget.children[0]).focus();\r\n        });\r\n      }\r\n    }\r\n\r\n    public cancelEditing(group) {\r\n      group.title = group.oldTitle;\r\n    }\r\n\r\n    public onBlurTitleInput(group) {\r\n      this.$timeout(() => {\r\n        group.editingName = false;\r\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\r\n        // Update title in outer scope\r\n        this.tilesTemplates[group.index].title = group.title;\r\n      }, 100);\r\n    }\r\n\r\n    public onKyepressTitleInput(group, event) {\r\n      if (event.keyCode === 13) {\r\n        this.onBlurTitleInput(group);\r\n      }\r\n    }\r\n\r\n    // Update outer scope functions\r\n    private updateTilesTemplates(updateType: string, source ? : any) {\r\n      switch (updateType) {\r\n        case 'addGroup':\r\n          if (this.groups.length !== this.tilesTemplates.length) {\r\n            this.tilesTemplates.push(source);\r\n          }\r\n          break;\r\n        case 'moveTile':\r\n          const {\r\n            fromIndex,\r\n            toIndex,\r\n            tileOptions,\r\n            fromTileIndex\r\n          } = {\r\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\r\n            toIndex: source.to.elem.attributes['data-group-id'].value,\r\n            tileOptions: source.tile.opts.options,\r\n            fromTileIndex: source.tile.opts.options.index\r\n          }\r\n          this.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\r\n          this.tilesTemplates[toIndex].source.push({\r\n            opts: tileOptions\r\n          });\r\n\r\n          this.reIndexTiles(source.from.elem);\r\n          this.reIndexTiles(source.to.elem);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Manage tiles functions\r\n    private createTileScope(tile: any): ITileScope {\r\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.tilesContext);\r\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\r\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\r\n\r\n      return tileScope;\r\n    }\r\n\r\n    private removeTiles(group, indexes, container) {\r\n      const tiles = $(container).find('.pip-draggable-tile');\r\n\r\n      _.each(indexes, (index) => {\r\n        group.tiles.splice(index, 1);\r\n        tiles[index].remove();\r\n      });\r\n\r\n      this.reIndexTiles(container);\r\n    }\r\n\r\n    private reIndexTiles(container, gIndex ? ) {\r\n      const tiles = $(container).find('.pip-draggable-tile'),\r\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\r\n\r\n      _.each(tiles, (tile, index) => {\r\n        const child = $(tile).children()[0];\r\n        angular.element(child).scope()['index'] = index;\r\n        angular.element(child).scope()['groupIndex'] = groupIndex;\r\n      });\r\n    }\r\n\r\n    private removeGroups(newGroups) {\r\n      const removeIndexes = [],\r\n        remain = [],\r\n        containers = [];\r\n\r\n\r\n      _.each(this.groups, (group, index) => {\r\n        if (_.findIndex(newGroups, (g) => {\r\n            return g['title'] === group.title\r\n          }) < 0) {\r\n          removeIndexes.push(index);\r\n        } else {\r\n          remain.push(index);\r\n        }\r\n      });\r\n\r\n      _.each(removeIndexes.reverse(), (index) => {\r\n        this.groups.splice(index, 1);\r\n        this.tileGroups.splice(index, 1);\r\n      });\r\n\r\n      _.each(remain, (index) => {\r\n        containers.push(this.groupsContainers[index]);\r\n      });\r\n\r\n      this.groupsContainers = containers;\r\n\r\n      _.each(this.groupsContainers, (container, index) => {\r\n        this.reIndexTiles(container, index);\r\n      });\r\n    }\r\n\r\n    private addGroup(sourceGroup) {\r\n      const group = {\r\n        title: sourceGroup.title,\r\n        source: sourceGroup.source.map((tile) => {\r\n          const tileScope = this.createTileScope(tile);\r\n\r\n          return IDragTileConstructor(DragTileService, {\r\n            tpl: this.$compile(tile.template)(tileScope),\r\n            options: tile.opts,\r\n            size: tile.opts.size\r\n          });\r\n        })\r\n      };\r\n\r\n      this.groups.push(group);\r\n      if (!this.$scope.$$phase) this.$scope.$apply();\r\n\r\n      this.$timeout(() => {\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups.push(\r\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight()\r\n        );\r\n      });\r\n\r\n      this.updateTilesTemplates('addGroup', sourceGroup);\r\n    }\r\n\r\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\r\n      newTiles.forEach((tile) => {\r\n        const tileScope = this.createTileScope(tile);\r\n\r\n        const newTile = IDragTileConstructor(DragTileService, {\r\n          tpl: this.$compile(tile.template)(tileScope),\r\n          options: tile.opts,\r\n          size: tile.opts.size\r\n        });\r\n\r\n        group.addTile(newTile);\r\n\r\n        $('<div>')\r\n          .addClass('pip-draggable-tile')\r\n          .append(newTile.getCompiledTemplate())\r\n          .appendTo(groupContainer);\r\n      });\r\n    }\r\n\r\n    private updateTilesOptions(optionsGroup) {\r\n      optionsGroup.forEach((optionGroup) => {\r\n        optionGroup.source.forEach((tileOptions) => {\r\n          this.tileGroups.forEach((group) => {\r\n            group.updateTileOptions(tileOptions.opts);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\r\n      return tileGroups.map((group, index) => {\r\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\r\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\r\n          .setTilesDimensions()\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\r\n      this.tileGroups.forEach((group) => {\r\n        if (!onlyPosition) {\r\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\r\n        }\r\n\r\n        group\r\n          .setTilesDimensions(onlyPosition, draggedTile)\r\n          .calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private getContainerWidth(): any {\r\n      const container = this.$container || $('body');\r\n      return container.width();\r\n    }\r\n\r\n    private getAvailableColumns(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\r\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\r\n    }\r\n\r\n    private getActiveGroupAndTile(elem): any {\r\n      const active = {};\r\n\r\n      this.tileGroups.forEach((group) => {\r\n        const foundTile = group.getTileByNode(elem);\r\n\r\n        if (foundTile) {\r\n          active['group'] = group;\r\n          active['tile'] = foundTile;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return active;\r\n    }\r\n\r\n    private getSingleTileWidthForMobile(availableWidth): any {\r\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\r\n    }\r\n\r\n    private onDragStartListener(event) {\r\n      const activeEntities = this.getActiveGroupAndTile(event.target);\r\n\r\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\r\n      this.draggedTile = activeEntities['tile'];\r\n      this.activeDraggedGroup = activeEntities['group'];\r\n\r\n      this.$element.addClass('drag-transfer');\r\n\r\n      this.draggedTile.startDrag();\r\n    }\r\n\r\n    private onDragMoveListener(event) {\r\n      const target = event.target;\r\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\r\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\r\n\r\n      this.containerOffset = this.getContainerOffset();\r\n\r\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\r\n      target.style.top = y + 'px';\r\n\r\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\r\n        left: event.pageX - this.containerOffset.left,\r\n        top: event.pageY - this.containerOffset.top\r\n      }, this.draggedTile);\r\n\r\n      if (belowElement) {\r\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\r\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\r\n\r\n        if ((draggedTileIndex + 1) === belowElemIndex) {\r\n          return;\r\n        }\r\n\r\n        this.activeDraggedGroup\r\n          .swapTiles(this.draggedTile, belowElement)\r\n          .setTilesDimensions(true, this.draggedTile);\r\n\r\n        this.$timeout(() => {\r\n          this.setGroupContainersHeight();\r\n        }, 0);\r\n      }\r\n    }\r\n\r\n    private onDragEndListener() {\r\n      this.draggedTile.stopDrag(this.isSameDropzone);\r\n\r\n      this.$element.removeClass('drag-transfer');\r\n      this.activeDraggedGroup = null;\r\n      this.draggedTile = null;\r\n    }\r\n\r\n    private getContainerOffset() {\r\n      const containerRect = this.container.getBoundingClientRect();\r\n\r\n      return {\r\n        left: containerRect.left,\r\n        top: containerRect.top\r\n      };\r\n    }\r\n\r\n    private setGroupContainersHeight() {\r\n      this.tileGroups.forEach((tileGroup) => {\r\n        tileGroup.calcContainerHeight();\r\n      });\r\n    }\r\n\r\n    private moveTile(from, to, tile) {\r\n      let elem;\r\n      const movedTile = from.removeTile(tile);\r\n      const tileScope = this.createTileScope(tile);\r\n\r\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\r\n        .find(movedTile.getElem())\r\n        .remove();\r\n\r\n      if (to !== null) {\r\n        to.addTile(movedTile);\r\n\r\n        elem = this.$compile(movedTile.getElem())(tileScope);\r\n\r\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\r\n          .append(elem);\r\n\r\n        this.$timeout(to.setTilesDimensions.bind(to, true));\r\n      }\r\n\r\n      this.updateTilesTemplates('moveTile', {\r\n        from: from,\r\n        to: to,\r\n        tile: movedTile\r\n      });\r\n    }\r\n\r\n    private onDropListener(event) {\r\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\r\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\r\n\r\n      if (this.activeDraggedGroup !== droppedGroup) {\r\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\r\n      }\r\n\r\n      this.updateTilesGroups(true);\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropToFictGroupListener(event) {\r\n      const from = this.activeDraggedGroup;\r\n      const tile = this.draggedTile;\r\n\r\n      this.addGroup({\r\n        title: 'New group',\r\n        source: []\r\n      });\r\n      this.$timeout(() => {\r\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\r\n        this.updateTilesGroups(true);\r\n      });\r\n\r\n      this.sourceDropZoneElem = null;\r\n    }\r\n\r\n    private onDropEnterListener(event) {\r\n      if (!this.sourceDropZoneElem) {\r\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\r\n      }\r\n\r\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\r\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\r\n        $('body').css('cursor', 'copy');\r\n        this.isSameDropzone = false;\r\n      } else {\r\n        $('body').css('cursor', '');\r\n        this.isSameDropzone = true;\r\n      }\r\n    }\r\n\r\n    private onDropDeactivateListener(event) {\r\n      if (this.sourceDropZoneElem !== event.target) {\r\n        event.target.classList.remove(this.opts.activeDropzoneClass);\r\n        $('body').css('cursor', '');\r\n      }\r\n    }\r\n\r\n    private onDropLeaveListener(event) {\r\n      event.target.classList.remove(this.opts.activeDropzoneClass);\r\n    }\r\n\r\n    private initialize() {\r\n      this.$timeout(() => {\r\n        this.availableWidth = this.getContainerWidth();\r\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\r\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\r\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\r\n\r\n        interact('.pip-draggable-tile')\r\n          .draggable({\r\n            autoScroll: {\r\n              enabled: true,\r\n              container: $('#content').get(0),\r\n              speed: 500\r\n            },\r\n            onstart: (event) => {\r\n              this.onDragStartListener(event)\r\n            },\r\n            onmove: (event) => {\r\n              this.onDragMoveListener(event)\r\n            },\r\n            onend: (event) => {\r\n              this.onDragEndListener()\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group.fict-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropToFictGroupListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        interact('.pip-draggable-group')\r\n          .dropzone({\r\n            ondrop: (event) => {\r\n              this.onDropListener(event)\r\n            },\r\n            ondragenter: (event) => {\r\n              this.onDropEnterListener(event)\r\n            },\r\n            ondropdeactivate: (event) => {\r\n              this.onDropDeactivateListener(event)\r\n            },\r\n            ondragleave: (event) => {\r\n              this.onDropLeaveListener(event)\r\n            }\r\n          });\r\n\r\n        this.$container\r\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\r\n            interact('.pip-draggable-tile').draggable(false);\r\n            $(this).trigger('click');\r\n          })\r\n          .on('mouseup touchend', () => {\r\n            interact('.pip-draggable-tile').draggable(true);\r\n          });\r\n          \r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  const DragComponent: ng.IComponentOptions = {\r\n    bindings: {\r\n      tilesTemplates: '=pipTilesTemplates',\r\n      tilesContext: '=pipTilesContext',\r\n      options: '=pipDraggableGrid',\r\n      groupMenuActions: '=pipGroupMenuActions'\r\n    },\r\n    //controllerAs: 'DraggedCtrl',\r\n    templateUrl: 'draggable/Draggable.html',\r\n    controller: DraggableController\r\n  }\r\n\r\n  angular.module('pipDragged')\r\n    .component('pipDraggableGrid', DragComponent);\r\n}","export interface DragTileConstructor {\r\n  new (options: any);\r\n}\r\n\r\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\r\n  return new constructor(options);\r\n}\r\n\r\nexport interface IDragTileService {\r\n  tpl: any;\r\n  opts: any;\r\n  size: any;\r\n  elem: any;\r\n  preview: any;\r\n  getSize(): any;\r\n  setSize(width, height): any;\r\n  setPosition(left, top): any;\r\n  getCompiledTemplate(): any;\r\n  updateElem(parent): any;\r\n  getElem(): any;\r\n  startDrag(): any;\r\n  stopDrag(isAnimate): any;\r\n  setPreviewPosition(coords): void;\r\n  getOptions(): any;\r\n  setOptions(options): any;\r\n}\r\n\r\nlet DEFAULT_TILE_SIZE = {\r\n  colSpan: 1,\r\n  rowSpan: 1\r\n};\r\n\r\nexport class DragTileService implements IDragTileService {\r\n  public tpl: any;\r\n  public opts: any;\r\n  public size: any;\r\n  public elem: any;\r\n  public preview: any;\r\n\r\n  constructor (options: any) {\r\n    this.tpl = options.tpl.get(0);\r\n    this.opts = options;\r\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\r\n    this.elem = null;\r\n  }\r\n\r\n  public getSize(): any {\r\n    return this.size;\r\n  }\r\n\r\n  public setSize(width, height): any {\r\n    this.size.width = width;\r\n    this.size.height = height;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        width: width,\r\n        height: height\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setPosition(left, top): any {\r\n    this.size.left = left;\r\n    this.size.top = top;\r\n\r\n    if (this.elem) {\r\n      this.elem.css({\r\n        left: left,\r\n        top: top\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public getCompiledTemplate(): any {\r\n    return this.tpl;\r\n  };\r\n\r\n  public updateElem(parent): any {\r\n    this.elem = $(this.tpl).parent(parent);\r\n\r\n    return this;\r\n  };\r\n\r\n  public getElem(): any {\r\n    return this.elem.get(0);\r\n  };\r\n\r\n  public startDrag(): any {\r\n    this.preview = $('<div>')\r\n      .addClass('pip-dragged-preview')\r\n      .css({\r\n        position: 'absolute',\r\n        left: this.elem.css('left'),\r\n        top: this.elem.css('top'),\r\n        width: this.elem.css('width'),\r\n        height: this.elem.css('height')\r\n      });\r\n\r\n    this.elem\r\n      .addClass('no-animation')\r\n      .css({\r\n        zIndex: '9999'\r\n      })\r\n      .after(this.preview);\r\n\r\n    return this;\r\n  };\r\n\r\n  public stopDrag(isAnimate): any {\r\n    let self = this;\r\n\r\n    if (isAnimate) {\r\n      this.elem\r\n        .removeClass('no-animation')\r\n        .css({\r\n          left: this.preview.css('left'),\r\n          top: this.preview.css('top')\r\n        })\r\n        .on('transitionend', onTransitionEnd);\r\n    } else {\r\n      self.elem\r\n        .css({\r\n          left: self.preview.css('left'),\r\n          top: self.preview.css('top'),\r\n          zIndex: ''\r\n        })\r\n        .removeClass('no-animation');\r\n\r\n      self.preview.remove();\r\n      self.preview = null;\r\n    }\r\n\r\n    return this;\r\n\r\n    function onTransitionEnd() {\r\n      if (self.preview) {\r\n        self.preview.remove();\r\n        self.preview = null;\r\n      }\r\n\r\n      self.elem\r\n        .css('zIndex', '')\r\n        .off('transitionend', onTransitionEnd);\r\n    }\r\n  };\r\n\r\n  public setPreviewPosition(coords) {\r\n    this.preview.css(coords);\r\n  };\r\n\r\n  public getOptions(): any {\r\n    return this.opts.options;\r\n  };\r\n\r\n  public setOptions(options): any {\r\n    _.merge(this.opts.options, options);\r\n    _.merge(this.size, options.size);\r\n\r\n    return this;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipDragTile', function () {\r\n    return function (options) {\r\n      let newTile = new DragTileService(options);\r\n\r\n      return newTile;\r\n    }\r\n  });","{\r\n  interface DraggableTileAttributes extends ng.IAttributes {\r\n    pipDraggableTiles: any;\r\n  }\r\n\r\n  function DraggableTileLink(\r\n    $scope: ng.IScope,\r\n    $elem: JQuery,\r\n    $attr: DraggableTileAttributes\r\n  ) {\r\n    const docFrag = document.createDocumentFragment(),\r\n      group = $scope.$eval($attr.pipDraggableTiles);\r\n\r\n    group.forEach(function (tile) {\r\n      const tpl = wrapComponent(tile.getCompiledTemplate());\r\n      docFrag.appendChild(tpl);\r\n    });\r\n\r\n    $elem.append(docFrag);\r\n\r\n    function wrapComponent(elem) {\r\n      return $('<div>')\r\n        .addClass('pip-draggable-tile')\r\n        .append(elem)\r\n        .get(0);\r\n    }\r\n  }\r\n\r\n  function DraggableTile() {\r\n    return {\r\n      restrict: 'A',\r\n      link: DraggableTileLink\r\n    };\r\n  }\r\n\r\n  angular\r\n    .module('pipDragged')\r\n    .directive('pipDraggableTiles', DraggableTile);\r\n\r\n}","export interface TilesGridConstructor {\r\n  new(tiles, options, columns, elem);\r\n}\r\n\r\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\r\n  return new constructor(tiles, options, columns, elem);\r\n}\r\n\r\nexport interface ITilesGridService {\r\n  tiles: any;\r\n  opts: any;\r\n  columns: any;\r\n  elem: any;\r\n  gridCells: any;\r\n  inline: boolean;\r\n  isMobileLayout: boolean;\r\n\r\n  addTile(tile): any;\r\n  getCellByPosition(row, col): any;\r\n  getCells(prevCell, rowSpan, colSpan): any;\r\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\r\n  getCell(src, basicRow, basicCol, columns): any;\r\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\r\n  getBasicRow(prevCell): any;\r\n  isCellFree(row, col): any;\r\n  getCellIndex(srcCell): any;\r\n  reserveCells(start, end, elem): void;\r\n  clearElements(): void;\r\n  setAvailableColumns(columns): any;\r\n  generateGrid(singleTileWidth ? ): any;\r\n  setTilesDimensions(onlyPosition, draggedTile): any;\r\n  calcContainerHeight(): any;\r\n  getTileByNode(node): any;\r\n  getTileByCoordinates(coords, draggedTile): any;\r\n  getTileIndex(tile): any;\r\n  swapTiles(movedTile, beforeTile): any;\r\n  removeTile(removeTile): any;\r\n  updateTileOptions(opts): any;\r\n}\r\n\r\nconst MOBILE_LAYOUT_COLUMNS = 2;\r\n\r\nexport class TilesGridService implements ITilesGridService {\r\n  public tiles: any;\r\n  public opts: any;\r\n  public columns: any;\r\n  public elem: any;\r\n  public gridCells: any = [];\r\n  public inline: boolean = false;\r\n  public isMobileLayout: boolean;\r\n\r\n  constructor(tiles, options, columns, elem) {\r\n    this.tiles = tiles;\r\n    this.opts = options;\r\n    this.columns = columns || 0; // available columns in a row\r\n    this.elem = elem;\r\n    this.gridCells = [];\r\n    this.inline = options.inline || false;\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n  }\r\n\r\n  public addTile(tile): any {\r\n    this.tiles.push(tile);\r\n    if (this.tiles.length === 1) {\r\n      this.generateGrid();\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getCellByPosition(row, col): any {\r\n    return this.gridCells[row][col];\r\n  };\r\n\r\n  public getCells(prevCell, rowSpan, colSpan): any {\r\n    if (this.isMobileLayout) {\r\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\r\n    } else {\r\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n\r\n    // Small tile\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Medium tile\r\n    if (colSpan === 2 && rowSpan === 1) {\r\n      const prevTileSize = prevCell && prevCell.elem.size || null;\r\n\r\n      if (!prevTileSize) {\r\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\r\n        if (this.columns - basicCol - 2 > 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\r\n        if (prevCell.row % 2 === 0) {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\r\n        } else {\r\n          if (this.columns - basicCol - 3 >= 0) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n          }\r\n        }\r\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\r\n        if (this.columns - basicCol - 3 >= 0) {\r\n          if (this.isCellFree(basicRow, basicCol + 1)) {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          } else {\r\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\r\n          }\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Big tile\r\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\r\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\r\n    } else if (rowSpan === 2 && colSpan === 2) {\r\n      if (this.columns - basicCol - 2 > 0) {\r\n        if (this.isCellFree(basicRow, basicCol + 1)) {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\r\n        } else {\r\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\r\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\r\n        }\r\n      } else {\r\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\r\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getCell(src, basicRow, basicCol, columns): any {\r\n    let cell, col, row;\r\n\r\n    if (this.isMobileLayout) {\r\n      // mobile layout\r\n      for (col = basicCol; col < columns; col++) {\r\n        if (!src[basicRow][col].elem) {\r\n          cell = src[basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return cell;\r\n    }\r\n\r\n    // desktop\r\n    for (col = basicCol; col < columns; col++) {\r\n      for (row = 0; row < 2; row++) {\r\n        if (!src[row + basicRow][col].elem) {\r\n          cell = src[row + basicRow][col];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cell) {\r\n        return cell;\r\n      }\r\n    }\r\n  };\r\n\r\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\r\n    let leftCornerCell;\r\n    let rightCornerCell;\r\n    const basicRow = this.getBasicRow(prevCell);\r\n    const basicCol = prevCell && prevCell.col || 0;\r\n\r\n\r\n    if (colSpan === 1 && rowSpan === 1) {\r\n      const gridCopy = this.gridCells.slice();\r\n\r\n      if (!prevCell) {\r\n        leftCornerCell = gridCopy[0][0];\r\n      } else {\r\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\r\n\r\n        if (!leftCornerCell) {\r\n          const rowShift = this.isMobileLayout ? 1 : 2;\r\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!prevCell) {\r\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\r\n    } else if (colSpan === 2) {\r\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\r\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\r\n    }\r\n\r\n    return {\r\n      start: leftCornerCell,\r\n      end: rightCornerCell\r\n    };\r\n  };\r\n\r\n  public getBasicRow(prevCell): any {\r\n    let basicRow;\r\n\r\n    if (this.isMobileLayout) {\r\n      if (prevCell) {\r\n        basicRow = prevCell && prevCell.row || 0;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    } else {\r\n      if (prevCell) {\r\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\r\n      } else {\r\n        basicRow = 0;\r\n      }\r\n    }\r\n\r\n    return basicRow;\r\n  };\r\n\r\n  public isCellFree(row, col): any {\r\n    return !this.gridCells[row][col].elem;\r\n  };\r\n\r\n  public getCellIndex(srcCell): any {\r\n    const self = this;\r\n    let index;\r\n\r\n    this.gridCells.forEach((row, rowIndex) => {\r\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\r\n        return cell === srcCell;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        return;\r\n      }\r\n    });\r\n\r\n    return index !== -1 ? index : 0;\r\n  };\r\n\r\n  public reserveCells(start, end, elem) {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (cell.row >= start.row && cell.row <= end.row &&\r\n          cell.col >= start.col && cell.col <= end.col) {\r\n          cell.elem = elem;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public clearElements() {\r\n    this.gridCells.forEach((row) => {\r\n      row.forEach((tile) => {\r\n        tile.elem = null;\r\n      });\r\n    });\r\n  };\r\n\r\n  public setAvailableColumns(columns): any {\r\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\r\n    this.columns = columns;\r\n\r\n    return this;\r\n  };\r\n\r\n  public generateGrid(singleTileWidth ? ): any {\r\n    const self = this,\r\n          tileWidth = singleTileWidth || this.opts.tileWidth,\r\n          offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\r\n    let   colsInRow = 0,\r\n          rows = 0,\r\n          gridInRow = [];\r\n\r\n    this.gridCells = [];\r\n\r\n    this.tiles.forEach((tile, index, srcTiles) => {\r\n      const tileSize = tile.getSize();\r\n\r\n      generateCells(tileSize.colSpan);\r\n\r\n      if (srcTiles.length === index + 1) {\r\n        if (colsInRow < self.columns) {\r\n          generateCells(self.columns - colsInRow);\r\n        }\r\n\r\n        // Generate more cells for extends tile size to big\r\n        if (self.tiles.length * 2 > self.gridCells.length) {\r\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\r\n            generateCells(self.columns);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    function generateCells(newCellCount) {\r\n      Array.apply(null, Array(newCellCount)).forEach(() => {\r\n        if (self.columns < colsInRow + 1) {\r\n          rows++;\r\n          colsInRow = 0;\r\n\r\n          self.gridCells.push(gridInRow);\r\n          gridInRow = [];\r\n        }\r\n\r\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\r\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\r\n\r\n        // Describe grid cell size through block corners coordinates\r\n        gridInRow.push({\r\n          top: top,\r\n          left: left,\r\n          bottom: top + self.opts.tileHeight,\r\n          right: left + tileWidth,\r\n          row: rows,\r\n          col: colsInRow\r\n        });\r\n\r\n        colsInRow++;\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public setTilesDimensions(onlyPosition, draggedTile): any {\r\n    const self = this;\r\n    let currIndex = 0;\r\n    let prevCell;\r\n\r\n    if (onlyPosition) {\r\n      self.clearElements();\r\n    }\r\n\r\n    this.tiles.forEach((tile) => {\r\n      const tileSize = tile.getSize();\r\n      let startCell;\r\n      let width;\r\n      let height;\r\n      let cells;\r\n\r\n      tile.updateElem('.pip-draggable-tile');\r\n      if (tileSize.colSpan === 1) {\r\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\r\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\r\n        } else {\r\n          startCell = self.getCells(prevCell, 1, 1).start;\r\n        }\r\n\r\n\r\n        if (!onlyPosition) {\r\n          width = startCell.right - startCell.left;\r\n          height = startCell.bottom - startCell.top;\r\n        }\r\n\r\n        prevCell = startCell;\r\n\r\n        self.reserveCells(startCell, startCell, tile);\r\n\r\n        currIndex++;\r\n      } else if (tileSize.colSpan === 2) {\r\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\r\n        startCell = cells.start;\r\n\r\n        if (!onlyPosition) {\r\n          width = cells.end.right - cells.start.left;\r\n          height = cells.end.bottom - cells.start.top;\r\n        }\r\n\r\n        prevCell = cells.end;\r\n\r\n        self.reserveCells(cells.start, cells.end, tile);\r\n\r\n        currIndex += 2;\r\n      }\r\n\r\n      // Render preview\r\n      // while tiles from group is dragged\r\n      if (draggedTile === tile) {\r\n        tile.setPreviewPosition({\r\n          left: startCell.left,\r\n          top: startCell.top\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      if (!onlyPosition) {\r\n        tile.setSize(width, height);\r\n      }\r\n\r\n      tile.setPosition(startCell.left, startCell.top);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  public calcContainerHeight(): any {\r\n    let maxHeightSize, maxWidthSize;\r\n\r\n    if (!this.tiles.length) {\r\n      return this;\r\n    }\r\n\r\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\r\n      const tileSize = tile['getSize']();\r\n      return tileSize.top + tileSize.height;\r\n    })['getSize']();\r\n\r\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\r\n\r\n    if (this.inline) {\r\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\r\n        const tileSize = tile['getSize']();\r\n        return tileSize.left + tileSize.width;\r\n      })['getSize']();\r\n\r\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  public getTileByNode(node): any {\r\n    const foundTile = this.tiles.filter((tile) => {\r\n      return node === tile.getElem();\r\n    });\r\n\r\n    return foundTile.length ? foundTile[0] : null;\r\n  };\r\n\r\n  public getTileByCoordinates(coords, draggedTile): any {\r\n    return this.tiles\r\n      .filter((tile) => {\r\n        const tileSize = tile.getSize();\r\n\r\n        return tile !== draggedTile &&\r\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\r\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\r\n      })[0] || null;\r\n  };\r\n\r\n  public getTileIndex(tile): any {\r\n    return _.findIndex(this.tiles, tile);\r\n  };\r\n\r\n  public swapTiles(movedTile, beforeTile): any {\r\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\r\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\r\n\r\n    this.tiles.splice(movedTileIndex, 1);\r\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\r\n\r\n    return this;\r\n  };\r\n\r\n  public removeTile(removeTile): any {\r\n    let droppedTile;\r\n\r\n    this.tiles.forEach((tile, index, tiles) => {\r\n      if (tile === removeTile) {\r\n        droppedTile = tiles.splice(index, 1)[0];\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return droppedTile;\r\n  };\r\n\r\n  public updateTileOptions(opts): any {\r\n    const index = _.findIndex(this.tiles, (tile) => {\r\n      return tile['getOptions']() === opts;\r\n    });\r\n\r\n    if (index !== -1) {\r\n      this.tiles[index].setOptions(opts);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nangular\r\n  .module('pipDragged')\r\n  .service('pipTilesGrid', function () {\r\n    return function (tiles, options, columns, elem) {\r\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\r\n\r\n      return newGrid;\r\n    }\r\n  });","angular.module('pipDragged', []);\r\n\r\nimport './DraggableTileService';\r\nimport './Draggable';\r\nimport './draggable_group/DraggableTilesGroupService'\r\nimport './draggable_group/DraggableTilesGroupDirective'","import './widgets/index';\r\nimport './draggable/index';\r\nconsole.log('here');\r\nangular.module('pipDashboard', [\r\n  'pipWidget',\r\n  'pipDragged',\r\n  'pipDashboardDialogs',\r\n  'pipDashboard.Templates',\r\n\r\n  // External pip modules\r\n  'pipLayout',\r\n  'pipLocations',\r\n  'pipDateTime',\r\n  'pipCharts',\r\n  'pipTranslate',\r\n  'pipControls',\r\n  'pipButtons'\r\n]);\r\n\r\nimport './utility/WidgetTemplateUtility';\r\nimport './dialogs/index';\r\nimport './Dashboard';\r\n","export interface IWidgetTemplateService {\r\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\r\n    setImageMarginCSS($element, image): void;\r\n} \r\n\r\n{\r\n    class widgetTemplateService implements IWidgetTemplateService {\r\n        private _$interpolate: angular.IInterpolateService;\r\n        private _$compile: angular.ICompileService;\r\n        private _$templateRequest: angular.ITemplateRequestService;\r\n\r\n        constructor(\r\n            $interpolate: angular.IInterpolateService,\r\n            $compile: angular.ICompileService,\r\n            $templateRequest: angular.ITemplateRequestService\r\n        ) {\r\n            this._$interpolate = $interpolate;\r\n            this._$compile = $compile;\r\n            this._$templateRequest = $templateRequest;\r\n        }\r\n\r\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\r\n            const {\r\n                template,\r\n                templateUrl,\r\n                type\r\n            } = source;\r\n            let result;\r\n\r\n            if (type) {\r\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\r\n                return strictCompile == true ?\r\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\r\n                    interpolated;\r\n            }\r\n\r\n            if (template) {\r\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\r\n            }\r\n\r\n            if (templateUrl) {\r\n                this._$templateRequest(templateUrl, false).then((html) => {\r\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public setImageMarginCSS($element, image) {\r\n            let\r\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\r\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\r\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\r\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\r\n                margin = 0,\r\n                cssParams = {};\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            $(image).css(cssParams);\r\n        }\r\n    }\r\n\r\n    // image load directive TODO: remove to pipImageUtils\r\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\r\n                const callback = $parse(attrs.pipImageLoad);\r\n\r\n                element.bind('load', (event) => {\r\n                    callback(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDashboard')\r\n        .service('pipWidgetTemplate', widgetTemplateService)\r\n        .directive('pipImageLoad', ImageLoad);\r\n}","export interface IDashboardWidget {\r\n    options: any;\r\n    color: string;\r\n    size: Object | string | number;\r\n}\r\n\r\nexport class DashboardWidget implements IDashboardWidget {\r\n    public options: any;\r\n    public color: string;\r\n    public size: Object | string | number;\r\n\r\n    constructor() { }\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class CalendarWidgetController extends MenuWidgetService {\r\n    constructor(\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n        this.menu.push({\r\n          title: 'Configurate',\r\n          click: () => {\r\n            this.onConfigClick();\r\n          }\r\n        });\r\n        this.options.date = this.options.date || new Date();\r\n        this.color = this.options.color || 'blue';\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          date: this.options.date,\r\n        },\r\n        extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  const CalendarWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n    },\r\n    controller: CalendarWidgetController,\r\n    templateUrl: 'widgets/calendar/WidgetCalendar.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipCalendarWidget', CalendarWidget);\r\n\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService'; \r\n{\r\n  class EventWidgetController extends MenuWidgetService {\r\n    private _oldOpacity: number;\r\n\r\n    public opacity: number = 0.57;\r\n\r\n    constructor(\r\n      $scope: ng.IScope,\r\n      private $element: JQuery,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'gray';\r\n      this.opacity = this.options.opacity || this.opacity;\r\n\r\n      this.drawImage();\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        this.drawImage();\r\n      });\r\n    }\r\n\r\n    private drawImage() {\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.onImageLoad(this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this._oldOpacity = _.clone(this.opacity);\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size || {\r\n            colSpan: 1,\r\n            rowSpan: 1\r\n          },\r\n          date: this.options.date,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n          opacity: this.opacity,\r\n          onOpacitytest: (opacity) => {\r\n            this.opacity = opacity;\r\n          }\r\n        },\r\n        extensionUrl: 'widgets/event/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.options.date = result.date;\r\n        this.options.title = result.title;\r\n        this.options.text = result.text;\r\n        this.options.opacity = result.opacity;\r\n      }, () => {\r\n        this.opacity = this._oldOpacity;\r\n      });\r\n    }\r\n\r\n    private onImageLoad(image) {\r\n      this.setImageMarginCSS(this.$element.parent(), image);\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      if (this.options.image) {\r\n        this.$timeout(() => {\r\n          this.setImageMarginCSS(this.$element.parent(), this.$element.find('img'));\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    // Later replace by pipImageUtils sevice's function\r\n    private setImageMarginCSS($element, image) {\r\n      let\r\n        containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\r\n        containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\r\n        imageWidth = image[0].naturalWidth || image.width,\r\n        imageHeight = image[0].naturalHeight || image.height,\r\n        margin = 0,\r\n        cssParams = {};\r\n\r\n      if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n        margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n        cssParams['margin-left'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + containerHeight + 'px'; //'100%';\r\n        cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\r\n        cssParams['margin-top'] = '';\r\n      } else {\r\n        margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n        cssParams['margin-top'] = '' + margin + 'px';\r\n        cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\r\n        cssParams['width'] = '' + containerWidth + 'px'; //'100%';\r\n        cssParams['margin-left'] = '';\r\n      }\r\n\r\n      image.css(cssParams);\r\n    }\r\n  }\r\n\r\n\r\n  const EventWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: EventWidgetController,\r\n    templateUrl: 'widgets/event/WidgetEvent.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipEventWidget', EventWidget);\r\n}","angular.module('pipWidget', []);\r\n\r\nimport './calendar/WidgetCalendar';\r\nimport './event/WidgetEvent';\r\nimport './menu/WidgetMenuService';\r\nimport './menu/WidgetMenuDirective';\r\nimport './notes/WidgetNotes';\r\nimport './position/WidgetPosition';\r\nimport './statistics/WidgetStatistics';\r\nimport './picture_slider/WidgetPictureSlider';\r\n","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .directive('pipMenuWidget', pipMenuWidget);\r\n\r\n  function pipMenuWidget() {\r\n    return {\r\n      restrict        : 'EA',\r\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\r\n    };\r\n  }\r\n})();\r\n","import { DashboardWidget } from '../WidgetClass';\r\n\r\nexport class MenuWidgetService extends DashboardWidget {\r\n  public menu: any = [{\r\n    title: 'Change Size',\r\n    action: angular.noop,\r\n    submenu: [{\r\n        title: '1 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 1,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 1',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 1\r\n        }\r\n      },\r\n      {\r\n        title: '2 x 2',\r\n        action: 'changeSize',\r\n        params: {\r\n          sizeX: 2,\r\n          sizeY: 2\r\n        }\r\n      }\r\n    ]\r\n  }];\r\n\r\n  constructor() {\r\n    \"ngInject\";\r\n\r\n    super();\r\n  }\r\n\r\n  public callAction(actionName, params, item) {\r\n    if (this[actionName]) {\r\n      this[actionName].call(this, params);\r\n    }\r\n\r\n    if (item['click']) {\r\n      item['click'].call(item, params, this);\r\n    }\r\n  };\r\n\r\n  public changeSize(params) {\r\n    this.options.size.colSpan = params.sizeX;\r\n    this.options.size.rowSpan = params.sizeY;\r\n  };\r\n}\r\n\r\n{\r\n  class MenuWidgetProvider {\r\n    private _service: MenuWidgetService;\r\n\r\n    constructor() {}\r\n\r\n    public $get() {\r\n      \"ngInject\";\r\n\r\n      if (this._service == null)\r\n        this._service = new MenuWidgetService();\r\n\r\n      return this._service;\r\n    }\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .provider('pipWidgetMenu', MenuWidgetProvider);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class NotesWidgetController extends MenuWidgetService {\r\n\r\n    constructor(\r\n      private pipWidgetConfigDialogService: IWidgetConfigService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.color = this.options.color || 'orange';\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-calendar-config',\r\n        locals: {\r\n          color: this.color,\r\n          size: this.options.size,\r\n          title: this.options.title,\r\n          text: this.options.text,\r\n        },\r\n        extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.color = result.color;\r\n        this.options.color = result.color;\r\n        this.changeSize(result.size);\r\n        this.options.text = result.text;\r\n        this.options.title = result.title;\r\n      });\r\n    }\r\n  }\r\n\r\n  const NotesWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: NotesWidgetController,\r\n    templateUrl: 'widgets/notes/WidgetNotes.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipNotesWidget', NotesWidget);\r\n}","'use strict';\r\n\r\nimport {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\nimport {\r\n  IWidgetTemplateService\r\n} from '../../utility/WidgetTemplateUtility';\r\n\r\n{\r\n  class PictureSliderController extends MenuWidgetService {\r\n    public animationType: string = 'fading';\r\n    public animationInterval: number = 5000;\r\n\r\n    constructor(\r\n      private $scope: angular.IScope,\r\n      private $element: any,\r\n      private $timeout: angular.ITimeoutService,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService,\r\n      private pipWidgetTemplate: IWidgetTemplateService\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        this.animationType = this.options.animationType || this.animationType;\r\n        this.animationInterval = this.options.animationInterval || this.animationInterval;\r\n      }\r\n    }\r\n\r\n    public onImageLoad($event) {\r\n      this.$timeout(() => {\r\n        this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), $event.target);\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.$timeout(() => {\r\n        _.each(this.$element.find('img'), (image) => {\r\n          this.pipWidgetTemplate.setImageMarginCSS(this.$element.parent(), image);\r\n        });\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  const PictureSliderWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: PictureSliderController,\r\n    templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipPictureSliderWidget', PictureSliderWidget);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\nimport {\r\n  IWidgetConfigService\r\n} from '../../dialogs/tile_config/ConfigDialogService';\r\n\r\n{\r\n  class PositionWidgetController extends MenuWidgetService {\r\n    public showPosition: boolean = true;\r\n\r\n    constructor(\r\n      $scope: angular.IScope,\r\n      private $timeout: angular.ITimeoutService,\r\n      private $element: any,\r\n      private pipWidgetConfigDialogService: IWidgetConfigService,\r\n      private pipLocationEditDialog: any,\r\n    ) {\r\n      super();\r\n\r\n      if (this.options) {\r\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\r\n      }\r\n\r\n      this.menu.push({\r\n        title: 'Configurate',\r\n        click: () => {\r\n          this.onConfigClick();\r\n        }\r\n      });\r\n      this.menu.push({\r\n        title: 'Change location',\r\n        click: () => {\r\n          this.openLocationEditDialog();\r\n        }\r\n      });\r\n\r\n      this.options.location = this.options.location || this.options.position;\r\n\r\n      $scope.$watch('widgetCtrl.options.location', () => {\r\n        this.reDrawPosition();\r\n      });\r\n\r\n      // TODO it doesn't work\r\n      $scope.$watch(() => {\r\n        return $element.is(':visible');\r\n      }, (newVal) => {\r\n        if (newVal == true) this.reDrawPosition();\r\n      });\r\n    }\r\n\r\n    private onConfigClick() {\r\n      this.pipWidgetConfigDialogService.show({\r\n        dialogClass: 'pip-position-config',\r\n        locals: {\r\n          size: this.options.size,\r\n          locationName: this.options.locationName,\r\n          hideColors: true,\r\n        },\r\n        extensionUrl: 'widgets/position/ConfigDialogExtension.html'\r\n      }, (result: any) => {\r\n        this.changeSize(result.size);\r\n        this.options.locationName = result.locationName;\r\n      });\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reDrawPosition();\r\n    }\r\n\r\n    public openLocationEditDialog() {\r\n      this.pipLocationEditDialog.show({\r\n        locationName: this.options.locationName,\r\n        locationPos: this.options.location\r\n      }, (newPosition) => {\r\n        if (newPosition) {\r\n          this.options.location = newPosition.location;\r\n          this.options.locationName = newPosition.locatioName;\r\n        }\r\n      });\r\n    }\r\n\r\n    private reDrawPosition() {\r\n      this.showPosition = false;\r\n      this.$timeout(() => {\r\n        this.showPosition = true;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n\r\n  const PositionWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions',\r\n      index: '=',\r\n      group: '='\r\n    },\r\n    controller: PositionWidgetController,\r\n    templateUrl: 'widgets/position/WidgetPosition.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipPositionWidget', PositionWidget);\r\n}","import {\r\n  MenuWidgetService\r\n} from '../menu/WidgetMenuService';\r\n\r\n{\r\n  const SMALL_CHART: number = 70;\r\n  const BIG_CHART: number = 250;\r\n\r\n  class StatisticsWidgetController extends MenuWidgetService {\r\n    private _$scope: angular.IScope;\r\n    private _$timeout: angular.ITimeoutService;\r\n\r\n    public reset: boolean = false;\r\n    public chartSize: number = SMALL_CHART;\r\n\r\n    constructor(\r\n      pipWidgetMenu: any,\r\n      $scope: angular.IScope,\r\n      $timeout: angular.ITimeoutService\r\n    ) {\r\n      super();\r\n      this._$scope = $scope;\r\n      this._$timeout = $timeout;\r\n\r\n      if (this.options) {\r\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\r\n      }\r\n\r\n      this.setChartSize();\r\n    }\r\n\r\n    public changeSize(params) {\r\n      this.options.size.colSpan = params.sizeX;\r\n      this.options.size.rowSpan = params.sizeY;\r\n\r\n      this.reset = true;\r\n      this.setChartSize();\r\n      this._$timeout(() => {\r\n        this.reset = false;\r\n      }, 500);\r\n    }\r\n\r\n    private setChartSize() {\r\n      this.chartSize = this.options.size.colSpan == 2 && this.options.size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\r\n    }\r\n  }\r\n\r\n\r\n  const StatisticsWidget: ng.IComponentOptions = {\r\n    bindings: {\r\n      options: '=pipOptions'\r\n    },\r\n    controller: StatisticsWidgetController,\r\n    templateUrl: 'widgets/statistics/WidgetStatistics.html'\r\n  }\r\n\r\n  angular\r\n    .module('pipWidget')\r\n    .component('pipStatisticsWidget', StatisticsWidget);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"$ctrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"$ctrl.groupedWidgets\" pip-tiles-context=\"$ctrl.widgetsContext\" pip-draggable-grid=\"$ctrl.draggableGridOptions\" pip-group-menu-actions=\"$ctrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in $ctrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"$ctrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"$ctrl.onBlurTitleInput(group)\" ng-keypress=\"$ctrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"$ctrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in $ctrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_COMPONENT_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/tile_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/tile_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_WIDGET_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ $ctrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ $ctrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ $ctrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"$ctrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"$ctrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"$ctrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><img ng-if=\"$ctrl.options.image\" ng-src=\"{{$ctrl.options.image}}\" alt=\"{{$ctrl.options.title || $ctrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ $ctrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"$ctrl.options.date\">{{ $ctrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ $ctrl.options.text || $ctrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ $ctrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"$ctrl.options.title || $ctrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span></div><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ $ctrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ $ctrl.options.title }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!$ctrl.options.locationName\"><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"$ctrl.options.locationName\"><span class=\"flex text-overflow\">{{ $ctrl.options.locationName }}</span><pip-menu-widget ng-if=\"!$ctrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"$ctrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"$ctrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.series && !$ctrl.reset\"><pip-pie-chart pip-series=\"$ctrl.options.series\" ng-if=\"!$ctrl.options.chartType || $ctrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"$ctrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}