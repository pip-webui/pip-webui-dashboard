{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Dashboard.ts","src/DashboardComponent.ts","src/DashboardController.ts","src/dialogs/add_component/AddComponentDialogController.ts","src/dialogs/add_component/AddComponentProvider.ts","src/dialogs/widget_config/ConfigDialogController.ts","src/dialogs/widget_config/ConfigDialogExtendComponent.ts","src/dialogs/widget_config/ConfigDialogService.ts","src/draggable/Draggable.ts","src/draggable/DraggableController.ts","src/draggable/DraggableDirective.ts","src/draggable/DraggableTileService.ts","src/draggable/draggable_group/DraggableTilesGroupDirective.ts","src/draggable/draggable_group/DraggableTilesGroupService.ts","src/utility/WidgetTemplateUtility.ts","src/widgets/Widgets.ts","src/widgets/calendar/WidgetCalendar.ts","src/widgets/event/WidgetEvent.ts","src/widgets/menu/WidgetMenuDirective.ts","src/widgets/menu/WidgetMenuService.ts","src/widgets/notes/WidgetNotes.ts","src/widgets/picture_slider/WidgetPictureSlider.ts","src/widgets/position/WidgetPosition.ts","src/widgets/statistics/WidgetStatistics.ts","temp/pip-webui-dashboard-html.min.js"],"names":[],"mappings":"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pH,CAAC;IACH,iCAAC;AAAD,CArCA,AAqCC,CArCwC,qCAAiB,GAqCzD;AAED,CAAC;IACC,YAAY,CAAC;IAEb,IAAI,mBAAmB,GAAG;QACtB,QAAQ,EAAa;YACnB,OAAO,EAAE,aAAa;SACvB;QACD,gBAAgB,EAAE,IAAI;QACtB,UAAU,EAAQ,0BAA0B;QAC5C,YAAY,EAAM,YAAY;QAC9B,WAAW,EAAO,0CAA0C;KAC/D,CAAA;IAED,OAAO;SACJ,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;AAC3D,CAAC,CAAC,EAAE,CAAC;;;AC5DL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import './widgets/Widgets';\nimport './draggable/Draggable';\n\n(function () {\n  'use strict';\n\n  angular.module('pipDashboard', [\n    'pipWidget', \n    'pipDragged', \n    'pipWidgetConfigDialog', \n    'pipAddDashboardComponentDialog',\n    'pipDashboard.Templates',\n\n    // External pip modules\n    'pipLayout',\n    'pipLocations',\n    'pipDateTime',\n    'pipCharts',\n    'pipTranslate',\n    'pipControls'\n  ]);\n  \n})();\n\nimport './utility/WidgetTemplateUtility';\nimport './dialogs/widget_config/ConfigDialogController';\nimport './dialogs/add_component/AddComponentDialogController';\nimport './DashboardController';\nimport './DashboardComponent';\n","(function () {\n  'use strict';\n\n  const pipDashboard = {\n    bindings: {\n      gridOptions: '=pipGridOptions',\n      groupAdditionalActions: '=pipGroupActions',\n      groupedWidgets: '=pipGroups'\n    },\n    controller: 'pipDashboardCtrl',\n    controllerAs: 'dashboardCtrl',\n    templateUrl: 'Dashboard.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipDashboard', pipDashboard);\n})();","'use strict';\n\nimport { IWidgetTemplateService } from './utility/WidgetTemplateUtility';\n\nfunction setTranslations($injector) {\n  var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n  if (pipTranslate) {\n    pipTranslate.setTranslations('en', {\n      DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\n    });\n    pipTranslate.setTranslations('ru', {\n      DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\n    });\n  }\n}\n\nfunction configureAvailableWidgets(pipAddComponentDialogProvider) {\n  pipAddComponentDialogProvider.configWidgetList([\n    [{\n        title: 'Event',\n        icon: 'document',\n        name: 'event',\n        amount: 0\n      },\n      {\n        title: 'Position',\n        icon: 'location',\n        name: 'position',\n        amount: 0\n      }\n    ],\n    [{\n        title: 'Calendar',\n        icon: 'date',\n        name: 'calendar',\n        amount: 0\n      },\n      {\n        title: 'Sticky Notes',\n        icon: 'note-take',\n        name: 'notes',\n        amount: 0\n      },\n      {\n        title: 'Statistics',\n        icon: 'tr-statistics',\n        name: 'statistics',\n        amount: 0\n      }\n    ]\n  ]);\n}\n\nimport { IAddComponentDialogService } from './dialogs/add_component/AddComponentProvider'\n\nclass draggableOptions {\n  tileWidth: number;\n  tileHeight: number;\n  gutter: number;\n  inline: boolean;\n}\n\nlet DEFAULT_GRID_OPTIONS: draggableOptions = {\n  tileWidth: 150, // 'px'\n  tileHeight: 150, // 'px'\n  gutter: 10, // 'px'\n  inline: false\n};\n\nclass DashboardController {\n  private defaultGroupMenuActions: any = [{\n      title: 'Add Component',\n      callback: (groupIndex) => {\n        this.addComponent(groupIndex);\n      }\n    },\n    {\n      title: 'Remove',\n      callback: (groupIndex) => {\n        this.removeGroup(groupIndex);\n      }\n    },\n    {\n      title: 'Configurate',\n      callback: (groupIndex) => {\n        console.log('configurate group with index:', groupIndex);\n      }\n    }\n  ];\n  private _$scope: angular.IScope;\n  private _$rootScope: angular.IRootScopeService;\n  private _$attrs: any;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _$interpolate: angular.IInterpolateService;\n  private _pipAddComponentDialog: IAddComponentDialogService;\n  private _pipWidgetTemplate: IWidgetTemplateService;\n  private _includeTpl: string = '<pip-{{ type }}-widget group=\"groupIndex\" index=\"index\"' +\n    'pip-options=\"$parent.dashboardCtrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\n    '</pip-{{ type }}-widget>';\n\n  public groupedWidgets: any;\n  public draggableGridOptions: draggableOptions;\n  public widgetsTemplates: any;\n  public groupMenuActions: any = this.defaultGroupMenuActions;\n  public widgetsContext: any;\n\n  constructor(\n    $scope: angular.IScope,\n    $rootScope: angular.IRootScopeService,\n    $attrs: any,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    $interpolate: angular.IInterpolateService,\n    pipAddComponentDialog: IAddComponentDialogService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    this._$scope = $scope;\n    this._$rootScope = $rootScope;\n    this._$attrs = $attrs;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._$interpolate = $interpolate;\n    this._pipAddComponentDialog = pipAddComponentDialog;\n    this._pipWidgetTemplate = pipWidgetTemplate;\n\n    // Add class to style scroll bar\n    $element.addClass('pip-scroll');\n\n    // Set tiles grid options\n    this.draggableGridOptions = $scope['gridOptions'] || DEFAULT_GRID_OPTIONS;\n\n    // Switch inline displaying\n    if (this.draggableGridOptions.inline === true) {\n      $element.addClass('inline-grid');\n    }\n    // Extend group's menu actions\n    if ($scope['groupAdditionalActions']) angular.extend(this.groupMenuActions, $scope['groupAdditionalActions']);\n\n    // Compile widgets\n    this.widgetsContext = $scope;\n    this.compileWidgets();\n\n    this._$timeout(() => {\n      this._$element.addClass('visible');\n    }, 700);\n  }\n\n  private compileWidgets() {\n    _.each(this.groupedWidgets, (group, groupIndex) => {\n        group.removedWidgets = group.removedWidgets || [],\n        group.source = group.source.map((widget, index) => {\n          // Establish default props\n          widget.size = widget.size || {\n            colSpan: 1,\n            rowSpan: 1\n          };\n          widget.index = index;\n          widget.groupIndex = groupIndex;\n          widget.menu = widget.menu || {};\n          angular.extend(widget.menu, [{\n            title: 'Remove',\n            click: (item, params, object) => {\n              this.removeWidget(item, params, object);\n            }\n          }]);\n\n          return {\n            opts: widget,\n            template: this._pipWidgetTemplate.getTemplate(widget, this._includeTpl)\n          };\n        })\n    });\n  }\n\n  public addComponent(groupIndex) {\n    this._pipAddComponentDialog\n      .show(this.groupedWidgets, groupIndex)\n      .then((data) => {\n        var activeGroup;\n\n        if (!data) {\n          return;\n        }\n\n        if (data.groupIndex !== -1) {\n          activeGroup = this.groupedWidgets[data.groupIndex];\n        } else {\n          activeGroup = {\n            title: 'New group',\n            source: []\n          };\n        }\n\n        this.addWidgets(activeGroup.source, data.widgets);\n\n        if (data.groupIndex === -1) {\n          this.groupedWidgets.push(activeGroup);\n        }\n\n        this.compileWidgets();\n      });\n  };\n\n  public removeGroup = (groupIndex) => {\n    console.log('removeGroup', groupIndex);\n    this.groupedWidgets.splice(groupIndex, 1);\n  }\n\n  private addWidgets(group, widgets) {\n    widgets.forEach((widgetGroup) => {\n      widgetGroup.forEach((widget) => {\n        if (widget.amount) {\n          Array.apply(null, Array(widget.amount)).forEach(() => {\n            group.push({\n              type: widget.name\n            });\n          });\n        }\n      });\n    });\n  }\n\n  private removeWidget(item, params, object) {\n    this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\n    this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\n    this._$timeout(() => {\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n    });\n  }\n\n}\n\nangular\n  .module('pipDashboard')\n  .config(configureAvailableWidgets)\n  .run(setTranslations)\n  .controller('pipDashboardCtrl', DashboardController);","'use strict';\n\nexport class AddComponentDialogController {\n    public _mdDialog: angular.material.IDialogService;\n    public activeGroupIndex: number;\n    public defaultWidgets: any;\n    public groups: any;\n\n    constructor(\n        groups, \n        activeGroupIndex, \n        widgetList,\n        $mdDialog: angular.material.IDialogService\n    ) {\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\n        this.defaultWidgets   = _.cloneDeep(widgetList);\n        this.groups = _.map(groups, function (group) {\n          return group['title'];\n        });\n        this._mdDialog = $mdDialog;\n    }\n\n    public add () {\n          this._mdDialog.hide({\n            groupIndex: this.activeGroupIndex,\n            widgets   : this.defaultWidgets\n          });\n        };\n\n    public cancel () {\n          this._mdDialog.cancel();\n        };\n\n    public encrease (groupIndex, widgetIndex) {\n          var widget = this.defaultWidgets[groupIndex][widgetIndex];\n          widget.amount++;\n    };\n\n    public decrease (groupIndex, widgetIndex) {\n          var widget    = this.defaultWidgets[groupIndex][widgetIndex];\n          widget.amount = widget.amount ? widget.amount - 1 : 0;\n    };\n}\n\nangular\n    .module('pipAddDashboardComponentDialog', ['ngMaterial'])\n    .controller('pipAddDashboardComponentDialogController', AddComponentDialogController);\n\nimport './AddComponentProvider';","'use strict';\n\nexport interface IAddComponentDialogService {\n  show(groups, activeGroupIndex): any;\n}\n\nclass AddComponentDialogService implements IAddComponentDialogService {\n    public _mdDialog: angular.material.IDialogService;\n    private _widgetList: any;\n\n    public constructor(widgetList: any, $mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n        this._widgetList = widgetList;\n    }\n\n    public show(groups, activeGroupIndex) {\n        return this._mdDialog\n          .show({\n            templateUrl     : 'dialogs/add_component/AddComponent.html',\n            bindToController: true,\n            controller      : 'pipAddDashboardComponentDialogController',\n            controllerAs    : 'dialogCtrl',\n            resolve: {\n              groups: () => {\n                return groups;\n              },\n              activeGroupIndex: () => {\n                return activeGroupIndex;\n              },\n              widgetList: () => {\n                return this._widgetList;\n              }\n           }\n          });\n      };\n}\n\nclass AddComponentDialogProvider {\n  private _service: AddComponentDialogService;\n  private _widgetList: any = null;\n\n  constructor() {\n  }\n\n  public configWidgetList = function (list) {\n      this._widgetList = list;\n  };\n\n  public $get($mdDialog: angular.material.IDialogService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AddComponentDialogService(this._widgetList, $mdDialog);\n        \n        return this._service;\n  }\n}\n\nangular\n    .module('pipDashboard')\n    .provider('pipAddComponentDialog', AddComponentDialogProvider);\n","'use strict';\n\nclass TileColors {\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\n}\n\nclass TileSizes {\n    static all: any = [\n        {name: 'SMALL', id: '11'},\n        {name: 'WIDE', id: '21'},\n        {name: 'LARGE', id: '22'}\n    ];\n}\n\nexport class WidgetConfigDialogController {\n    public dialogTitle: string = \"Edit tile\";\n    public $mdDialog: angular.material.IDialogService;\n    public transclude: any;\n    public params: any;\n    public colors: string[] = TileColors.all;\n    public sizes: any = TileSizes.all;\n    public sizeId: string = TileSizes.all[0].id;\n\n    private _$element: any;\n    private _$timeout: angular.ITimeoutService;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $compile: angular.ICompileService,\n        $timeout: angular.ITimeoutService,\n        $injector,\n        $scope: angular.IScope,\n        $rootScope) {\n        \"ngInject\";\n\n        this.$mdDialog = $mdDialog;\n        this._$timeout = $timeout;\n\n        this.params = params;\n        angular.extend(this, this.params);\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\n    }\n\n    public onApply(): void {\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\n        this.$mdDialog.hide(this);\n    }\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n}\n\nangular\n    .module('pipWidgetConfigDialog', ['ngMaterial'])\n    .controller('pipWidgetConfigDialogController', WidgetConfigDialogController);\n\nimport './ConfigDialogService';\nimport './ConfigDialogExtendComponent';","\n(() => {\n    'use strict';\n    \n    function pipWidgetConfigComponent(\n        $templateRequest: angular.ITemplateRequestService,\n        $compile: angular.ICompileService\n    ) {\n        return {\n            restrict: 'E',\n            templateUrl: 'dialogs/widget_config/ConfigDialogExtendComponent.html',\n            scope: false,\n            link: ($scope: angular.IScope, $element: any, $attrs: any) => {\n                $templateRequest($attrs.pipExtensionUrl, false).then((html) => {\n                    $element.find('pip-extension-point').replaceWith($compile(html)($scope));\n                });\n            }\n        }\n    }\n\n    angular\n        .module('pipWidgetConfigDialog')\n        .directive('pipWidgetConfigExtendComponent', pipWidgetConfigComponent);\n\n})();","export interface IWidgetConfigService {\n    show(params: any, successCallback?: (key) => void, cancelCallback?: () => void): any;\n}\n\nclass WidgetConfigDialogService {\n  public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (key) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: params.templateUrl || 'dialogs/widget_config/ConfigDialog.html',\n            controller: 'pipWidgetConfigDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((key) => {\n            if (successCallback) {\n                successCallback(key);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });         \n    }\n}\n\n\n(() => {\n  'use strict';\n\n  angular\n    .module('pipWidgetConfigDialog')\n    .service('pipWidgetConfigDialogService', WidgetConfigDialogService);\n  \n})();\n","(function () {\n  'use strict';\n\n  angular.module('pipDragged', []);\n})();\n\nimport './DraggableTileService';\nimport './DraggableController';\nimport './DraggableDirective';\nimport './draggable_group/DraggableTilesGroupService'\nimport './draggable_group/DraggableTilesGroupDirective'","'use strict';\n\ndeclare var interact;\n\nimport { DragTileService, IDragTileService, IDragTileConstructor } from './DraggableTileService';\nimport { TilesGridService, ITilesGridService, ITilesGridConstructor } from './draggable_group/DraggableTilesGroupService';\n\nlet SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\nexport let DEFAULT_TILE_WIDTH: number = 150;\nexport let DEFAULT_TILE_HEIGHT: number = 150;\nexport let UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\n\nlet DEFAULT_OPTIONS = {\n    tileWidth              : DEFAULT_TILE_WIDTH,   // 'px'\n    tileHeight             : DEFAULT_TILE_HEIGHT,   // 'px'\n    gutter                 : 20,    // 'px'\n    container              : 'pip-draggable-grid:first-of-type',\n    //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\n    activeDropzoneClass    : 'dropzone-active',\n    groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\n};\n\nclass DraggableController {\n  public opts: any;\n  public groups: any;\n  public sourceDropZoneElem: any = null;\n  public isSameDropzone: boolean = true;\n  public tileGroups: any = null;\n  public availableWidth: any;\n  public availableColumns: any;\n  public groupsContainers: any;\n  public container: any;\n  public activeDraggedGroup: any;\n  public draggedTile: any;\n  public containerOffset: any;\n\n  private _$timeout: angular.ITimeoutService;\n  private _$rootScope: angular.IRootScopeService;\n  private _$scope: angular.IScope;\n  private _$compile: angular.ICompileService;\n  private _$element: any;\n\n  constructor(\n    $scope: angular.IScope, \n    $rootScope: angular.IRootScopeService, \n    $compile: angular.ICompileService, \n    $timeout: angular.ITimeoutService,\n    $element: any, \n    pipDragTile: IDragTileService, \n    pipTilesGrid: ITilesGridService,\n    pipMedia: pip.layouts.IMediaService\n  ) {\n    this._$timeout = $timeout;\n    this._$rootScope = $rootScope;\n    this._$scope = $scope;\n    this._$compile = $compile;\n    this._$element = $element;\n\n    this.opts = _.merge({ mobileBreakpoint: pipMedia.breakpoints.xs }, DEFAULT_OPTIONS, $scope['draggableCtrl'].options);\n\n    this.groups = $scope['draggableCtrl'].tilesTemplates.map((group, groupIndex) => {\n      return {\n        title : group.title,\n        editingName : false,\n        index: groupIndex,\n        source: group.source.map((tile) => {\n          let tileScope = $rootScope.$new(false, $scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index;\n          tileScope['groupIndex'] = tile.opts.groupIndex;\n\n          return IDragTileConstructor(DragTileService, {\n            tpl    : $compile(tile.template)(tileScope),\n            options: tile.opts,\n            size   : tile.opts.size\n          });\n        })\n      };\n    });\n\n    // Add templates watcher\n    $scope.$watch('draggableCtrl.tilesTemplates', (newVal) => {\n      this.watch(newVal);\n    }, true);\n\n    // Initialize data\n    this.initialize();\n\n    // Resize handler TODO: replace by pip resize watchers\n    $(window).on('resize', _.debounce(() => {\n      this.availableWidth   = this.getContainerWidth();\n      this.availableColumns = this.getAvailableColumns(this.availableWidth);\n\n      this.tileGroups.forEach((group) => {\n        group\n          .setAvailableColumns(this.availableColumns)\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }, 50));\n  }\n\n  // Watch handler\n  private watch(newVal) {\n      const prevVal = this.groups;\n      let changedGroupIndex = null;\n\n      if (newVal.length > prevVal.length) {\n        this.addGroup(newVal[newVal.length - 1]);\n\n        return;\n      }\n\n      if (newVal.length < prevVal.length) {\n        this.removeGroups(newVal);\n\n        return;\n      }\n\n      for (let i = 0; i < newVal.length; i++) {\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\n          changedGroupIndex = i;\n\n          if (groupWidgetDiff < 0) {\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\n            \n            _.each(newTiles, (tile) => {\n              console.log('tile', tile);\n            });\n\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\n\n            this._$timeout(() => { this.updateTilesGroups(); });\n          } else {\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\n            this.updateTilesOptions(newVal);\n            this._$timeout(() => { this.updateTilesGroups(); });\n          }\n\n          return;\n        }\n      }\n\n      if (newVal && this.tileGroups) {\n        this.updateTilesOptions(newVal);\n        this._$timeout(() => { this.updateTilesGroups(); });\n      }\n  }\n\n  // Inline edit group handlers\n  public onTitleClick(group, event) {\n      if (!group.editingName) {\n        group.oldTitle = _.clone(group.title);\n        group.editingName = true;\n        this._$timeout(() => {\n          $(event.currentTarget.children[0]).focus();\n        });\n      }\n  }\n\n  public cancelEditing (group) {\n      group.title = group.oldTitle;\n    }\n\n    public onBlurTitleInput (group) {\n      this._$timeout(() => {\n        group.editingName = false;\n        this._$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\n        // Update title in outer scope\n        this._$scope['draggableCtrl'].tilesTemplates[group.index].title = group.title;\n      }, 100);\n    }\n\n    public onKyepressTitleInput (group, event) {\n      if (event.keyCode === 13) {\n        this.onBlurTitleInput(group);\n      }\n    }\n\n    // Update outer scope functions\n    private updateTilesTemplates(updateType: string, source?: any) {\n      switch(updateType) {\n        case 'addGroup': \n          if (this.groups.length !== this._$scope['draggableCtrl'].tilesTemplates.length) {\n              this._$scope['draggableCtrl'].tilesTemplates.push(source);\n          }          \n          break;\n        case 'moveTile': \n          const {fromIndex, toIndex, tileOptions, fromTileIndex} = {\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\n            toIndex: source.to.elem.attributes['data-group-id'].value,\n            tileOptions: source.tile.opts.options,\n            fromTileIndex: source.tile.opts.options.index\n          }\n          this._$scope['draggableCtrl'].tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\n          this._$scope['draggableCtrl'].tilesTemplates[toIndex].source.push({opts: tileOptions});\n\n          this.reIndexTiles(source.from.elem);\n          this.reIndexTiles(source.to.elem);\n          break;\n      }\n    }\n\n    // Manage tiles functions\n    private removeTiles(group, indexes, container) {\n      const tiles = $(container).find('.pip-draggable-tile');\n\n      _.each(indexes, (index) => {\n        group.tiles.splice(index, 1);\n        tiles[index].remove();\n      });\n\n      this.reIndexTiles(container);\n    }\n\n    private reIndexTiles(container, gIndex?) {\n      const tiles = $(container).find('.pip-draggable-tile'),\n            groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\n\n      _.each(tiles, (tile, index) => {\n        let child = $(tile).children()[0];\n        angular.element(child).scope()['index'] = index;\n        angular.element(child).scope()['groupIndex'] = groupIndex;\n      });\n    }\n\n    private removeGroups(newGroups) {\n      const removeIndexes = [],\n            remain = [],\n            containers = [];\n\n\n      _.each(this.groups, (group, index) => {\n          if (_.findIndex(newGroups, (g) => { return g['title'] === group.title}) < 0) {\n            removeIndexes.push(index);\n          } else {\n            remain.push(index);\n          }\n      });\n\n      _.each(removeIndexes.reverse(), (index) => {\n          this.groups.splice(index, 1);\n          this.tileGroups.splice(index, 1);\n      });\n\n      _.each(remain, (index) => {\n          containers.push(this.groupsContainers[index]);\n      });\n      \n       this.groupsContainers = containers;\n\n      _.each(this.groupsContainers, (container, index) => {\n          this.reIndexTiles(container, index);\n      });\n    }\n\n    private addGroup(sourceGroup) {\n      let group = {\n        title : sourceGroup.title,\n        source: sourceGroup.source.map((tile) => {\n          let tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n          return IDragTileConstructor(DragTileService, {\n            tpl    : this._$compile(tile.template)(tileScope),\n            options: tile.opts,\n            size   : tile.opts.size\n          });\n        })\n      };\n\n      this.groups.push(group);\n      if (!this._$scope.$$phase) this._$scope.$apply();\n\n      this._$timeout(() => {\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups.push(\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n            .setTilesDimensions()\n            .calcContainerHeight()\n        );\n      });\n\n      this.updateTilesTemplates('addGroup', sourceGroup);\n    }\n\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\n      newTiles.forEach((tile) => {\n        const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n        tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n        tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n        const newTile = IDragTileConstructor(DragTileService,{\n          tpl    : this._$compile(tile.template)(tileScope),\n          options: tile.opts,\n          size   : tile.opts.size\n        });\n\n        group.addTile(newTile);\n\n        $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(newTile.getCompiledTemplate())\n          .appendTo(groupContainer);\n      });\n    }\n\n    private updateTilesOptions(optionsGroup) {\n      optionsGroup.forEach((optionGroup) => {\n        optionGroup.source.forEach((tileOptions) => {\n          this.tileGroups.forEach((group) => {\n            group.updateTileOptions(tileOptions.opts);\n          });\n        });\n      });\n    }\n\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\n      return tileGroups.map((group, index) => {\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }\n\n    private updateTilesGroups(onlyPosition?, draggedTile?) {\n      this.tileGroups.forEach((group) => {\n        if (!onlyPosition) {\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\n        }\n\n        group\n          .setTilesDimensions(onlyPosition, draggedTile)\n          .calcContainerHeight();\n      });\n    }\n\n    private getContainerWidth(): any {\n      const container = this._$scope['$container'] || $('body');\n      return container.width();\n    }\n\n    private getAvailableColumns(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT\n        : Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\n    }\n\n    private getActiveGroupAndTile(elem): any {\n      const active = {};\n\n      this.tileGroups.forEach((group) => {\n        const foundTile = group.getTileByNode(elem);\n\n        if (foundTile) {\n          active['group'] = group;\n          active['tile']  = foundTile;\n          return;\n        }\n      });\n\n      return active;\n    }\n\n    private getSingleTileWidthForMobile(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\n    }\n\n    private onDragStartListener(event) {\n      const activeEntities = this.getActiveGroupAndTile(event.target);\n\n      this.container          = $(event.target).parent('.pip-draggable-group').get(0);\n      this.draggedTile        = activeEntities['tile'];\n      this.activeDraggedGroup = activeEntities['group'];\n      \n      this._$element.addClass('drag-transfer');\n\n      this.draggedTile.startDrag();\n    }\n\n    private onDragMoveListener(event) {\n      const target = event.target;\n      const x      = (parseFloat(target.style.left) || 0) + event.dx;\n      const y      = (parseFloat(target.style.top) || 0) + event.dy;\n\n      this.containerOffset = this.getContainerOffset();\n\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\n      target.style.top  = y + 'px';\n\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\n        left: event.pageX - this.containerOffset.left,\n        top : event.pageY - this.containerOffset.top\n      }, this.draggedTile);\n\n      if (belowElement) {\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\n        const belowElemIndex   = this.activeDraggedGroup.getTileIndex(belowElement);\n\n        if ((draggedTileIndex + 1) === belowElemIndex) {\n          return;\n        }\n\n        this.activeDraggedGroup\n          .swapTiles(this.draggedTile, belowElement)\n          .setTilesDimensions(true, this.draggedTile);\n\n        this._$timeout(() => { this.setGroupContainersHeight(); }, 0);\n      }\n    }\n\n    private onDragEndListener() {\n      this.draggedTile.stopDrag(this.isSameDropzone);\n\n      this._$element.removeClass('drag-transfer');\n      this.activeDraggedGroup = null;\n      this.draggedTile        = null;\n    }\n\n    private getContainerOffset() {\n      const containerRect = this.container.getBoundingClientRect();\n\n      return {\n        left: containerRect.left,\n        top : containerRect.top\n      };\n    }\n\n    private setGroupContainersHeight() {\n      this.tileGroups.forEach((tileGroup) => {\n        tileGroup.calcContainerHeight();\n      });\n    }\n\n    private moveTile(from, to, tile) {\n      let elem;\n      const movedTile = from.removeTile(tile);\n      const tileScope = this._$rootScope.$new(false, this._$scope['draggableCtrl'].tilesContext);\n          tileScope['index'] = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index ;\n          tileScope['groupIndex'] = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\n        .find(movedTile.getElem())\n        .remove();\n\n      if (to !== null) {\n        to.addTile(movedTile);\n\n        elem = this._$compile(movedTile.getElem())(tileScope);\n\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\n          .append(elem);\n\n        this._$timeout(to.setTilesDimensions.bind(to, true));\n      }\n\n      this.updateTilesTemplates('moveTile', {from: from, to: to, tile: movedTile});\n    }\n\n    private onDropListener(event) {\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\n      const droppedGroup      = this.tileGroups[droppedGroupIndex];\n\n      if (this.activeDraggedGroup !== droppedGroup) {\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\n      }\n\n      this.updateTilesGroups(true);\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropToFictGroupListener(event) {\n      const from = this.activeDraggedGroup;\n      const tile = this.draggedTile;\n\n      this.addGroup({title: 'New group', source: []});\n      this._$timeout(() => {\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\n        this.updateTilesGroups(true);\n      });\n\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropEnterListener(event) {\n      if (!this.sourceDropZoneElem) {\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\n      }\n\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\n        $('body').css('cursor', 'copy');\n        this.isSameDropzone = false;\n      } else {\n        $('body').css('cursor', '');\n        this.isSameDropzone = true;\n      }\n    }\n\n    private onDropDeactivateListener(event) {\n      if (this.sourceDropZoneElem !== event.target) {\n        event.target.classList.remove(this.opts.activeDropzoneClass);\n        $('body').css('cursor', '');\n      }\n    }\n\n    private onDropLeaveListener(event) {\n      event.target.classList.remove(this.opts.activeDropzoneClass);\n    }\n\n    private initialize() {\n      this._$timeout(() => {\n        this.availableWidth   = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups       = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\n\n        interact('.pip-draggable-tile')\n          .draggable({\n            // enable autoScroll\n            autoScroll: true,\n            onstart: (event) => { this.onDragStartListener(event) },\n            onmove : (event) => { this.onDragMoveListener(event) },\n            onend  : (event) => { this.onDragEndListener() }\n          });\n        \n        interact('.pip-draggable-group.fict-group')\n          .dropzone({\n            ondrop: (event) => { console.log('here');  this.onDropToFictGroupListener(event) },\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\n          })\n        \n        interact('.pip-draggable-group')\n          .dropzone({\n            ondrop          : (event) => { this.onDropListener(event) },\n            ondragenter     : (event) => { this.onDropEnterListener(event) },\n            ondropdeactivate: (event) => { this.onDropDeactivateListener(event) },\n            ondragleave     : (event) => { this.onDropLeaveListener(event) }\n          });\n\n        this._$scope['$container']\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\n            interact('.pip-draggable-tile').draggable(false);\n            $(this).trigger('click');\n          })\n          .on('mouseup touchend', () => {\n            interact('.pip-draggable-tile').draggable(true);\n          });\n      }, 0);\n    }\n\n}\n\n\nangular\n    .module('pipDragged')\n    .controller('pipDraggableCtrl', DraggableController);\n","'use strict';\n\nangular\n  .module('pipDragged')\n  .directive('pipDraggableGrid', DragDirective);\n\nfunction DragDirective() {\n  return {\n    restrict: 'E',\n    scope: {\n      tilesTemplates: '=pipTilesTemplates',\n      tilesContext: '=pipTilesContext',\n      options: '=pipDraggableGrid',\n      groupMenuActions: '=pipGroupMenuActions'\n    },\n    templateUrl: 'draggable/Draggable.html',\n    bindToController: true,\n    controllerAs: 'draggableCtrl',\n    controller: 'pipDraggableCtrl',\n    link: function ($scope, $elem) {\n      $scope.$container = $elem;\n    }\n  };\n}","'use strict';\n\nexport interface DragTileConstructor {\n  new (options: any);\n}\n\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\n  return new constructor(options);\n}\n\nexport interface IDragTileService {\n  tpl: any;\n  opts: any;\n  size: any;\n  elem: any;\n  preview: any;\n  getSize(): any;\n  setSize(width, height): any;\n  setPosition(left, top): any;\n  getCompiledTemplate(): any;\n  updateElem(parent): any;\n  getElem(): any;\n  startDrag(): any;\n  stopDrag(isAnimate): any;\n  setPreviewPosition(coords): void;\n  getOptions(): any;\n  setOptions(options): any;\n}\n\nlet DEFAULT_TILE_SIZE = {\n  colSpan: 1,\n  rowSpan: 1\n};\n\nexport class DragTileService implements IDragTileService {\n  public tpl: any;\n  public opts: any;\n  public size: any;\n  public elem: any;\n  public preview: any;\n\n  constructor (options: any) {\n    this.tpl = options.tpl.get(0);\n    this.opts = options;\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\n    this.elem = null;\n  }\n\n  public getSize(): any {\n    return this.size;\n  }\n\n  public setSize(width, height): any {\n    this.size.width = width;\n    this.size.height = height;\n\n    if (this.elem) {\n      this.elem.css({\n        width: width,\n        height: height\n      });\n    }\n\n    return this;\n  }\n\n  public setPosition(left, top): any {\n    this.size.left = left;\n    this.size.top = top;\n\n    if (this.elem) {\n      this.elem.css({\n        left: left,\n        top: top\n      });\n    }\n\n    return this;\n  }\n\n  public getCompiledTemplate(): any {\n    return this.tpl;\n  };\n\n  public updateElem(parent): any {\n    this.elem = $(this.tpl).parent(parent);\n\n    return this;\n  };\n\n  public getElem(): any {\n    return this.elem.get(0);\n  };\n\n  public startDrag(): any {\n    this.preview = $('<div>')\n      .addClass('pip-dragged-preview')\n      .css({\n        position: 'absolute',\n        left: this.elem.css('left'),\n        top: this.elem.css('top'),\n        width: this.elem.css('width'),\n        height: this.elem.css('height')\n      });\n\n    this.elem\n      .addClass('no-animation')\n      .css({\n        zIndex: '9999'\n      })\n      .after(this.preview);\n\n    return this;\n  };\n\n  public stopDrag(isAnimate): any {\n    let self = this;\n\n    if (isAnimate) {\n      this.elem\n        .removeClass('no-animation')\n        .css({\n          left: this.preview.css('left'),\n          top: this.preview.css('top')\n        })\n        .on('transitionend', onTransitionEnd);\n    } else {\n      self.elem\n        .css({\n          left: self.preview.css('left'),\n          top: self.preview.css('top'),\n          zIndex: ''\n        })\n        .removeClass('no-animation');\n\n      self.preview.remove();\n      self.preview = null;\n    }\n\n    return this;\n\n    function onTransitionEnd() {\n      if (self.preview) {\n        self.preview.remove();\n        self.preview = null;\n      }\n\n      self.elem\n        .css('zIndex', '')\n        .off('transitionend', onTransitionEnd);\n    }\n  };\n\n  public setPreviewPosition(coords) {\n    this.preview.css(coords);\n  };\n\n  public getOptions(): any {\n    return this.opts.options;\n  };\n\n  public setOptions(options): any {\n    _.merge(this.opts.options, options);\n    _.merge(this.size, options.size);\n\n    return this;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipDragTile', function () {\n    return function (options) {\n      let newTile = new DragTileService(options);\n\n      return newTile;\n    }\n  });","'use strict';\n\nangular\n  .module('pipDragged')\n  .directive('pipDraggableTiles', DraggableTile);\n\nfunction DraggableTile() {\n  return {\n    restrict: 'A',\n    link: function ($scope, $elem, $attr) {\n      var docFrag = document.createDocumentFragment();\n      var group = $scope.$eval($attr.pipDraggableTiles);\n\n      group.forEach(function (tile) {\n        var tpl = wrapComponent(tile.getCompiledTemplate());\n        docFrag.appendChild(tpl);\n      });\n\n      $elem.append(docFrag);\n\n      function wrapComponent(elem) {\n        return $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(elem)\n          .get(0);\n      }\n    }\n  };\n}","'use strict';\n\nexport interface TilesGridConstructor {\n  new (tiles, options, columns, elem);\n}\n\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem):ITilesGridService {\n  return new constructor(tiles, options, columns, elem);\n}\n\nexport interface ITilesGridService {\n  tiles: any;\n  opts: any;\n  columns: any;\n  elem: any;\n  gridCells: any;\n  inline: boolean;\n  isMobileLayout: boolean;\n\n  addTile(tile): any;\n  getCellByPosition(row, col): any;\n  getCells(prevCell, rowSpan, colSpan): any;\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\n  getCell(src, basicRow, basicCol, columns): any;\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\n  getBasicRow(prevCell): any;\n  isCellFree(row, col): any;\n  getCellIndex(srcCell): any;\n  reserveCells(start, end, elem): void;\n  clearElements(): void;\n  setAvailableColumns(columns): any;\n  generateGrid(singleTileWidth?): any;\n  setTilesDimensions(onlyPosition, draggedTile): any;\n  calcContainerHeight(): any;\n  getTileByNode(node): any;\n  getTileByCoordinates(coords, draggedTile): any;\n  getTileIndex(tile): any;\n  swapTiles(movedTile, beforeTile): any;\n  removeTile(removeTile): any;\n  updateTileOptions(opts): any;\n}\n\nlet MOBILE_LAYOUT_COLUMNS = 2;\n\nexport class TilesGridService implements ITilesGridService {\n  public tiles: any;\n  public opts: any;\n  public columns: any;\n  public elem: any;\n  public gridCells: any = [];\n  public inline: boolean = false;\n  public isMobileLayout: boolean;\n\n  constructor(tiles, options, columns, elem) {\n    this.tiles = tiles;\n    this.opts = options;\n    this.columns = columns || 0; // available columns in a row\n    this.elem = elem;\n    this.gridCells = [];\n    this.inline = options.inline || false;\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n  }\n\n  public addTile(tile): any {\n    this.tiles.push(tile);\n    if (this.tiles.length === 1) {\n      this.generateGrid();\n    }\n\n    return this;\n  };\n\n  public getCellByPosition(row, col): any {\n    return this.gridCells[row][col];\n  };\n\n  public getCells(prevCell, rowSpan, colSpan): any {\n    if (this.isMobileLayout) {\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\n    } else {\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\n    }\n  };\n\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    let basicCol = prevCell && prevCell.col || 0;\n    let basicRow = this.getBasicRow(prevCell);\n\n    // Small tile\n    if (colSpan === 1 && rowSpan === 1) {\n      let gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          let rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    // Medium tile\n    if (colSpan === 2 && rowSpan === 1) {\n      let prevTileSize = prevCell && prevCell.elem.size || null;\n\n      if (!prevTileSize) {\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\n        if (this.columns - basicCol - 2 > 0) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\n        if (prevCell.row % 2 === 0) {\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\n        } else {\n          if (this.columns - basicCol - 3 >= 0) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n          }\n        }\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\n        if (this.columns - basicCol - 3 >= 0) {\n          if (this.isCellFree(basicRow, basicCol + 1)) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\n          }\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      }\n    }\n\n    // Big tile\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\n    } else if (rowSpan === 2 && colSpan === 2) {\n      if (this.columns - basicCol - 2 > 0) {\n        if (this.isCellFree(basicRow, basicCol + 1)) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\n        }\n      } else {\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\n      }\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getCell(src, basicRow, basicCol, columns): any {\n    let cell;\n    let col;\n    let row;\n\n    if (this.isMobileLayout) {\n      // mobile layout\n      for (col = basicCol; col < columns; col++) {\n        if (!src[basicRow][col].elem) {\n          cell = src[basicRow][col];\n          break;\n        }\n      }\n\n      return cell;\n    }\n\n    // desktop\n    for (col = basicCol; col < columns; col++) {\n      for (row = 0; row < 2; row++) {\n        if (!src[row + basicRow][col].elem) {\n          cell = src[row + basicRow][col];\n          break;\n        }\n      }\n\n      if (cell) {\n        return cell;\n      }\n    }\n  };\n\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    let basicRow = this.getBasicRow(prevCell);\n    let basicCol = prevCell && prevCell.col || 0;\n\n\n    if (colSpan === 1 && rowSpan === 1) {\n      let gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          let rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    if (!prevCell) {\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\n    } else if (colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getBasicRow(prevCell): any {\n    let basicRow;\n\n    if (this.isMobileLayout) {\n      if (prevCell) {\n        basicRow = prevCell && prevCell.row || 0;\n      } else {\n        basicRow = 0;\n      }\n    } else {\n      if (prevCell) {\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\n      } else {\n        basicRow = 0;\n      }\n    }\n\n    return basicRow;\n  };\n\n  public isCellFree(row, col): any {\n    return !this.gridCells[row][col].elem;\n  };\n\n  public getCellIndex(srcCell): any {\n    let self = this;\n    let index;\n\n    this.gridCells.forEach((row, rowIndex) => {\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\n        return cell === srcCell;\n      });\n\n      if (index !== -1) {\n        return;\n      }\n    });\n\n    return index !== -1 ? index : 0;\n  };\n\n  public reserveCells(start, end, elem) {\n    this.gridCells.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.row >= start.row && cell.row <= end.row &&\n          cell.col >= start.col && cell.col <= end.col) {\n          cell.elem = elem;\n        }\n      });\n    });\n  };\n\n  public clearElements() {\n    this.gridCells.forEach((row) => {\n      row.forEach((tile) => {\n        tile.elem = null;\n      });\n    });\n  };\n\n  public setAvailableColumns(columns): any {\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n    this.columns = columns;\n\n    return this;\n  };\n\n  public generateGrid(singleTileWidth?): any {\n    let self = this;\n    let colsInRow = 0;\n    let rows = 0;\n    let tileWidth = singleTileWidth || this.opts.tileWidth;\n    let offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\n    let gridInRow = [];\n\n    this.gridCells = [];\n\n    this.tiles.forEach((tile, index, srcTiles) => {\n      let tileSize = tile.getSize();\n\n      generateCells(tileSize.colSpan);\n\n      if (srcTiles.length === index + 1) {\n        if (colsInRow < self.columns) {\n          generateCells(self.columns - colsInRow);\n        }\n\n        // Generate more cells for extends tile size to big\n        if (self.tiles.length * 2 > self.gridCells.length) {\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\n            generateCells(self.columns);\n          });\n        }\n      }\n    });\n\n    function generateCells(newCellCount) {\n        Array.apply(null, Array(newCellCount)).forEach(() => {\n          if (self.columns < colsInRow + 1) {\n            rows++;\n            colsInRow = 0;\n\n            self.gridCells.push(gridInRow);\n            gridInRow = [];\n          }\n\n          let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\n          let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\n\n          // Describe grid cell size through block corners coordinates\n          gridInRow.push({\n            top: top,\n            left: left,\n            bottom: top + self.opts.tileHeight,\n            right: left + tileWidth,\n            row: rows,\n            col: colsInRow\n          });\n\n          colsInRow++;\n        });\n      }\n\n    return this;\n  };\n\n  public setTilesDimensions(onlyPosition, draggedTile): any {\n    let self = this;\n    let currIndex = 0;\n    let prevCell;\n\n    if (onlyPosition) {\n      self.clearElements();\n    }\n\n    this.tiles.forEach((tile) => {\n      let tileSize = tile.getSize();\n      let startCell;\n      let width;\n      let height;\n      let cells;\n\n      tile.updateElem('.pip-draggable-tile');\n      if (tileSize.colSpan === 1) {\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\n        } else {\n          startCell = self.getCells(prevCell, 1, 1).start;\n        }\n\n\n        if (!onlyPosition) {\n          width = startCell.right - startCell.left;\n          height = startCell.bottom - startCell.top;\n        }\n\n        prevCell = startCell;\n\n        self.reserveCells(startCell, startCell, tile);\n\n        currIndex++;\n      } else if (tileSize.colSpan === 2) {\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\n        startCell = cells.start;\n\n        if (!onlyPosition) {\n          width = cells.end.right - cells.start.left;\n          height = cells.end.bottom - cells.start.top;\n        }\n\n        prevCell = cells.end;\n\n        self.reserveCells(cells.start, cells.end, tile);\n\n        currIndex += 2;\n      }\n\n      // Render preview\n      // while tiles from group is dragged\n      if (draggedTile === tile) {\n        tile.setPreviewPosition({\n          left: startCell.left,\n          top: startCell.top\n        });\n\n        return;\n      }\n\n      if (!onlyPosition) {\n        tile.setSize(width, height);\n      }\n\n      tile.setPosition(startCell.left, startCell.top);\n    });\n\n    return this;\n  };\n\n  public calcContainerHeight(): any {\n    let maxHeightSize, maxWidthSize;\n\n    if (!this.tiles.length) {\n      return this;\n    }\n\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\n      let tileSize = tile['getSize']();\n      return tileSize.top + tileSize.height;\n    })['getSize']();\n\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\n\n    if (this.inline) {\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\n        let tileSize = tile['getSize']();\n        return tileSize.left + tileSize.width;\n      })['getSize']();\n\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\n    }\n\n    return this;\n  };\n\n  public getTileByNode(node): any {\n    let foundTile = this.tiles.filter((tile) => {\n      return node === tile.getElem();\n    });\n\n    return foundTile.length ? foundTile[0] : null;\n  };\n\n  public getTileByCoordinates(coords, draggedTile): any {\n    return this.tiles\n      .filter((tile) => {\n        let tileSize = tile.getSize();\n\n        return tile !== draggedTile &&\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\n      })[0] || null;\n  };\n\n  public getTileIndex(tile): any {\n    return _.findIndex(this.tiles, tile);\n  };\n\n  public swapTiles(movedTile, beforeTile): any {\n    let movedTileIndex = _.findIndex(this.tiles, movedTile);\n    let beforeTileIndex = _.findIndex(this.tiles, beforeTile);\n\n    this.tiles.splice(movedTileIndex, 1);\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\n\n    return this;\n  };\n\n  public removeTile(removeTile): any {\n    let droppedTile;\n\n    this.tiles.forEach((tile, index, tiles) => {\n      if (tile === removeTile) {\n        droppedTile = tiles.splice(index, 1)[0];\n        return false;\n      }\n    });\n\n    return droppedTile;\n  };\n\n  public updateTileOptions(opts): any {\n    let index = _.findIndex(this.tiles, (tile) => {\n      return tile['getOptions']() === opts;\n    });\n\n    if (index !== -1) {\n      this.tiles[index].setOptions(opts);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nangular\n  .module('pipDragged')\n  .service('pipTilesGrid', function () {\n    return function (tiles, options, columns, elem) {\n      let newGrid = new TilesGridService(tiles, options, columns, elem);\n\n      return newGrid;\n    }\n  });","export interface IWidgetTemplateService {\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\n    setImageMarginCSS($element, image): void;\n}\n\nclass widgetTemplateService implements IWidgetTemplateService {\n    private _$interpolate: angular.IInterpolateService;\n    private _$compile: angular.ICompileService;\n    private _$templateRequest: angular.ITemplateRequestService;\n\n    constructor(\n        $interpolate: angular.IInterpolateService,\n        $compile: angular.ICompileService,\n        $templateRequest: angular.ITemplateRequestService\n    ) {\n        this._$interpolate = $interpolate;\n        this._$compile = $compile;\n        this._$templateRequest = $templateRequest;\n    }\n\n    public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\n        const {\n            template,\n            templateUrl,\n            type\n        } = source;\n        let result;\n\n        if (type) {\n            const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\n            return strictCompile == true ?\n                (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\n                interpolated;\n        }\n\n        if (template) {\n            return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\n        }\n\n        if (templateUrl) {\n            this._$templateRequest(templateUrl, false).then((html) => {\n                result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\n            });\n        }\n\n        return result;\n    }\n\n    public setImageMarginCSS($element, image) {\n        let\n            containerWidth = $element.width ? $element.width() : $element.clientWidth, \n            containerHeight = $element.height ? $element.height() : $element.clientHeight,\n            imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\n            imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\n            margin = 0,\n            cssParams = {};\n\n        if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n            margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n            cssParams['margin-left'] = '' + margin + 'px';\n            cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n            cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n            cssParams['margin-top'] = '';\n        } else {\n            margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n            cssParams['margin-top'] = '' + margin + 'px';\n            cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n            cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n            cssParams['margin-left'] = '';\n        }\n\n        $(image).css(cssParams);\n    }\n}\n\n// image load directive TODO: remove to pipImageUtils\nfunction ImageLoad($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var callback = $parse(attrs.pipImageLoad);\n            element.bind('load', (event) => {\n                callback(scope, {$event: event});\n            });\n        } \n    }\n}\n\nangular\n    .module('pipDashboard')\n    .service('pipWidgetTemplate', widgetTemplateService)\n    .directive('pipImageLoad', ImageLoad);","(() => {\n  'use strict';\n\n  angular.module('pipWidget', []);\n})();\n\nimport './calendar/WidgetCalendar';\nimport './event/WidgetEvent';\nimport './menu/WidgetMenuService';\nimport './menu/WidgetMenuDirective';\nimport './notes/WidgetNotes';\nimport './position/WidgetPosition';\nimport './statistics/WidgetStatistics';\nimport './picture_slider/WidgetPictureSlider';\n","import { MenuWidgetService } from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass CalendarWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n\n  public color: string = 'blue';\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n        this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n        }});\n        this['options'].date = this['options'].date || new Date();\n        this.color = this['options'].color || this.color;\n      }\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size,\n      date: this['options'].date,\n      extensionUrl: 'widgets/calendar/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].date = result.date;\n    });\n  }\n\n}\n\n(() => {\n\n  let pipCalendarWidget = {\n      bindings        : {\n        options: '=pipOptions',\n      },\n      controller      : CalendarWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/calendar/WidgetCalendar.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipCalendarWidget', pipCalendarWidget);\n\n})();\n","import { MenuWidgetService} from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass EventWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _oldOpacity: number;\n\n  public color: string = 'gray';\n  public opacity: number = 0.57;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n    }});\n    this.color = this['options'].color || this.color;\n    this.opacity = this['options'].opacity || this.opacity;\n\n    this.drawImage();\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      this.drawImage();\n    });\n  }\n\n  private drawImage() {\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.onImageLoad(this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  private onConfigClick() {\n    this._oldOpacity = _.clone(this.opacity);\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size || {colSpan: 1, rowSpan: 1},\n      date: this['options'].date,\n      title: this['options'].title,\n      text: this['options'].text,\n      opacity: this.opacity,\n      onOpacitytest: (opacity) => {\n        this.opacity = opacity;\n      },\n      extensionUrl: 'widgets/event/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].date = result.date;\n      this['options'].title = result.title;\n      this['options'].text = result.text;\n      this['options'].opacity = result.opacity;\n    }, () => {\n      this.opacity = this._oldOpacity;\n    });\n  }\n\n  private onImageLoad(image) {\n    this.setImageMarginCSS(this._$element.parent(), image);\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    if (this['options'].image) {\n      this._$timeout(() => {\n        this.setImageMarginCSS(this._$element.parent(), this._$element.find('img'));\n      }, 500);\n    }\n  }\n\n  // Later replace by pipImageUtils sevice's function\n  private setImageMarginCSS($element, image) {\n    let\n      containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\n      containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\n      imageWidth = image[0].naturalWidth || image.width,\n      imageHeight = image[0].naturalHeight || image.height,\n      margin = 0,\n      cssParams = {};\n\n    if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n      margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n      cssParams['margin-left'] = '' + margin + 'px';\n      cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n      cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n      cssParams['margin-top'] = '';\n    } else {\n      margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n      cssParams['margin-top'] = '' + margin + 'px';\n      cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n      cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n      cssParams['margin-left'] = '';\n    }\n\n    image.css(cssParams);\n  }\n}\n\n\n(() => {\n  let pipEventWidget =  {\n      bindings: {\n        options: '=pipOptions'\n      },\n      controller: EventWidgetController,\n      controllerAs: 'widgetCtrl',\n      templateUrl: 'widgets/event/WidgetEvent.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipEventWidget', pipEventWidget);\n})();","(() => {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .directive('pipMenuWidget', pipMenuWidget);\n\n  function pipMenuWidget() {\n    return {\n      restrict        : 'EA',\n      templateUrl     : 'widgets/menu/WidgetMenu.html'\n    };\n  }\n})();\n","\nexport class MenuWidgetService {\n  public menu: any = [\n    {\n      title: 'Change Size',\n      action: angular.noop,\n      submenu: [{\n          title: '1 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 1,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 1',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 1\n          }\n        },\n        {\n          title: '2 x 2',\n          action: 'changeSize',\n          params: {\n            sizeX: 2,\n            sizeY: 2\n          }\n        }\n      ]\n    }\n  ];\n\n  constructor() {\n    \"ngInject\";\n  }\n\n  public callAction(actionName, params, item) {\n    if (this[actionName]) {\n      this[actionName].call(this, params);\n    }\n\n    if (item['click']) {\n      item['click'].call(item, params, this);\n    }\n  };\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n  };\n}\n\nclass MenuWidgetProvider {\n    private _service: MenuWidgetService;\n\n    constructor() {\n    }\n\n   public $get() {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new MenuWidgetService();\n        \n        return this._service;\n    }\n}\n\n(function () {\n  'use strict';\n\n  angular\n    .module('pipWidget')\n    .provider('pipWidgetMenu', MenuWidgetProvider);\n})();","'use strict';\n\nimport { MenuWidgetService } from '../menu/WidgetMenuService';\nimport { IWidgetConfigService } from '../../dialogs/widget_config/ConfigDialogService';\n\nclass NotesWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n\n  public color: string = 'orange';\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    pipWidgetConfigDialogService: IWidgetConfigService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._configDialog = pipWidgetConfigDialogService;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.menu.push({ title: 'Configurate', click: () => {\n          this.onConfigClick();\n      }});\n      this.color = this['options'].color || this.color;\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-calendar-config',\n      color: this.color,\n      size: this['options'].size,\n      title: this['options'].title,\n      text: this['options'].text,\n      extensionUrl: 'widgets/notes/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.color = result.color;\n      this['options'].color = result.color;\n      this.changeSize(result.size);\n      this['options'].text = result.text;\n      this['options'].title = result.title;\n    });\n  }\n}\n\n  let pipNotesWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      controller      : NotesWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/notes/WidgetNotes.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipNotesWidget', pipNotesWidget);\n\n","'use strict';\n\nimport {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\nimport {\n  IWidgetTemplateService\n} from '../../utility/WidgetTemplateUtility';\n\nclass PictureSliderController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _configDialog: IWidgetConfigService;\n  private _widgetUtility: IWidgetTemplateService;\n  private _$element: any;\n  private _$timeout: angular.ITimeoutService;\n\n  public animationType: string = 'fading';\n  public animationInterval: number = 5000;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $element: any,\n    $timeout: angular.ITimeoutService,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipWidgetTemplate: IWidgetTemplateService\n  ) {\n    super();\n    this._$scope = $scope;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._widgetUtility = pipWidgetTemplate;\n    this._$element = $element;\n    this._$timeout = $timeout;\n    if (this['options']) {\n      this.animationType = this['options'].animationType || this.animationType;\n      this.animationInterval = this['options'].animationInterval || this.animationInterval;\n    }\n  }\n\n  public onImageLoad($event) {\n    this._$timeout(() => {\n      this._widgetUtility.setImageMarginCSS(this._$element.parent(), $event.target);\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this._$timeout(() => {\n      _.each(this._$element.find('img'), (image) => {\n        this._widgetUtility.setImageMarginCSS(this._$element.parent(), image);\n      });\n    }, 500);\n  }\n}\n\nlet pipPictureSliderWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PictureSliderController,\n  templateUrl: 'widgets/picture_slider/WidgetPictureSlider.html',\n  controllerAs: 'widgetCtrl'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPictureSliderWidget', pipPictureSliderWidget);","import {\n  MenuWidgetService\n} from '../menu/WidgetMenuService';\nimport {\n  IWidgetConfigService\n} from '../../dialogs/widget_config/ConfigDialogService';\n\nclass PositionWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n  private _configDialog: IWidgetConfigService;\n  private _locationDialog: any;\n\n  public showPosition: boolean = true;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService,\n    $element: any,\n    pipWidgetConfigDialogService: IWidgetConfigService,\n    pipLocationEditDialog: any,\n  ) {\n    super();\n    this._$scope = $scope;\n    this._$timeout = $timeout;\n    this._configDialog = pipWidgetConfigDialogService;\n    this._locationDialog = pipLocationEditDialog;\n\n    if (this['options']) {\n      if (this['options']['menu']) this.menu = _.union(this.menu, this['options']['menu']);\n    }\n\n    this.menu.push({\n      title: 'Configurate',\n      click: () => {\n        this.onConfigClick();\n      }\n    });\n    this.menu.push({\n      title: 'Change location',\n      click: () => {\n        this.openLocationEditDialog();\n      }\n    });\n\n    this['options'].location = this['options'].location || this['options'].position;\n\n    $scope.$watch('widgetCtrl.options.location', () => {\n      this.reDrawPosition();\n    });\n\n    // TODO it doesn't work\n    $scope.$watch(() => { return $element.is(':visible'); }, (newVal) => {\n      if (newVal == true) this.reDrawPosition();\n    });\n  }\n\n  private onConfigClick() {\n    this._configDialog.show({\n      dialogClass: 'pip-position-config',\n      size: this['options'].size,\n      locationName: this['options'].locationName,\n      hideColors: true,\n      extensionUrl: 'widgets/position/ConfigDialogExtension.html'\n    }, (result: any) => {\n      this.changeSize(result.size);\n      this['options'].locationName = result.locationName;\n    });\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reDrawPosition();\n  }\n\n  public openLocationEditDialog() {\n    this._locationDialog.show({\n      locationName: this['options'].locationName,\n      locationPos: this['options'].location\n    }, (newPosition) => {\n      if (newPosition) {\n        this['options'].location = newPosition.location;\n        this['options'].locationName = newPosition.locatioName;\n      }\n    });\n  }\n\n  private reDrawPosition() {\n    this.showPosition = false;\n    this._$timeout(() => {\n      this.showPosition = true;\n    }, 50);\n  }\n}\n\n\nlet pipPositionWidget = {\n  bindings: {\n    options: '=pipOptions',\n    index: '=',\n    group: '='\n  },\n  controller: PositionWidgetController,\n  controllerAs: 'widgetCtrl',\n  templateUrl: 'widgets/position/WidgetPosition.html'\n}\n\nangular\n  .module('pipWidget')\n  .component('pipPositionWidget', pipPositionWidget);","import { MenuWidgetService } from '../menu/WidgetMenuService';\n\nlet SMALL_CHART: number = 70;\nlet BIG_CHART: number = 250;\n\nclass StatisticsWidgetController extends MenuWidgetService {\n  private _$scope: angular.IScope;\n  private _$timeout: angular.ITimeoutService;\n\n  public reset: boolean = false;\n  public chartSize: number = SMALL_CHART;\n\n  constructor(\n    pipWidgetMenu: any,\n    $scope: angular.IScope,\n    $timeout: angular.ITimeoutService\n  ) {\n      super();\n      this._$scope = $scope;\n      this._$timeout = $timeout;\n\n      if (this['options']) {\n        this.menu = this['options']['menu'] ? _.union(this.menu, this['options']['menu']) : this.menu;\n      }\n\n      this.setChartSize();\n  }\n\n  public changeSize(params) {\n    this['options'].size.colSpan = params.sizeX;\n    this['options'].size.rowSpan = params.sizeY;\n\n    this.reset = true;\n    this.setChartSize();\n    this._$timeout(() => {\n      this.reset = false;\n    }, 500);\n  }\n\n  private setChartSize() {\n    this.chartSize = this['options'].size.colSpan == 2 && this['options'].size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\n  }\n}\n\n(() => {\n  'use strict';\n\n  let pipStatisticsWidget = {\n      bindings           : {\n        options: '=pipOptions'\n      },\n      bindToController: true,\n      controller      : StatisticsWidgetController,\n      controllerAs    : 'widgetCtrl',\n      templateUrl     : 'widgets/statistics/WidgetStatistics.html'\n  }\n\n  angular\n    .module('pipWidget')\n    .component('pipStatisticsWidget', pipStatisticsWidget);\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"dashboardCtrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"dashboardCtrl.groupedWidgets\" pip-tiles-context=\"dashboardCtrl.widgetsContext\" pip-draggable-grid=\"dashboardCtrl.draggableGridOptions\" pip-group-menu-actions=\"dashboardCtrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in draggableCtrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"draggableCtrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"draggableCtrl.onBlurTitleInput(group)\" ng-keypress=\"draggableCtrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"draggableCtrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in draggableCtrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/add_component/AddComponent.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">Add component<md-input-container class=\"layout-row flex-auto m0\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"Create New Group\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Add\">Cancel</md-button><md-button ng-click=\"dialogCtrl.add()\" arial-label=\"Cancel\">Add</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-widget-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-widget-config-extend-component class=\"layout-column\" pip-extension-url=\"{{ vm.params.extensionUrl }}\"></pip-widget-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dialogs/widget_config/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{vm.dialogTitle}}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!vm.hideSizes\" pip-buttons=\"vm.sizes\" ng-model=\"vm.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!vm.hideColors\" pip-colors=\"vm.colors\" ng-model=\"vm.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onApply()\">Apply</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/calendar/WidgetCalendar.html',\n    '<div class=\"widget-box pip-calendar-widget {{ widgetCtrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ widgetCtrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1\">{{ widgetCtrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ widgetCtrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ widgetCtrl.options.date | formatLongMonth }} {{ widgetCtrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container>Date:<md-datepicker ng-model=\"vm.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"vm.opacity\" ng-change=\"vm.onOpacitytest(vm.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/event/WidgetEvent.html',\n    '<div class=\"widget-box pip-event-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><img ng-if=\"widgetCtrl.options.image\" ng-src=\"{{widgetCtrl.options.image}}\" alt=\"{{widgetCtrl.options.title || widgetCtrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ widgetCtrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"widgetCtrl.options.date\">{{ widgetCtrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ widgetCtrl.options.text || widgetCtrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/menu/WidgetMenu.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in widgetCtrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"widgetCtrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"widgetCtrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"vm.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"vm.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/notes/WidgetNotes.html',\n    '<div class=\"widget-box pip-notes-widget {{ widgetCtrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"widgetCtrl.options.title || widgetCtrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span></div><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget><div class=\"text-container flex-auto pip-scroll\"><p>{{ widgetCtrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/picture_slider/WidgetPictureSlider.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ widgetCtrl.color }} layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.title }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"widgetCtrl.animationInterval\" ng-if=\"widgetCtrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in widgetCtrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"widgetCtrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"vm.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/position/WidgetPosition.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\" index=\"{{ widgetCtrl.index }}\" group=\"{{ widgetCtrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!widgetCtrl.options.locationName\"><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"widgetCtrl.options.locationName\"><span class=\"flex text-overflow\">{{ widgetCtrl.options.locationName }}</span><pip-menu-widget ng-if=\"!widgetCtrl.options.hideMenu\"></pip-menu-widget></div><pip-location-map class=\"flex\" ng-if=\"widgetCtrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"widgetCtrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('widgets/statistics/WidgetStatistics.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: widgetCtrl.options.size.colSpan == 1 && widgetCtrl.options.size.rowSpan == 1, medium: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 1, big: widgetCtrl.options.size.colSpan == 2 && widgetCtrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ widgetCtrl.options.title || widgetCtrl.options.name }}</span><pip-menu-widget></pip-menu-widget></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"widgetCtrl.options.series && !widgetCtrl.reset\"><pip-pie-chart pip-series=\"widgetCtrl.options.series\" ng-if=\"!widgetCtrl.options.chartType || widgetCtrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"widgetCtrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}