{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/add_tile_dialog/AddTileDialogController.ts","src/add_tile_dialog/AddTileProvider.ts","src/add_tile_dialog/index.ts","src/calendar_tile/CalendarTile.ts","src/common_tile/Tile.ts","src/config_tile_dialog/ConfigDialogController.ts","src/config_tile_dialog/ConfigDialogExtendComponent.ts","src/config_tile_dialog/ConfigDialogService.ts","src/config_tile_dialog/index.ts","src/dashboard/Dashboard.ts","src/draggable/Draggable.ts","src/draggable/DraggableTileService.ts","src/draggable/index.ts","src/event_tile/EventTile.ts","src/index.ts","src/menu_tile/MenuTileDirective.ts","src/menu_tile/MenuTileService.ts","src/menu_tile/index.ts","src/note_tile/NoteTile.ts","src/picture_slider_tile/PictureSliderTile.ts","src/position_tile/PositionTile.ts","src/statistics_tile/StatisticsTile.ts","src/tile_group/TileGroupDirective.ts","src/tile_group/TileGroupService.ts","src/tile_group/index.ts","src/utility/TileTemplateUtility.ts","temp/pip-webui-dashboard-html.min.js"],"names":[],"mappings":"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":"pip-webui-dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class AddTileDialog {\n    title: string;\n    icon: string;\n    name: string;\n    amount: number;\n}\n\nexport class AddTileDialogController implements ng.IController {\n    public defaultTiles: [AddTileDialog[]];\n    public groups: any;\n    public totalTiles: number = 0;\n\n    constructor(\n        groups: any,\n        public activeGroupIndex: number,\n        widgetList: [AddTileDialog[]],\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        this.activeGroupIndex = _.isNumber(activeGroupIndex) ? activeGroupIndex : -1;\n        this.defaultTiles = _.cloneDeep(widgetList);\n        this.groups = _.map(groups, function (group) {\n            return group['title'];\n        });\n    }\n\n    public add() {\n        this.$mdDialog.hide({\n            groupIndex: this.activeGroupIndex,\n            widgets: this.defaultTiles\n        });\n    };\n\n    public cancel() {\n        this.$mdDialog.cancel();\n    };\n\n    public encrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultTiles[groupIndex][widgetIndex];\n        widget.amount++;\n        this.totalTiles++;\n    };\n\n    public decrease(groupIndex: number, widgetIndex: number) {\n        const widget = this.defaultTiles[groupIndex][widgetIndex];\n        widget.amount = widget.amount ? widget.amount - 1 : 0;\n        this.totalTiles = this.totalTiles ? this.totalTiles - 1 : 0;\n    };\n}","import {\n  AddTileDialog,\n  AddTileDialogController\n} from './AddTileDialogController';\n\nexport interface IAddTileDialogService {\n  show(groups, activeGroupIndex): angular.IPromise < any > ;\n}\n\nexport interface IAddTileDialogprovider {\n  configWidgetList(list: [AddTileDialog[]]): void;\n}\n\n{\n  const setTranslations = function($injector: ng.auto.IInjectorService) {\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n    if (pipTranslate) {\n      (<any>pipTranslate).setTranslations('en', {\n        DASHBOARD_ADD_TILE_DIALOG_TITLE: 'Add component',\n        DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS: 'Use \"Enter\" or \"+\" buttons on keyboard to encrease and \"Delete\" or \"-\" to decrease tiles amount',\n        DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP: 'Create new group'\n      });\n      (<any>pipTranslate).setTranslations('ru', {\n        DASHBOARD_ADD_TILE_DIALOG_TITLE: 'Добавить компонент',\n        DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS: 'Используйте \"Enter\" или \"+\" клавиши на клавиатуре чтобы увеличить и \"Delete\" or \"-\" чтобы уменшить количество тайлов',\n        DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP: 'Создать новую группу'\n      });\n    }\n  }\n\n  class AddTileDialogService implements IAddTileDialogService {\n    public constructor(\n      private widgetList: [AddTileDialog[]],\n      private $mdDialog: angular.material.IDialogService\n    ) {}\n\n    public show(groups, activeGroupIndex) {\n      return this.$mdDialog\n        .show({\n          templateUrl: 'add_tile_dialog/AddTile.html',\n          bindToController: true,\n          controller: AddTileDialogController,\n          controllerAs: 'dialogCtrl',\n          clickOutsideToClose: true,\n          resolve: {\n            groups: () => {\n              return groups;\n            },\n            activeGroupIndex: () => {\n              return activeGroupIndex;\n            },\n            widgetList: () => {\n              return (<any>this.widgetList);\n            }\n          }\n        });\n    };\n  }\n\n  class AddTileDialogProvider implements IAddTileDialogprovider {\n    private _service: AddTileDialogService;\n    private _widgetList: [AddTileDialog[]] = null;\n\n    constructor() {}\n\n    public configWidgetList = function (list: [AddTileDialog[]]) {\n      this._widgetList = list;\n    };\n\n    public $get($mdDialog: angular.material.IDialogService) {\n      \"ngInject\";\n\n      if (this._service == null)\n        this._service = new AddTileDialogService(this._widgetList, $mdDialog);\n\n      return this._service;\n    }\n  }\n\n  angular\n    .module('pipAddDashboardTileDialog')\n    .config(setTranslations)\n    .provider('pipAddTileDialog', AddTileDialogProvider);\n}","angular\n    .module('pipAddDashboardTileDialog', ['ngMaterial']);\n\nimport './AddTileDialogController';\nimport './AddTileProvider';","import {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\nimport {\n  ITileConfigService\n} from '../config_tile_dialog/ConfigDialogService';\n\n{\n  class CalendarTileController extends MenuTileService {\n    constructor(\n      private pipTileConfigDialogService: ITileConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n        this.menu.push({\n          title: 'Configurate',\n          click: () => {\n            this.onConfigClick();\n          }\n        });\n        this.options.date = this.options.date || new Date();\n        this.color = this.options.color || 'blue';\n      }\n    }\n\n    private onConfigClick() {\n      this.pipTileConfigDialogService.show({\n        dialogClass: 'pip-calendar-config',\n        locals: {\n          color: this.color,\n          size: this.options.size,\n          date: this.options.date,\n        },\n        extensionUrl: 'calendar_tile/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n\n        this.color = result.color;\n        this.options.color = result.color;\n        this.options.date = result.date;\n      });\n    }\n\n  }\n\n  const CalendarTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions',\n    },\n    controller: CalendarTileController,\n    templateUrl: 'calendar_tile/CalendarTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipCalendarTile', CalendarTile);\n\n}","export interface IDashboardTile {\n    options: any;\n    color: string;\n    size: Object | string | number;\n}\n\nexport class DashboardTile implements IDashboardTile {\n    public options: any;\n    public color: string;\n    public size: Object | string | number;\n\n    constructor() { }\n}","\nclass TileColors {\n    static all: string[] = ['purple', 'green', 'gray', 'orange', 'blue'];\n}\n\nclass TileSizes {\n    static all: any = [{\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL',\n            id: '11'\n        },\n        {\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE',\n            id: '21'\n        },\n        {\n            name: 'DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE',\n            id: '22'\n        }\n    ];\n}\n\nexport class TileConfigDialogController {\n    public colors: string[] = TileColors.all;\n    public sizes: any = TileSizes.all;\n    public sizeId: string = TileSizes.all[0].id;\n    public onCancel: Function;\n\n    constructor(\n        public params,\n        public extensionUrl,\n        public $mdDialog: angular.material.IDialogService\n    ) {\n        \"ngInject\";\n\n        angular.extend(this, this.params);\n        this.sizeId = '' + this.params.size.colSpan + this.params.size.rowSpan;\n\n        this.onCancel = () => {\n            this.$mdDialog.cancel();\n        }\n    }\n\n    public onApply(updatedData) {\n        this['size'].sizeX = Number(this.sizeId.substr(0, 1));\n        this['size'].sizeY = Number(this.sizeId.substr(1, 1));\n        this.$mdDialog.hide(updatedData);\n    }\n}","{    \n    interface ITileConfigExtendComponentBindings {\n        [key: string]: any;\n\n        pipExtensionUrl: any;\n        pipDialogScope: any;\n        pipApply: any;\n    }\n\n    const TileConfigExtendComponentBindings: ITileConfigExtendComponentBindings = {\n        pipExtensionUrl: '<',\n        pipDialogScope: '<',\n        pipApply: '&'\n    }\n\n    class TileConfigExtendComponentChanges implements ng.IOnChangesObject, ITileConfigExtendComponentBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        pipExtensionUrl: ng.IChangesObject<string>;\n        pipDialogScope: ng.IChangesObject<ng.IScope>;\n\n        pipApply: ng.IChangesObject<({updatedData: any}) => ng.IPromise<void>>;\n    }\n\n    interface ITileConfigExtendComponentAttributes extends ng.IAttributes {\n        pipExtensionUrl: string\n    }\n\n    class TileConfigExtendComponentController implements ITileConfigExtendComponentBindings {\n        public pipExtensionUrl: string;\n        public pipDialogScope: ng.IScope;\n        public pipApply: (param: {updatedData: any}) => ng.IPromise<void>;\n\n        constructor(\n            private $templateRequest: angular.ITemplateRequestService,\n            private $compile: angular.ICompileService,\n            private $scope: angular.IScope, \n            private $element: JQuery, \n            private $attrs: ITileConfigExtendComponentAttributes\n        ) { }\n\n        public $onChanges(changes: TileConfigExtendComponentChanges) {\n            if (changes.pipDialogScope) {\n                delete changes.pipDialogScope.currentValue['$scope'];\n                angular.extend(this, changes.pipDialogScope.currentValue);\n            }\n            if (changes.pipExtensionUrl && changes.pipExtensionUrl.currentValue) {\n                this.$templateRequest(changes.pipExtensionUrl.currentValue, false).then((html) => {\n                    this.$element.find('pip-extension-point').replaceWith(this.$compile(html)(this.$scope));\n                });\n            }\n        }\n\n        public onApply() {\n            this.pipApply({updatedData: this});\n        }\n    }\n\n    const pipTileConfigComponent: ng.IComponentOptions = {\n        templateUrl: 'config_tile_dialog/ConfigDialogExtendComponent.html',\n        controller: TileConfigExtendComponentController,\n        bindings: TileConfigExtendComponentBindings\n    }\n\n    angular\n        .module('pipConfigDashboardTileDialog')\n        .component('pipTileConfigExtendComponent', pipTileConfigComponent);\n}","import { TileConfigDialogController } from './ConfigDialogController';\n\nexport interface ITileConfigService {\n    show(params: ITileConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void): any;\n}\n\nexport interface ITileConfigDialogOptions extends angular.material.IDialogOptions {\n    dialogClass?: string;\n    extensionUrl?: string;\n    event?: any;\n}\n\n{\n    const setTranslations = function($injector: ng.auto.IInjectorService) {\n        const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                DASHBOARD_TILE_CONFIG_DIALOG_TITLE: 'Edit tile',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL: 'Small',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE: 'Wide',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE: 'Large'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                DASHBOARD_TILE_CONFIG_DIALOG_TITLE: 'Изменить виджет',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_SMALL: 'Мален.',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_WIDE: 'Широкий',\n                DASHBOARD_TILE_CONFIG_DIALOG_SIZE_LARGE: 'Большой'\n            });\n        }\n    }\n\n    class TileConfigDialogService {\n        public constructor(\n            public $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: ITileConfigDialogOptions, successCallback ? : (key) => void, cancelCallback ? : () => void) {\n            this.$mdDialog.show({\n                    targetEvent: params.event,\n                    templateUrl: params.templateUrl || 'dialogs/tile_config/ConfigDialog.html',\n                    controller: TileConfigDialogController,\n                    bindToController: true,\n                    controllerAs: 'vm',\n                    locals: {\n                        extensionUrl: params.extensionUrl,\n                        params: params.locals\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((key) => {\n                    if (successCallback) {\n                        successCallback(key);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    angular\n        .module('pipConfigDashboardTileDialog')\n        .config(setTranslations)\n        .service('pipTileConfigDialogService', TileConfigDialogService);\n}","\nangular\n    .module('pipConfigDashboardTileDialog', ['ngMaterial']);\n\nimport './ConfigDialogController';\nimport './ConfigDialogService';\nimport './ConfigDialogExtendComponent';","import {\n  ITileTemplateService\n} from '../utility/TileTemplateUtility';\nimport {\n  IAddTileDialogService,\n  IAddTileDialogprovider\n} from '../add_tile_dialog/AddTileProvider'\n\n{\n  const setTranslations = function ($injector: ng.auto.IInjectorService) {\n    const pipTranslate = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\n    if (pipTranslate) {\n      ( < any > pipTranslate).setTranslations('en', {\n        DROP_TO_CREATE_NEW_GROUP: 'Drop here to create new group',\n      });\n      ( < any > pipTranslate).setTranslations('ru', {\n        DROP_TO_CREATE_NEW_GROUP: 'Перетащите сюда для создания новой группы'\n      });\n    }\n  }\n\n  const configureAvailableWidgets = function (pipAddTileDialogProvider: IAddTileDialogprovider) {\n    pipAddTileDialogProvider.configWidgetList([\n      [{\n          title: 'Event',\n          icon: 'document',\n          name: 'event',\n          amount: 0\n        },\n        {\n          title: 'Position',\n          icon: 'location',\n          name: 'position',\n          amount: 0\n        }\n      ],\n      [{\n          title: 'Calendar',\n          icon: 'date',\n          name: 'calendar',\n          amount: 0\n        },\n        {\n          title: 'Sticky Notes',\n          icon: 'note-take',\n          name: 'notes',\n          amount: 0\n        },\n        {\n          title: 'Statistics',\n          icon: 'tr-statistics',\n          name: 'statistics',\n          amount: 0\n        }\n      ]\n    ]);\n  }\n\n  class draggableOptions {\n    tileWidth: number;\n    tileHeight: number;\n    gutter: number;\n    inline: boolean;\n  }\n\n  const DEFAULT_GRID_OPTIONS: draggableOptions = {\n    tileWidth: 150, // 'px'\n    tileHeight: 150, // 'px'\n    gutter: 10, // 'px'\n    inline: false\n  };\n\n  interface DashboardBindings {\n      gridOptions: any;\n      groupAdditionalActions: any;\n      groupedWidgets: any;\n  }\n\n  class DashboardController implements ng.IController, DashboardBindings {\n    private defaultGroupMenuActions: any = [{\n        title: 'Add Component',\n        callback: (groupIndex) => {\n          this.addComponent(groupIndex);\n        }\n      },\n      {\n        title: 'Remove',\n        callback: (groupIndex) => {\n          this.removeGroup(groupIndex);\n        }\n      },\n      {\n        title: 'Configurate',\n        callback: (groupIndex) => {\n          console.log('configurate group with index:', groupIndex);\n        }\n      }\n    ];\n    private _includeTpl: string = '<pip-{{ type }}-tile group=\"groupIndex\" index=\"index\"' +\n      'pip-options=\"$parent.$ctrl.groupedWidgets[groupIndex][\\'source\\'][index].opts\">' +\n      '</pip-{{ type }}-tile>';\n\n    public groupedWidgets: any;\n    public draggableGridOptions: draggableOptions;\n    public widgetsTemplates: any;\n    public groupMenuActions: any = this.defaultGroupMenuActions;\n    public widgetsContext: any;\n    public gridOptions: any;\n    public groupAdditionalActions: any;\n\n    constructor(\n      $scope: angular.IScope,\n      private $rootScope: angular.IRootScopeService,\n      private $attrs: any,\n      private $element: any,\n      private $timeout: angular.ITimeoutService,\n      private $interpolate: angular.IInterpolateService,\n      private pipAddTileDialog: IAddTileDialogService,\n      private pipTileTemplate: ITileTemplateService\n    ) {\n      // Add class to style scroll bar\n      $element.addClass('pip-scroll');\n\n      // Set tiles grid options\n      this.draggableGridOptions = this.gridOptions || DEFAULT_GRID_OPTIONS;\n\n      // Switch inline displaying\n      if (this.draggableGridOptions.inline === true) {\n        $element.addClass('inline-grid');\n      }\n      // Extend group's menu actions\n      if (this.groupAdditionalActions) angular.extend(this.groupMenuActions, this.groupAdditionalActions);\n\n      // Compile widgets\n      this.widgetsContext = $scope;\n      this.compileWidgets();\n\n      this.$timeout(() => {\n        this.$element.addClass('visible');\n      }, 700);\n    }\n\n    private compileWidgets() {\n      _.each(this.groupedWidgets, (group, groupIndex) => {\n        group.removedWidgets = group.removedWidgets || [],\n          group.source = group.source.map((widget, index) => {\n            // Establish default props\n            widget.size = widget.size || {\n              colSpan: 1,\n              rowSpan: 1\n            };\n            widget.index = index;\n            widget.groupIndex = groupIndex;\n            widget.menu = widget.menu || {};\n            angular.extend(widget.menu, [{\n              title: 'Remove',\n              click: (item, params, object) => {\n                this.removeWidget(item, params, object);\n              }\n            }]);\n\n            return {\n              opts: widget,\n              template: this.pipTileTemplate.getTemplate(widget, this._includeTpl)\n            };\n          })\n      });\n    }\n\n    public addComponent(groupIndex) {\n      this.pipAddTileDialog\n        .show(this.groupedWidgets, groupIndex)\n        .then((data) => {\n          var activeGroup;\n\n          if (!data) {\n            return;\n          }\n\n          if (data.groupIndex !== -1) {\n            activeGroup = this.groupedWidgets[data.groupIndex];\n          } else {\n            activeGroup = {\n              title: 'New group',\n              source: []\n            };\n          }\n\n          this.addWidgets(activeGroup.source, data.widgets);\n\n          if (data.groupIndex === -1) {\n            this.groupedWidgets.push(activeGroup);\n          }\n\n          this.compileWidgets();\n        });\n    };\n\n    public removeGroup = (groupIndex) => {\n      console.log('removeGroup', groupIndex);\n      this.groupedWidgets.splice(groupIndex, 1);\n    }\n\n    private addWidgets(group, widgets) {\n      widgets.forEach((widgetGroup) => {\n        widgetGroup.forEach((widget) => {\n          if (widget.amount) {\n            Array.apply(null, Array(widget.amount)).forEach(() => {\n              group.push({\n                type: widget.name\n              });\n            });\n          }\n        });\n      });\n    }\n\n    private removeWidget(item, params, object) {\n      this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n      this.groupedWidgets[params.options.groupIndex].removedWidgets.push(params.options.index);\n      this.groupedWidgets[params.options.groupIndex].source.splice(params.options.index, 1);\n      this.$timeout(() => {\n        this.groupedWidgets[params.options.groupIndex].removedWidgets = [];\n      });\n    }\n\n  }\n\n  const Dashboard: ng.IComponentOptions = {\n    bindings: {\n      gridOptions: '=pipGridOptions',\n      groupAdditionalActions: '=pipGroupActions',\n      groupedWidgets: '=pipGroups'\n    },\n    controller: DashboardController,\n    templateUrl: 'dashboard/Dashboard.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .config(configureAvailableWidgets)\n    .config(setTranslations)\n    .component('pipDashboard', Dashboard);\n\n}","declare var interact;\n\nimport {\n  DragTileService,\n  IDragTileService,\n  IDragTileConstructor\n} from './DraggableTileService';\nimport {\n  TilesGridService,\n  ITilesGridService,\n  ITilesGridConstructor\n} from '../tile_group/TileGroupService';\n\nexport const DEFAULT_TILE_WIDTH: number = 150;\nexport const DEFAULT_TILE_HEIGHT: number = 150;\nexport const UPDATE_GROUPS_EVENT = \"pipUpdateDashboardGroupsConfig\";\n\nconst SIMPLE_LAYOUT_COLUMNS_COUNT: number = 2;\nconst DEFAULT_OPTIONS = {\n  tileWidth: DEFAULT_TILE_WIDTH, // 'px'\n  tileHeight: DEFAULT_TILE_HEIGHT, // 'px'\n  gutter: 20, // 'px'\n  container: 'pip-draggable-grid:first-of-type',\n  //mobileBreakpoint       : XXX,   // Get from pipMedia Service in the constructor\n  activeDropzoneClass: 'dropzone-active',\n  groupContaninerSelector: '.pip-draggable-group:not(.fict-group)',\n};\n\n{\n  interface IDraggableBindings {\n      tilesTemplates: any;\n      tilesContext: any;\n      options: any;\n      groupMenuActions: any;\n      $container: JQuery;\n  }\n\n  interface IDraggableControllerScope extends ng.IScope {\n    $container: JQuery;\n    tilesTemplates: any;\n    options: any;\n  }\n\n  interface ITileScope extends ng.IScope {\n    index: number | string;\n    groupIndex: number | string;\n  }\n\n  class DraggableController implements ng.IComponentController, IDraggableBindings {\n    public opts: any;\n    public groups: any;\n    public sourceDropZoneElem: any = null;\n    public isSameDropzone: boolean = true;\n    public tileGroups: any = null;\n    public availableWidth: number;\n    public availableColumns: number;\n    public groupsContainers: any;\n    public container: any;\n    public activeDraggedGroup: any;\n    public draggedTile: any;\n    public containerOffset: any;\n    public tilesTemplates: any;\n    public tilesContext: any;\n    public options: any;\n    public groupMenuActions: any;\n    public $container: JQuery;\n\n    constructor(\n      private $scope: IDraggableControllerScope,\n      private $rootScope: angular.IRootScopeService,\n      private $compile: angular.ICompileService,\n      private $timeout: angular.ITimeoutService,\n      private $element: JQuery,\n      pipDragTile: IDragTileService,\n      pipTilesGrid: ITilesGridService,\n      pipMedia: pip.layouts.IMediaService\n    ) {\n      this.opts = _.merge({\n        mobileBreakpoint: pipMedia.breakpoints.xs\n      }, DEFAULT_OPTIONS, this.options);\n\n      this.groups = this.tilesTemplates.map((group, groupIndex) => {\n        return {\n          title: group.title,\n          editingName: false,\n          index: groupIndex,\n          source: group.source.map((tile) => {\n            const tileScope = this.createTileScope(tile);\n\n            return IDragTileConstructor(DragTileService, {\n              tpl: $compile(tile.template)(tileScope),\n              options: tile.opts,\n              size: tile.opts.size\n            });\n          })\n        };\n      });\n\n      // Add templates watcher\n      $scope.$watch('$ctrl.tilesTemplates', (newVal) => {\n        this.watch(newVal);\n      }, true);\n\n      // Initialize data\n      this.initialize();\n\n      // Resize handler TODO: replace by pip resize watchers\n      $(window).on('resize', _.debounce(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n\n        this.tileGroups.forEach((group) => {\n          group\n            .setAvailableColumns(this.availableColumns)\n            .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n            .setTilesDimensions()\n            .calcContainerHeight();\n        });\n      }, 50));\n    }\n\n    // Post link function\n    public $postLink() {\n      this.$container = this.$element;\n    }\n\n    // Watch handler\n    private watch(newVal) {\n      const prevVal = this.groups;\n      let changedGroupIndex = null;\n\n      if (newVal.length > prevVal.length) {\n        this.addGroup(newVal[newVal.length - 1]);\n\n        return;\n      }\n\n      if (newVal.length < prevVal.length) {\n        this.removeGroups(newVal);\n\n        return;\n      }\n\n      for (let i = 0; i < newVal.length; i++) {\n        const groupWidgetDiff = prevVal[i].source.length - newVal[i].source.length;\n        if (groupWidgetDiff || (newVal[i].removedWidgets && newVal[i].removedWidgets.length > 0)) {\n          changedGroupIndex = i;\n\n          if (groupWidgetDiff < 0) {\n            const newTiles = newVal[changedGroupIndex].source.slice(groupWidgetDiff);\n\n            _.each(newTiles, (tile) => {\n              console.log('tile', tile);\n            });\n\n            this.addTilesIntoGroup(newTiles, this.tileGroups[changedGroupIndex], this.groupsContainers[changedGroupIndex]);\n\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          } else {\n            this.removeTiles(this.tileGroups[changedGroupIndex], newVal[changedGroupIndex].removedWidgets, this.groupsContainers[changedGroupIndex]);\n            this.updateTilesOptions(newVal);\n            this.$timeout(() => {\n              this.updateTilesGroups();\n            });\n          }\n\n          return;\n        }\n      }\n\n      if (newVal && this.tileGroups) {\n        this.updateTilesOptions(newVal);\n        this.$timeout(() => {\n          this.updateTilesGroups();\n        });\n      }\n    }\n\n    // Inline edit group handlers\n    public onTitleClick(group, event) {\n      if (!group.editingName) {\n        group.oldTitle = _.clone(group.title);\n        group.editingName = true;\n        this.$timeout(() => {\n          $(event.currentTarget.children[0]).focus();\n        });\n      }\n    }\n\n    public cancelEditing(group) {\n      group.title = group.oldTitle;\n    }\n\n    public onBlurTitleInput(group) {\n      this.$timeout(() => {\n        group.editingName = false;\n        this.$rootScope.$broadcast(UPDATE_GROUPS_EVENT, this.groups);\n        // Update title in outer scope\n        this.tilesTemplates[group.index].title = group.title;\n      }, 100);\n    }\n\n    public onKyepressTitleInput(group, event) {\n      if (event.keyCode === 13) {\n        this.onBlurTitleInput(group);\n      }\n    }\n\n    // Update outer scope functions\n    private updateTilesTemplates(updateType: string, source ? : any) {\n      switch (updateType) {\n        case 'addGroup':\n          if (this.groups.length !== this.tilesTemplates.length) {\n            this.tilesTemplates.push(source);\n          }\n          break;\n        case 'moveTile':\n          const {\n            fromIndex,\n            toIndex,\n            tileOptions,\n            fromTileIndex\n          } = {\n            fromIndex: source.from.elem.attributes['data-group-id'].value,\n            toIndex: source.to.elem.attributes['data-group-id'].value,\n            tileOptions: source.tile.opts.options,\n            fromTileIndex: source.tile.opts.options.index\n          }\n          this.tilesTemplates[fromIndex].source.splice(fromTileIndex, 1);\n          this.tilesTemplates[toIndex].source.push({\n            opts: tileOptions\n          });\n\n          this.reIndexTiles(source.from.elem);\n          this.reIndexTiles(source.to.elem);\n          break;\n      }\n    }\n\n    // Manage tiles functions\n    private createTileScope(tile: any): ITileScope {\n      const tileScope = < ITileScope > this.$rootScope.$new(false, this.tilesContext);\n      tileScope.index = tile.opts.index == undefined ? tile.opts.options.index : tile.opts.index;\n      tileScope.groupIndex = tile.opts.groupIndex == undefined ? tile.opts.options.groupIndex : tile.opts.groupIndex;\n\n      return tileScope;\n    }\n\n    private removeTiles(group, indexes, container) {\n      const tiles = $(container).find('.pip-draggable-tile');\n\n      _.each(indexes, (index) => {\n        group.tiles.splice(index, 1);\n        tiles[index].remove();\n      });\n\n      this.reIndexTiles(container);\n    }\n\n    private reIndexTiles(container, gIndex ? ) {\n      const tiles = $(container).find('.pip-draggable-tile'),\n        groupIndex = gIndex === undefined ? container.attributes['data-group-id'].value : gIndex;\n\n      _.each(tiles, (tile, index) => {\n        const child = $(tile).children()[0];\n        angular.element(child).scope()['index'] = index;\n        angular.element(child).scope()['groupIndex'] = groupIndex;\n      });\n    }\n\n    private removeGroups(newGroups) {\n      const removeIndexes = [],\n        remain = [],\n        containers = [];\n\n\n      _.each(this.groups, (group, index) => {\n        if (_.findIndex(newGroups, (g) => {\n            return g['title'] === group.title\n          }) < 0) {\n          removeIndexes.push(index);\n        } else {\n          remain.push(index);\n        }\n      });\n\n      _.each(removeIndexes.reverse(), (index) => {\n        this.groups.splice(index, 1);\n        this.tileGroups.splice(index, 1);\n      });\n\n      _.each(remain, (index) => {\n        containers.push(this.groupsContainers[index]);\n      });\n\n      this.groupsContainers = containers;\n\n      _.each(this.groupsContainers, (container, index) => {\n        this.reIndexTiles(container, index);\n      });\n    }\n\n    private addGroup(sourceGroup) {\n      const group = {\n        title: sourceGroup.title,\n        source: sourceGroup.source.map((tile) => {\n          const tileScope = this.createTileScope(tile);\n\n          return IDragTileConstructor(DragTileService, {\n            tpl: this.$compile(tile.template)(tileScope),\n            options: tile.opts,\n            size: tile.opts.size\n          });\n        })\n      };\n\n      this.groups.push(group);\n      if (!this.$scope.$$phase) this.$scope.$apply();\n\n      this.$timeout(() => {\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups.push(\n          ITilesGridConstructor(TilesGridService, group.source, this.opts, this.availableColumns, this.groupsContainers[this.groupsContainers.length - 1])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight()\n        );\n      });\n\n      this.updateTilesTemplates('addGroup', sourceGroup);\n    }\n\n    private addTilesIntoGroup(newTiles, group, groupContainer) {\n      newTiles.forEach((tile) => {\n        const tileScope = this.createTileScope(tile);\n\n        const newTile = IDragTileConstructor(DragTileService, {\n          tpl: this.$compile(tile.template)(tileScope),\n          options: tile.opts,\n          size: tile.opts.size\n        });\n\n        group.addTile(newTile);\n\n        $('<div>')\n          .addClass('pip-draggable-tile')\n          .append(newTile.getCompiledTemplate())\n          .appendTo(groupContainer);\n      });\n    }\n\n    private updateTilesOptions(optionsGroup) {\n      optionsGroup.forEach((optionGroup) => {\n        optionGroup.source.forEach((tileOptions) => {\n          this.tileGroups.forEach((group) => {\n            group.updateTileOptions(tileOptions.opts);\n          });\n        });\n      });\n    }\n\n    private initTilesGroups(tileGroups, opts, groupsContainers) {\n      return tileGroups.map((group, index) => {\n        return ITilesGridConstructor(TilesGridService, group.source, opts, this.availableColumns, groupsContainers[index])\n          .generateGrid(this.getSingleTileWidthForMobile(this.availableWidth))\n          .setTilesDimensions()\n          .calcContainerHeight();\n      });\n    }\n\n    private updateTilesGroups(onlyPosition ? , draggedTile ? ) {\n      this.tileGroups.forEach((group) => {\n        if (!onlyPosition) {\n          group.generateGrid(this.getSingleTileWidthForMobile(this.availableWidth));\n        }\n\n        group\n          .setTilesDimensions(onlyPosition, draggedTile)\n          .calcContainerHeight();\n      });\n    }\n\n    private getContainerWidth(): any {\n      const container = this.$container || $('body');\n      return container.width();\n    }\n\n    private getAvailableColumns(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? SIMPLE_LAYOUT_COLUMNS_COUNT :\n        Math.floor(availableWidth / (this.opts.tileWidth + this.opts.gutter));\n    }\n\n    private getActiveGroupAndTile(elem): any {\n      const active = {};\n\n      this.tileGroups.forEach((group) => {\n        const foundTile = group.getTileByNode(elem);\n\n        if (foundTile) {\n          active['group'] = group;\n          active['tile'] = foundTile;\n          return;\n        }\n      });\n\n      return active;\n    }\n\n    private getSingleTileWidthForMobile(availableWidth): any {\n      return this.opts.mobileBreakpoint > availableWidth ? availableWidth / 2 - this.opts.gutter : null;\n    }\n\n    private onDragStartListener(event) {\n      const activeEntities = this.getActiveGroupAndTile(event.target);\n\n      this.container = $(event.target).parent('.pip-draggable-group').get(0);\n      this.draggedTile = activeEntities['tile'];\n      this.activeDraggedGroup = activeEntities['group'];\n\n      this.$element.addClass('drag-transfer');\n\n      this.draggedTile.startDrag();\n    }\n\n    private onDragMoveListener(event) {\n      const target = event.target;\n      const x = (parseFloat(target.style.left) || 0) + event.dx;\n      const y = (parseFloat(target.style.top) || 0) + event.dy;\n\n      this.containerOffset = this.getContainerOffset();\n\n      target.style.left = x + 'px'; // TODO [apidhirnyi] Extract units into options section\n      target.style.top = y + 'px';\n\n      const belowElement = this.activeDraggedGroup.getTileByCoordinates({\n        left: event.pageX - this.containerOffset.left,\n        top: event.pageY - this.containerOffset.top\n      }, this.draggedTile);\n\n      if (belowElement) {\n        const draggedTileIndex = this.activeDraggedGroup.getTileIndex(this.draggedTile);\n        const belowElemIndex = this.activeDraggedGroup.getTileIndex(belowElement);\n\n        if ((draggedTileIndex + 1) === belowElemIndex) {\n          return;\n        }\n\n        this.activeDraggedGroup\n          .swapTiles(this.draggedTile, belowElement)\n          .setTilesDimensions(true, this.draggedTile);\n\n        this.$timeout(() => {\n          this.setGroupContainersHeight();\n        }, 0);\n      }\n    }\n\n    private onDragEndListener() {\n      this.draggedTile.stopDrag(this.isSameDropzone);\n\n      this.$element.removeClass('drag-transfer');\n      this.activeDraggedGroup = null;\n      this.draggedTile = null;\n    }\n\n    private getContainerOffset() {\n      const containerRect = this.container.getBoundingClientRect();\n\n      return {\n        left: containerRect.left,\n        top: containerRect.top\n      };\n    }\n\n    private setGroupContainersHeight() {\n      this.tileGroups.forEach((tileGroup) => {\n        tileGroup.calcContainerHeight();\n      });\n    }\n\n    private moveTile(from, to, tile) {\n      let elem;\n      const movedTile = from.removeTile(tile);\n      const tileScope = this.createTileScope(tile);\n\n      $(this.groupsContainers[_.findIndex(this.tileGroups, from)])\n        .find(movedTile.getElem())\n        .remove();\n\n      if (to !== null) {\n        to.addTile(movedTile);\n\n        elem = this.$compile(movedTile.getElem())(tileScope);\n\n        $(this.groupsContainers[_.findIndex(this.tileGroups, to)])\n          .append(elem);\n\n        this.$timeout(to.setTilesDimensions.bind(to, true));\n      }\n\n      this.updateTilesTemplates('moveTile', {\n        from: from,\n        to: to,\n        tile: movedTile\n      });\n    }\n\n    private onDropListener(event) {\n      const droppedGroupIndex = event.target.attributes['data-group-id'].value;\n      const droppedGroup = this.tileGroups[droppedGroupIndex];\n\n      if (this.activeDraggedGroup !== droppedGroup) {\n        this.moveTile(this.activeDraggedGroup, droppedGroup, this.draggedTile);\n      }\n\n      this.updateTilesGroups(true);\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropToFictGroupListener(event) {\n      const from = this.activeDraggedGroup;\n      const tile = this.draggedTile;\n\n      this.addGroup({\n        title: 'New group',\n        source: []\n      });\n      this.$timeout(() => {\n        this.moveTile(from, this.tileGroups[this.tileGroups.length - 1], tile);\n        this.updateTilesGroups(true);\n      });\n\n      this.sourceDropZoneElem = null;\n    }\n\n    private onDropEnterListener(event) {\n      if (!this.sourceDropZoneElem) {\n        this.sourceDropZoneElem = event.dragEvent.dragEnter;\n      }\n\n      if (this.sourceDropZoneElem !== event.dragEvent.dragEnter) {\n        event.dragEvent.dragEnter.classList.add('dropzone-active');\n        $('body').css('cursor', 'copy');\n        this.isSameDropzone = false;\n      } else {\n        $('body').css('cursor', '');\n        this.isSameDropzone = true;\n      }\n    }\n\n    private onDropDeactivateListener(event) {\n      if (this.sourceDropZoneElem !== event.target) {\n        event.target.classList.remove(this.opts.activeDropzoneClass);\n        $('body').css('cursor', '');\n      }\n    }\n\n    private onDropLeaveListener(event) {\n      event.target.classList.remove(this.opts.activeDropzoneClass);\n    }\n\n    private initialize() {\n      this.$timeout(() => {\n        this.availableWidth = this.getContainerWidth();\n        this.availableColumns = this.getAvailableColumns(this.availableWidth);\n        this.groupsContainers = document.querySelectorAll(this.opts.groupContaninerSelector);\n        this.tileGroups = this.initTilesGroups(this.groups, this.opts, this.groupsContainers);\n\n        interact('.pip-draggable-tile')\n          .draggable({\n            autoScroll: {\n              enabled: true,\n              container: $('#content').get(0),\n              speed: 500\n            },\n            onstart: (event) => {\n              this.onDragStartListener(event)\n            },\n            onmove: (event) => {\n              this.onDragMoveListener(event)\n            },\n            onend: (event) => {\n              this.onDragEndListener()\n            }\n          });\n\n        interact('.pip-draggable-group.fict-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropToFictGroupListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          });\n\n        interact('.pip-draggable-group')\n          .dropzone({\n            ondrop: (event) => {\n              this.onDropListener(event)\n            },\n            ondragenter: (event) => {\n              this.onDropEnterListener(event)\n            },\n            ondropdeactivate: (event) => {\n              this.onDropDeactivateListener(event)\n            },\n            ondragleave: (event) => {\n              this.onDropLeaveListener(event)\n            }\n          });\n\n        this.$container\n          .on('mousedown touchstart', 'md-menu .md-icon-button', () => {\n            interact('.pip-draggable-tile').draggable(false);\n            $(this).trigger('click');\n          })\n          .on('mouseup touchend', () => {\n            interact('.pip-draggable-tile').draggable(true);\n          });\n          \n      }, 0);\n    }\n  }\n\n  const DragComponent: ng.IComponentOptions = {\n    bindings: {\n      tilesTemplates: '=pipTilesTemplates',\n      tilesContext: '=pipTilesContext',\n      options: '=pipDraggableGrid',\n      groupMenuActions: '=pipGroupMenuActions'\n    },\n    //controllerAs: 'DraggedCtrl',\n    templateUrl: 'draggable/Draggable.html',\n    controller: DraggableController\n  }\n\n  angular.module('pipDraggableTiles')\n    .component('pipDraggableGrid', DragComponent);\n}","export interface DragTileConstructor {\n  new (options: any);\n}\n\nexport function IDragTileConstructor(constructor: DragTileConstructor, options: any): IDragTileService {\n  return new constructor(options);\n}\n\nexport interface IDragTileService {\n  tpl: any;\n  opts: any;\n  size: any;\n  elem: any;\n  preview: any;\n  getSize(): any;\n  setSize(width, height): any;\n  setPosition(left, top): any;\n  getCompiledTemplate(): any;\n  updateElem(parent): any;\n  getElem(): any;\n  startDrag(): any;\n  stopDrag(isAnimate): any;\n  setPreviewPosition(coords): void;\n  getOptions(): any;\n  setOptions(options): any;\n}\n\nlet DEFAULT_TILE_SIZE = {\n  colSpan: 1,\n  rowSpan: 1\n};\n\nexport class DragTileService implements IDragTileService {\n  public tpl: any;\n  public opts: any;\n  public size: any;\n  public elem: any;\n  public preview: any;\n\n  constructor (options: any) {\n    this.tpl = options.tpl.get(0);\n    this.opts = options;\n    this.size = _.merge({}, DEFAULT_TILE_SIZE, options.size);\n    this.elem = null;\n  }\n\n  public getSize(): any {\n    return this.size;\n  }\n\n  public setSize(width, height): any {\n    this.size.width = width;\n    this.size.height = height;\n\n    if (this.elem) {\n      this.elem.css({\n        width: width,\n        height: height\n      });\n    }\n\n    return this;\n  }\n\n  public setPosition(left, top): any {\n    this.size.left = left;\n    this.size.top = top;\n\n    if (this.elem) {\n      this.elem.css({\n        left: left,\n        top: top\n      });\n    }\n\n    return this;\n  }\n\n  public getCompiledTemplate(): any {\n    return this.tpl;\n  };\n\n  public updateElem(parent): any {\n    this.elem = $(this.tpl).parent(parent);\n\n    return this;\n  };\n\n  public getElem(): any {\n    return this.elem.get(0);\n  };\n\n  public startDrag(): any {\n    this.preview = $('<div>')\n      .addClass('pip-dragged-preview')\n      .css({\n        position: 'absolute',\n        left: this.elem.css('left'),\n        top: this.elem.css('top'),\n        width: this.elem.css('width'),\n        height: this.elem.css('height')\n      });\n\n    this.elem\n      .addClass('no-animation')\n      .css({\n        zIndex: '9999'\n      })\n      .after(this.preview);\n\n    return this;\n  };\n\n  public stopDrag(isAnimate): any {\n    let self = this;\n\n    if (isAnimate) {\n      this.elem\n        .removeClass('no-animation')\n        .css({\n          left: this.preview.css('left'),\n          top: this.preview.css('top')\n        })\n        .on('transitionend', onTransitionEnd);\n    } else {\n      self.elem\n        .css({\n          left: self.preview.css('left'),\n          top: self.preview.css('top'),\n          zIndex: ''\n        })\n        .removeClass('no-animation');\n\n      self.preview.remove();\n      self.preview = null;\n    }\n\n    return this;\n\n    function onTransitionEnd() {\n      if (self.preview) {\n        self.preview.remove();\n        self.preview = null;\n      }\n\n      self.elem\n        .css('zIndex', '')\n        .off('transitionend', onTransitionEnd);\n    }\n  };\n\n  public setPreviewPosition(coords) {\n    this.preview.css(coords);\n  };\n\n  public getOptions(): any {\n    return this.opts.options;\n  };\n\n  public setOptions(options): any {\n    _.merge(this.opts.options, options);\n    _.merge(this.size, options.size);\n\n    return this;\n  };\n}\n\nangular\n  .module('pipDraggableTiles')\n  .service('pipDragTile', function () {\n    return function (options) {\n      let newTile = new DragTileService(options);\n\n      return newTile;\n    }\n  });","angular.module('pipDraggableTiles', []);\n\nimport './DraggableTileService';\nimport './Draggable';","import {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\nimport {\n  ITileConfigService\n} from '../config_tile_dialog/ConfigDialogService';\n{\n  class EventTileController extends MenuTileService {\n    private _oldOpacity: number;\n\n    public opacity: number = 0.57;\n\n    constructor(\n      $scope: ng.IScope,\n      private $element: JQuery,\n      private $timeout: angular.ITimeoutService,\n      private pipTileConfigDialogService: ITileConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.color = this.options.color || 'gray';\n      this.opacity = this.options.opacity || this.opacity;\n\n      this.drawImage();\n\n      // TODO it doesn't work\n      $scope.$watch(() => {\n        return $element.is(':visible');\n      }, (newVal) => {\n        this.drawImage();\n      });\n    }\n\n    private drawImage() {\n      if (this.options.image) {\n        this.$timeout(() => {\n          this.onImageLoad(this.$element.find('img'));\n        }, 500);\n      }\n    }\n\n    private onConfigClick() {\n      this._oldOpacity = _.clone(this.opacity);\n      this.pipTileConfigDialogService.show({\n        dialogClass: 'pip-calendar-config',\n        locals: {\n          color: this.color,\n          size: this.options.size || {\n            colSpan: 1,\n            rowSpan: 1\n          },\n          date: this.options.date,\n          title: this.options.title,\n          text: this.options.text,\n          opacity: this.opacity,\n          onOpacitytest: (opacity) => {\n            this.opacity = opacity;\n          }\n        },\n        extensionUrl: 'event_tile/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n\n        this.color = result.color;\n        this.options.color = result.color;\n        this.options.date = result.date;\n        this.options.title = result.title;\n        this.options.text = result.text;\n        this.options.opacity = result.opacity;\n      }, () => {\n        this.opacity = this._oldOpacity;\n      });\n    }\n\n    private onImageLoad(image) {\n      this.setImageMarginCSS(this.$element.parent(), image);\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      if (this.options.image) {\n        this.$timeout(() => {\n          this.setImageMarginCSS(this.$element.parent(), this.$element.find('img'));\n        }, 500);\n      }\n    }\n\n    // Later replace by pipImageUtils sevice's function\n    private setImageMarginCSS($element, image) {\n      let\n        containerWidth = $element.width ? $element.width() : $element.clientWidth, // || 80,\n        containerHeight = $element.height ? $element.height() : $element.clientHeight, // || 80,\n        imageWidth = image[0].naturalWidth || image.width,\n        imageHeight = image[0].naturalHeight || image.height,\n        margin = 0,\n        cssParams = {};\n\n      if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n        margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n        cssParams['margin-left'] = '' + margin + 'px';\n        cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n        cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n        cssParams['margin-top'] = '';\n      } else {\n        margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n        cssParams['margin-top'] = '' + margin + 'px';\n        cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n        cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n        cssParams['margin-left'] = '';\n      }\n\n      image.css(cssParams);\n    }\n  }\n\n\n  const EventTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: EventTileController,\n    templateUrl: 'event_tile/EventTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipEventTile', EventTile);\n}","// Import services\nimport './tile_group/index';\nimport './draggable';\n\n// Import tile services\nimport './menu_tile';\n\n// Import dialogs\nimport './add_tile_dialog';\nimport './config_tile_dialog';\n\nangular.module('pipDashboard', [\n  // Services\n  'pipDraggableTiles',\n  'pipDraggableTilesGroup',\n  // Tile services\n  'pipMenuTile',\n  // Dialogs\n  'pipConfigDashboardTileDialog',\n  'pipAddDashboardTileDialog',\n  //Templates\n  'pipDashboard.Templates',\n  // External pip modules\n  'pipLayout',\n  'pipLocations',\n  'pipDateTime',\n  'pipCharts',\n  'pipTranslate',\n  'pipControls',\n  'pipButtons'\n]);\n\n// Import utility \nimport './utility/TileTemplateUtility';\n// Import tiles\nimport './common_tile/Tile';\nimport './calendar_tile/CalendarTile';\nimport './event_tile/EventTile';\nimport './note_tile/NoteTile';\nimport './picture_slider_tile/PictureSliderTile';\nimport './position_tile/PositionTile';\nimport './statistics_tile/StatisticsTile';\n// Import common component\nimport './dashboard/Dashboard';\n","{\n  const TileMenu = ():ng.IDirective => {\n    return {\n      restrict: 'EA',\n      templateUrl: 'menu_tile/MenuTile.html'\n    };\n  }\n\n  angular\n    .module('pipMenuTile')\n    .directive('pipTileMenu', TileMenu);\n}","import { DashboardTile } from '../common_tile/Tile';\n\nexport class MenuTileService extends DashboardTile {\n  public menu: any = [{\n    title: 'Change Size',\n    action: angular.noop,\n    submenu: [{\n        title: '1 x 1',\n        action: 'changeSize',\n        params: {\n          sizeX: 1,\n          sizeY: 1\n        }\n      },\n      {\n        title: '2 x 1',\n        action: 'changeSize',\n        params: {\n          sizeX: 2,\n          sizeY: 1\n        }\n      },\n      {\n        title: '2 x 2',\n        action: 'changeSize',\n        params: {\n          sizeX: 2,\n          sizeY: 2\n        }\n      }\n    ]\n  }];\n\n  constructor() {\n    \"ngInject\";\n\n    super();\n  }\n\n  public callAction(actionName, params, item) {\n    if (this[actionName]) {\n      this[actionName].call(this, params);\n    }\n\n    if (item['click']) {\n      item['click'].call(item, params, this);\n    }\n  };\n\n  public changeSize(params) {\n    this.options.size.colSpan = params.sizeX;\n    this.options.size.rowSpan = params.sizeY;\n  };\n}\n\n{\n  class MenuTileProvider {\n    private _service: MenuTileService;\n\n    constructor() {}\n\n    public $get() {\n      \"ngInject\";\n\n      if (this._service == null)\n        this._service = new MenuTileService();\n\n      return this._service;\n    }\n  }\n\n  angular\n    .module('pipMenuTile')\n    .provider('pipMenuTile', MenuTileProvider);\n}","angular\n    .module('pipMenuTile', []);\n\nimport './MenuTileDirective';\nimport './MenuTileService';\n\nexport * from './MenuTileService';","import {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\nimport {\n  ITileConfigService\n} from '../config_tile_dialog/ConfigDialogService';\n\n{\n  class NoteTileController extends MenuTileService {\n\n    constructor(\n      private pipTileConfigDialogService: ITileConfigService\n    ) {\n      super();\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.color = this.options.color || 'orange';\n    }\n\n    private onConfigClick() {\n      this.pipTileConfigDialogService.show({\n        locals: {\n          color: this.color,\n          size: this.options.size,\n          title: this.options.title,\n          text: this.options.text,\n        },\n        extensionUrl: 'note_tile/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.color = result.color;\n        this.options.color = result.color;\n        this.changeSize(result.size);\n        this.options.text = result.text;\n        this.options.title = result.title;\n      });\n    }\n  }\n\n  const NoteTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: NoteTileController,\n    templateUrl: 'note_tile/NoteTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipNoteTile', NoteTile);\n}","'use strict';\n\nimport {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\nimport {\n  ITileConfigService\n} from '../config_tile_dialog/ConfigDialogService';\nimport {\n  ITileTemplateService\n} from '../utility/TileTemplateUtility';\n\n{\n  class PictureSliderController extends MenuTileService {\n    public animationType: string = 'fading';\n    public animationInterval: number = 5000;\n\n    constructor(\n      private $scope: angular.IScope,\n      private $element: any,\n      private $timeout: angular.ITimeoutService,\n      private pipTileTemplate: ITileTemplateService\n    ) {\n      super();\n\n      if (this.options) {\n        this.animationType = this.options.animationType || this.animationType;\n        this.animationInterval = this.options.animationInterval || this.animationInterval;\n      }\n    }\n\n    public onImageLoad($event) {\n      this.$timeout(() => {\n        this.pipTileTemplate.setImageMarginCSS(this.$element.parent(), $event.target);\n      });\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.$timeout(() => {\n        _.each(this.$element.find('img'), (image) => {\n          this.pipTileTemplate.setImageMarginCSS(this.$element.parent(), image);\n        });\n      }, 500);\n    }\n  }\n\n  const PictureSliderTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: PictureSliderController,\n    templateUrl: 'picture_slider_tile/PictureSliderTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipPictureSliderTile', PictureSliderTile);\n}","import {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\nimport {\n  ITileConfigService\n} from '../config_tile_dialog/ConfigDialogService';\n\n{\n  class PositionTileController extends MenuTileService {\n    public showPosition: boolean = true;\n\n    constructor(\n      $scope: angular.IScope,\n      private $timeout: angular.ITimeoutService,\n      private $element: any,\n      private pipTileConfigDialogService: ITileConfigService,\n      private pipLocationEditDialog: any,\n    ) {\n      super();\n\n      if (this.options) {\n        if (this.options.menu) this.menu = _.union(this.menu, this.options.menu);\n      }\n\n      this.menu.push({\n        title: 'Configurate',\n        click: () => {\n          this.onConfigClick();\n        }\n      });\n      this.menu.push({\n        title: 'Change location',\n        click: () => {\n          this.openLocationEditDialog();\n        }\n      });\n\n      this.options.location = this.options.location || this.options.position;\n\n      $scope.$watch('$ctrl.options.location', () => {\n        this.reDrawPosition();\n      });\n\n      // TODO it doesn't work\n      $scope.$watch(() => {\n        return $element.is(':visible');\n      }, (newVal) => {\n        if (newVal == true) this.reDrawPosition();\n      });\n    }\n\n    private onConfigClick() {\n      this.pipTileConfigDialogService.show({\n        dialogClass: 'pip-position-config',\n        locals: {\n          size: this.options.size,\n          locationName: this.options.locationName,\n          hideColors: true,\n        },\n        extensionUrl: 'position_tile/ConfigDialogExtension.html'\n      }, (result: any) => {\n        this.changeSize(result.size);\n        this.options.locationName = result.locationName;\n      });\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.reDrawPosition();\n    }\n\n    public openLocationEditDialog() {\n      this.pipLocationEditDialog.show({\n        locationName: this.options.locationName,\n        locationPos: this.options.location\n      }, (newPosition) => {\n        if (newPosition) {\n          this.options.location = newPosition.location;\n          this.options.locationName = newPosition.locatioName;\n        }\n      });\n    }\n\n    private reDrawPosition() {\n      this.showPosition = false;\n      this.$timeout(() => {\n        this.showPosition = true;\n      }, 50);\n    }\n  }\n\n\n  const PositionTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: PositionTileController,\n    templateUrl: 'position_tile/PositionTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipPositionTile', PositionTile);\n}","import {\n  MenuTileService\n} from '../menu_tile/MenuTileService';\n\n{\n  const SMALL_CHART: number = 70;\n  const BIG_CHART: number = 250;\n\n  class StatisticsTileController extends MenuTileService {\n    private _$scope: angular.IScope;\n    private _$timeout: angular.ITimeoutService;\n\n    public reset: boolean = false;\n    public chartSize: number = SMALL_CHART;\n\n    constructor(\n      $scope: angular.IScope,\n      $timeout: angular.ITimeoutService\n    ) {\n      super();\n      this._$scope = $scope;\n      this._$timeout = $timeout;\n\n      if (this.options) {\n        this.menu = this.options.menu ? _.union(this.menu, this.options.menu) : this.menu;\n      }\n\n      this.setChartSize();\n    }\n\n    public changeSize(params) {\n      this.options.size.colSpan = params.sizeX;\n      this.options.size.rowSpan = params.sizeY;\n\n      this.reset = true;\n      this.setChartSize();\n      this._$timeout(() => {\n        this.reset = false;\n      }, 500);\n    }\n\n    private setChartSize() {\n      this.chartSize = this.options.size.colSpan == 2 && this.options.size.rowSpan == 2 ? BIG_CHART : SMALL_CHART;\n    }\n  }\n\n\n  const StatisticsTile: ng.IComponentOptions = {\n    bindings: {\n      options: '=pipOptions'\n    },\n    controller: StatisticsTileController,\n    templateUrl: 'statistics_tile/StatisticsTile.html'\n  }\n\n  angular\n    .module('pipDashboard')\n    .component('pipStatisticsTile', StatisticsTile);\n}","{\n  interface DraggableTileAttributes extends ng.IAttributes {\n    pipDraggableTiles: any;\n  }\n\n  function DraggableTileLink(\n    $scope: ng.IScope,\n    $elem: JQuery,\n    $attr: DraggableTileAttributes\n  ) {\n    const docFrag = document.createDocumentFragment(),\n      group = $scope.$eval($attr.pipDraggableTiles);\n\n    group.forEach(function (tile) {\n      const tpl = wrapComponent(tile.getCompiledTemplate());\n      docFrag.appendChild(tpl);\n    });\n\n    $elem.append(docFrag);\n\n    function wrapComponent(elem) {\n      return $('<div>')\n        .addClass('pip-draggable-tile')\n        .append(elem)\n        .get(0);\n    }\n  }\n\n  function DraggableTiles(): ng.IDirective {\n    return {\n      restrict: 'A',\n      link: function(\n        $scope: ng.IScope,\n        $elem: JQuery,\n        $attr: DraggableTileAttributes\n      ) {\n          new DraggableTileLink($scope, $elem, $attr);\n      }\n    };\n  }\n\n  angular\n    .module('pipDraggableTilesGroup')\n    .directive('pipDraggableTiles', DraggableTiles);\n}","export interface TilesGridConstructor {\n  new(tiles, options, columns, elem);\n}\n\nexport function ITilesGridConstructor(constructor: TilesGridConstructor, tiles, options, columns, elem): ITilesGridService {\n  return new constructor(tiles, options, columns, elem);\n}\n\nexport interface ITilesGridService {\n  tiles: any;\n  opts: any;\n  columns: any;\n  elem: any;\n  gridCells: any;\n  inline: boolean;\n  isMobileLayout: boolean;\n\n  addTile(tile): any;\n  getCellByPosition(row, col): any;\n  getCells(prevCell, rowSpan, colSpan): any;\n  getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any;\n  getCell(src, basicRow, basicCol, columns): any;\n  getAvailableCellsMobile(prevCell, rowSpan, colSpan): any;\n  getBasicRow(prevCell): any;\n  isCellFree(row, col): any;\n  getCellIndex(srcCell): any;\n  reserveCells(start, end, elem): void;\n  clearElements(): void;\n  setAvailableColumns(columns): any;\n  generateGrid(singleTileWidth ? ): any;\n  setTilesDimensions(onlyPosition, draggedTile): any;\n  calcContainerHeight(): any;\n  getTileByNode(node): any;\n  getTileByCoordinates(coords, draggedTile): any;\n  getTileIndex(tile): any;\n  swapTiles(movedTile, beforeTile): any;\n  removeTile(removeTile): any;\n  updateTileOptions(opts): any;\n}\n\nconst MOBILE_LAYOUT_COLUMNS = 2;\n\nexport class TilesGridService implements ITilesGridService {\n  public tiles: any;\n  public opts: any;\n  public columns: any;\n  public elem: any;\n  public gridCells: any = [];\n  public inline: boolean = false;\n  public isMobileLayout: boolean;\n\n  constructor(tiles, options, columns, elem) {\n    this.tiles = tiles;\n    this.opts = options;\n    this.columns = columns || 0; // available columns in a row\n    this.elem = elem;\n    this.gridCells = [];\n    this.inline = options.inline || false;\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n  }\n\n  public addTile(tile): any {\n    this.tiles.push(tile);\n    if (this.tiles.length === 1) {\n      this.generateGrid();\n    }\n\n    return this;\n  };\n\n  public getCellByPosition(row, col): any {\n    return this.gridCells[row][col];\n  };\n\n  public getCells(prevCell, rowSpan, colSpan): any {\n    if (this.isMobileLayout) {\n      return this.getAvailableCellsMobile(prevCell, rowSpan, colSpan);\n    } else {\n      return this.getAvailableCellsDesktop(prevCell, rowSpan, colSpan);\n    }\n  };\n\n  public getAvailableCellsDesktop(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicCol = prevCell && prevCell.col || 0;\n    const basicRow = this.getBasicRow(prevCell);\n\n    // Small tile\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    // Medium tile\n    if (colSpan === 2 && rowSpan === 1) {\n      const prevTileSize = prevCell && prevCell.elem.size || null;\n\n      if (!prevTileSize) {\n        leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n        rightCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 2) {\n        if (this.columns - basicCol - 2 > 0) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      } else if (prevTileSize.colSpan === 2 && prevTileSize.rowSpan === 1) {\n        if (prevCell.row % 2 === 0) {\n          leftCornerCell = this.getCellByPosition(basicRow + 1, basicCol - 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol);\n        } else {\n          if (this.columns - basicCol - 3 >= 0) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n            rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n          }\n        }\n      } else if (prevTileSize.colSpan === 1 && prevTileSize.rowSpan === 1) {\n        if (this.columns - basicCol - 3 >= 0) {\n          if (this.isCellFree(basicRow, basicCol + 1)) {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          } else {\n            leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n            rightCornerCell = this.getCellByPosition(basicRow, basicCol + 3);\n          }\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n          rightCornerCell = this.getCellByPosition(basicRow + 2, 1);\n        }\n      }\n    }\n\n    // Big tile\n    if (!prevCell && rowSpan === 2 && colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow, basicCol);\n      rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 1);\n    } else if (rowSpan === 2 && colSpan === 2) {\n      if (this.columns - basicCol - 2 > 0) {\n        if (this.isCellFree(basicRow, basicCol + 1)) {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 1);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 2);\n        } else {\n          leftCornerCell = this.getCellByPosition(basicRow, basicCol + 2);\n          rightCornerCell = this.getCellByPosition(basicRow + 1, basicCol + 3);\n        }\n      } else {\n        leftCornerCell = this.getCellByPosition(basicRow + 2, 0);\n        rightCornerCell = this.getCellByPosition(basicRow + 3, 1);\n      }\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getCell(src, basicRow, basicCol, columns): any {\n    let cell, col, row;\n\n    if (this.isMobileLayout) {\n      // mobile layout\n      for (col = basicCol; col < columns; col++) {\n        if (!src[basicRow][col].elem) {\n          cell = src[basicRow][col];\n          break;\n        }\n      }\n\n      return cell;\n    }\n\n    // desktop\n    for (col = basicCol; col < columns; col++) {\n      for (row = 0; row < 2; row++) {\n        if (!src[row + basicRow][col].elem) {\n          cell = src[row + basicRow][col];\n          break;\n        }\n      }\n\n      if (cell) {\n        return cell;\n      }\n    }\n  };\n\n  public getAvailableCellsMobile(prevCell, rowSpan, colSpan): any {\n    let leftCornerCell;\n    let rightCornerCell;\n    const basicRow = this.getBasicRow(prevCell);\n    const basicCol = prevCell && prevCell.col || 0;\n\n\n    if (colSpan === 1 && rowSpan === 1) {\n      const gridCopy = this.gridCells.slice();\n\n      if (!prevCell) {\n        leftCornerCell = gridCopy[0][0];\n      } else {\n        leftCornerCell = this.getCell(gridCopy, basicRow, basicCol, this.columns);\n\n        if (!leftCornerCell) {\n          const rowShift = this.isMobileLayout ? 1 : 2;\n          leftCornerCell = this.getCell(gridCopy, basicRow + rowShift, 0, this.columns);\n        }\n      }\n    }\n\n    if (!prevCell) {\n      leftCornerCell = this.getCellByPosition(basicRow, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan - 1, 1);\n    } else if (colSpan === 2) {\n      leftCornerCell = this.getCellByPosition(basicRow + 1, 0);\n      rightCornerCell = this.getCellByPosition(basicRow + rowSpan, 1);\n    }\n\n    return {\n      start: leftCornerCell,\n      end: rightCornerCell\n    };\n  };\n\n  public getBasicRow(prevCell): any {\n    let basicRow;\n\n    if (this.isMobileLayout) {\n      if (prevCell) {\n        basicRow = prevCell && prevCell.row || 0;\n      } else {\n        basicRow = 0;\n      }\n    } else {\n      if (prevCell) {\n        basicRow = prevCell.row % 2 === 0 ? prevCell.row : prevCell.row - 1;\n      } else {\n        basicRow = 0;\n      }\n    }\n\n    return basicRow;\n  };\n\n  public isCellFree(row, col): any {\n    return !this.gridCells[row][col].elem;\n  };\n\n  public getCellIndex(srcCell): any {\n    const self = this;\n    let index;\n\n    this.gridCells.forEach((row, rowIndex) => {\n      index = _.findIndex(self.gridCells[rowIndex], (cell) => {\n        return cell === srcCell;\n      });\n\n      if (index !== -1) {\n        return;\n      }\n    });\n\n    return index !== -1 ? index : 0;\n  };\n\n  public reserveCells(start, end, elem) {\n    this.gridCells.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell.row >= start.row && cell.row <= end.row &&\n          cell.col >= start.col && cell.col <= end.col) {\n          cell.elem = elem;\n        }\n      });\n    });\n  };\n\n  public clearElements() {\n    this.gridCells.forEach((row) => {\n      row.forEach((tile) => {\n        tile.elem = null;\n      });\n    });\n  };\n\n  public setAvailableColumns(columns): any {\n    this.isMobileLayout = columns === MOBILE_LAYOUT_COLUMNS;\n    this.columns = columns;\n\n    return this;\n  };\n\n  public generateGrid(singleTileWidth ? ): any {\n    const self = this,\n      tileWidth = singleTileWidth || this.opts.tileWidth,\n      offset = document.querySelector('.pip-draggable-group-title').getBoundingClientRect();\n    let colsInRow = 0,\n      rows = 0,\n      gridInRow = [];\n\n    this.gridCells = [];\n\n    this.tiles.forEach((tile, index, srcTiles) => {\n      const tileSize = tile.getSize();\n\n      generateCells(tileSize.colSpan);\n\n      if (srcTiles.length === index + 1) {\n        if (colsInRow < self.columns) {\n          generateCells(self.columns - colsInRow);\n        }\n\n        // Generate more cells for extends tile size to big\n        if (self.tiles.length * 2 > self.gridCells.length) {\n          Array.apply(null, Array(self.tiles.length * 2 - self.gridCells.length)).forEach(() => {\n            generateCells(self.columns);\n          });\n        }\n      }\n    });\n\n    function generateCells(newCellCount) {\n      Array.apply(null, Array(newCellCount)).forEach(() => {\n        if (self.columns < colsInRow + 1) {\n          rows++;\n          colsInRow = 0;\n\n          self.gridCells.push(gridInRow);\n          gridInRow = [];\n        }\n\n        let top = rows * self.opts.tileHeight + (rows ? rows * self.opts.gutter : 0) + offset.height;\n        let left = colsInRow * tileWidth + (colsInRow ? colsInRow * self.opts.gutter : 0);\n\n        // Describe grid cell size through block corners coordinates\n        gridInRow.push({\n          top: top,\n          left: left,\n          bottom: top + self.opts.tileHeight,\n          right: left + tileWidth,\n          row: rows,\n          col: colsInRow\n        });\n\n        colsInRow++;\n      });\n    }\n\n    return this;\n  };\n\n  public setTilesDimensions(onlyPosition, draggedTile): any {\n    const self = this;\n    let currIndex = 0;\n    let prevCell;\n\n    if (onlyPosition) {\n      self.clearElements();\n    }\n\n    this.tiles.forEach((tile) => {\n      const tileSize = tile.getSize();\n      let startCell;\n      let width;\n      let height;\n      let cells;\n\n      tile.updateElem('.pip-draggable-tile');\n      if (tileSize.colSpan === 1) {\n        if (prevCell && prevCell.elem.size.colSpan === 2 && prevCell.elem.size.rowSpan === 1) {\n          startCell = self.getCells(self.getCellByPosition(prevCell.row, prevCell.col - 1), 1, 1).start;\n        } else {\n          startCell = self.getCells(prevCell, 1, 1).start;\n        }\n\n\n        if (!onlyPosition) {\n          width = startCell.right - startCell.left;\n          height = startCell.bottom - startCell.top;\n        }\n\n        prevCell = startCell;\n\n        self.reserveCells(startCell, startCell, tile);\n\n        currIndex++;\n      } else if (tileSize.colSpan === 2) {\n        cells = self.getCells(prevCell, tileSize.rowSpan, tileSize.colSpan);\n        startCell = cells.start;\n\n        if (!onlyPosition) {\n          width = cells.end.right - cells.start.left;\n          height = cells.end.bottom - cells.start.top;\n        }\n\n        prevCell = cells.end;\n\n        self.reserveCells(cells.start, cells.end, tile);\n\n        currIndex += 2;\n      }\n\n      // Render preview\n      // while tiles from group is dragged\n      if (draggedTile === tile) {\n        tile.setPreviewPosition({\n          left: startCell.left,\n          top: startCell.top\n        });\n\n        return;\n      }\n\n      if (!onlyPosition) {\n        tile.setSize(width, height);\n      }\n\n      tile.setPosition(startCell.left, startCell.top);\n    });\n\n    return this;\n  };\n\n  public calcContainerHeight(): any {\n    let maxHeightSize, maxWidthSize;\n\n    if (!this.tiles.length) {\n      return this;\n    }\n\n    maxHeightSize = _.maxBy(this.tiles, (tile) => {\n      const tileSize = tile['getSize']();\n      return tileSize.top + tileSize.height;\n    })['getSize']();\n\n    this.elem.style.height = maxHeightSize.top + maxHeightSize.height + 'px';\n\n    if (this.inline) {\n      maxWidthSize = _.maxBy(this.tiles, (tile) => {\n        const tileSize = tile['getSize']();\n        return tileSize.left + tileSize.width;\n      })['getSize']();\n\n      this.elem.style.width = maxWidthSize.left + maxWidthSize.width + 'px';\n    }\n\n    return this;\n  };\n\n  public getTileByNode(node): any {\n    const foundTile = this.tiles.filter((tile) => {\n      return node === tile.getElem();\n    });\n\n    return foundTile.length ? foundTile[0] : null;\n  };\n\n  public getTileByCoordinates(coords, draggedTile): any {\n    return this.tiles\n      .filter((tile) => {\n        const tileSize = tile.getSize();\n\n        return tile !== draggedTile &&\n          tileSize.left <= coords.left && coords.left <= (tileSize.left + tileSize.width) &&\n          tileSize.top <= coords.top && coords.top <= (tileSize.top + tileSize.height);\n      })[0] || null;\n  };\n\n  public getTileIndex(tile): any {\n    return _.findIndex(this.tiles, tile);\n  };\n\n  public swapTiles(movedTile, beforeTile): any {\n    const movedTileIndex = _.findIndex(this.tiles, movedTile);\n    const beforeTileIndex = _.findIndex(this.tiles, beforeTile);\n\n    this.tiles.splice(movedTileIndex, 1);\n    this.tiles.splice(beforeTileIndex, 0, movedTile);\n\n    return this;\n  };\n\n  public removeTile(removeTile): any {\n    let droppedTile;\n\n    this.tiles.forEach((tile, index, tiles) => {\n      if (tile === removeTile) {\n        droppedTile = tiles.splice(index, 1)[0];\n        return false;\n      }\n    });\n\n    return droppedTile;\n  };\n\n  public updateTileOptions(opts): any {\n    const index = _.findIndex(this.tiles, (tile) => {\n      return tile['getOptions']() === opts;\n    });\n\n    if (index !== -1) {\n      this.tiles[index].setOptions(opts);\n      return true;\n    }\n\n    return false;\n  };\n}\n\n\nangular\n  .module('pipDraggableTilesGroup')\n  .service('pipTilesGrid', function () {\n    return function (tiles, options, columns, elem) {\n      const newGrid = new TilesGridService(tiles, options, columns, elem);\n\n      return newGrid;\n    }\n  });","angular\n    .module('pipDraggableTilesGroup', []);\n\nimport './TileGroupDirective';\nimport './TileGroupService';","export interface ITileTemplateService {\n    getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any;\n    setImageMarginCSS($element, image): void;\n} \n\n{\n    class tileTemplateService implements ITileTemplateService {\n        private _$interpolate: angular.IInterpolateService;\n        private _$compile: angular.ICompileService;\n        private _$templateRequest: angular.ITemplateRequestService;\n\n        constructor(\n            $interpolate: angular.IInterpolateService,\n            $compile: angular.ICompileService,\n            $templateRequest: angular.ITemplateRequestService\n        ) {\n            this._$interpolate = $interpolate;\n            this._$compile = $compile;\n            this._$templateRequest = $templateRequest;\n        }\n\n        public getTemplate(source, tpl ? , tileScope ? , strictCompile ? ): any {\n            const {\n                template,\n                templateUrl,\n                type\n            } = source;\n            let result;\n\n            if (type) {\n                const interpolated = tpl ? this._$interpolate(tpl)(source) : this._$interpolate(template)(source);\n                return strictCompile == true ?\n                    (tileScope ? this._$compile(interpolated)(tileScope) : this._$compile(interpolated)) :\n                    interpolated;\n            }\n\n            if (template) {\n                return tileScope ? this._$compile(template)(tileScope) : this._$compile(template);\n            }\n\n            if (templateUrl) {\n                this._$templateRequest(templateUrl, false).then((html) => {\n                    result = tileScope ? this._$compile(html)(tileScope) : this._$compile(html);\n                });\n            }\n\n            return result;\n        }\n\n        public setImageMarginCSS($element, image) {\n            let\n                containerWidth = $element.width ? $element.width() : $element.clientWidth,\n                containerHeight = $element.height ? $element.height() : $element.clientHeight,\n                imageWidth = (image[0] ? image[0].naturalWidth : image.naturalWidth) || image.width,\n                imageHeight = (image[0] ? image[0].naturalHeight : image.naturalWidth) || image.height,\n                margin = 0,\n                cssParams = {};\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px'; //'100%';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px'; //'100%';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px'; //'100%';\n                cssParams['width'] = '' + containerWidth + 'px'; //'100%';\n                cssParams['margin-left'] = '';\n            }\n\n            $(image).css(cssParams);\n        }\n    }\n\n    // image load directive TODO: remove to pipImageUtils\n    const ImageLoad = function ImageLoad($parse: ng.IParseService): ng.IDirective {\n        return {\n            restrict: 'A',\n            link: function (scope: ng.IScope, element: JQuery, attrs: any) {\n                const callback = $parse(attrs.pipImageLoad);\n\n                element.bind('load', (event) => {\n                    callback(scope, {\n                        $event: event\n                    });\n                });\n            }\n        }\n    }\n\n    angular\n        .module('pipDashboard')\n        .service('pipTileTemplate', tileTemplateService)\n        .directive('pipImageLoad', ImageLoad);\n}","(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('add_tile_dialog/AddTile.html',\n    '<md-dialog class=\"pip-dialog pip-add-component-dialog\"><md-dialog-content class=\"layout-column\"><div class=\"theme-divider p16 flex-auto\"><h3 class=\"hide-xs m0 bm16 theme-text-primary\" hide-xs=\"\">{{ \\'DASHBOARD_ADD_TILE_DIALOG_TITLE\\' | translate }}<md-input-container class=\"layout-row flex-auto m0 tm16\"><md-select class=\"flex-auto m0 theme-text-primary\" ng-model=\"dialogCtrl.activeGroupIndex\" placeholder=\"{{ \\'DASHBOARD_ADD_TILE_DIALOG_CREATE_NEW_GROUP\\' | translate }}\" aria-label=\"Group\"><md-option ng-value=\"$index\" ng-repeat=\"group in dialogCtrl.groups\">{{ group }}</md-option></md-select></md-input-container></h3></div><div class=\"pip-body pip-scroll p0 flex-auto\"><p class=\"md-body-1 theme-text-secondary m0 lp16 rp16\">{{ \\'DASHBOARD_ADD_TILE_DIALOG_USE_HOT_KEYS\\' | translate }}</p><md-list ng-init=\"groupIndex = $index\" ng-repeat=\"group in dialogCtrl.defaultWidgets\"><md-list-item class=\"layout-row pip-list-item lp16 rp16\" ng-repeat=\"item in group\"><div class=\"icon-holder flex-none\"><md-icon md-svg-icon=\"icons:{{:: item.icon }}\"></md-icon><div class=\"pip-badge theme-badge md-warn\" ng-if=\"item.amount\"><span>{{ item.amount }}</span></div></div><span class=\"flex-auto lm24 theme-text-primary\">{{:: item.title }}</span><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.encrease(groupIndex, $index)\" aria-label=\"Encrease\"><md-icon md-svg-icon=\"icons:plus-circle\"></md-icon></md-button><md-button class=\"md-icon-button flex-none\" ng-click=\"dialogCtrl.decrease(groupIndex, $index)\" aria-label=\"Decrease\"><md-icon md-svg-icon=\"icons:minus-circle\"></md-icon></md-button></md-list-item><md-divider class=\"lm72 tm8 bm8\" ng-if=\"groupIndex !== (dialogCtrl.defaultWidgets.length - 1)\"></md-divider></md-list></div></md-dialog-content><md-dialog-actions class=\"flex-none layout-align-end-center theme-divider divider-top theme-text-primary\"><md-button ng-click=\"dialogCtrl.cancel()\" aria-label=\"Cancel\">{{ \\'CANCEL\\' | translate }}</md-button><md-button ng-click=\"dialogCtrl.add()\" ng-disabled=\"dialogCtrl.totalWidgets === 0\" arial-label=\"Add\">{{ \\'ADD\\' | translate }}</md-button></md-dialog-actions></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('calendar_tile/CalendarTile.html',\n    '<div class=\"widget-box pip-calendar-widget {{ $ctrl.color }} layout-column layout-fill tp0\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-end-center flex-none\"><pip-tile-menu></pip-tile-menu></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"date lm24 rm12\">{{ $ctrl.options.date.getDate() }}</span><div class=\"flex-auto layout-column\"><span class=\"weekday md-headline\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div><div class=\"widget-content flex-auto layout-column layout-align-space-around-center\" ng-hide=\"$ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1\"><span class=\"weekday md-headline\" ng-hide=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"weekday\" ng-show=\"$ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1\">{{ $ctrl.options.date | formatLongDayOfWeek }}</span> <span class=\"date lm12 rm12\">{{ $ctrl.options.date.getDate() }}</span> <span class=\"month-year md-headline\">{{ $ctrl.options.date | formatLongMonth }} {{ $ctrl.options.date | formatYear }}</span></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('calendar_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch bm16\">Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch\"></md-datepicker></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('config_tile_dialog/ConfigDialog.html',\n    '<md-dialog class=\"pip-dialog pip-tile-config-dialog {{ vm.params.dialogClass }}\" width=\"400\" md-theme=\"{{vm.theme}}\"><pip-tile-config-extend-component class=\"layout-column\" pip-dialog-scope=\"vm\" pip-extension-url=\"vm.extensionUrl\" pip-apply=\"vm.onApply(updatedData)\"></pip-tile-config-extend-component></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('config_tile_dialog/ConfigDialogExtendComponent.html',\n    '<h3 class=\"tm0 flex-none\">{{ \\'DASHBOARD_TILE_CONFIG_DIALOG_TITLE\\' | translate }}</h3><div class=\"pip-body pip-scroll p16 bp0 flex-auto\"><pip-extension-point></pip-extension-point><pip-toggle-buttons class=\"bm16\" ng-if=\"!$ctrl.hideSizes\" pip-buttons=\"$ctrl.sizes\" ng-model=\"$ctrl.sizeId\"></pip-toggle-buttons><pip-color-picker ng-if=\"!$ctrl.hideColors\" pip-colors=\"$ctrl.colors\" ng-model=\"$ctrl.color\"></pip-color-picker></div><div class=\"pip-footer flex-none\"><div><md-button class=\"md-accent\" ng-click=\"$ctrl.onCancel()\">{{ \\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\">{{ \\'APPLY\\' | translate }}</md-button></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dashboard/Dashboard.html',\n    '<md-button class=\"md-accent md-raised md-fab layout-column layout-align-center-center\" aria-label=\"Add component\" ng-click=\"$ctrl.addComponent()\"><md-icon md-svg-icon=\"icons:plus\" class=\"md-headline centered-add-icon\"></md-icon></md-button><div class=\"pip-draggable-grid-holder\"><pip-draggable-grid pip-tiles-templates=\"$ctrl.groupedWidgets\" pip-tiles-context=\"$ctrl.widgetsContext\" pip-draggable-grid=\"$ctrl.draggableGridOptions\" pip-group-menu-actions=\"$ctrl.groupMenuActions\"></pip-draggable-grid><md-progress-circular md-mode=\"indeterminate\" class=\"progress-ring\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('draggable/Draggable.html',\n    '<div class=\"pip-draggable-holder\"><div class=\"pip-draggable-group\" ng-repeat=\"group in $ctrl.groups\" data-group-id=\"{{ $index }}\" pip-draggable-tiles=\"group.source\"><div class=\"pip-draggable-group-title layout-row layout-align-start-center\"><div class=\"title-input-container\" ng-click=\"$ctrl.onTitleClick(group, $event)\"><input ng-if=\"group.editingName\" ng-blur=\"$ctrl.onBlurTitleInput(group)\" ng-keypress=\"$ctrl.onKyepressTitleInput(group, $event)\" ng-model=\"group.title\"><div class=\"text-overflow flex-none\" ng-if=\"!group.editingName\">{{ group.title }}</div></div><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-show=\"group.editingName\" ng-click=\"$ctrl.cancelEditing(group)\" aria-label=\"Cancel\"><md-icon md-svg-icon=\"icons:cross\"></md-icon></md-button><md-menu class=\"flex-none layout-column\" md-position-mode=\"target-right target\" ng-show=\"!group.editingName\"><md-button class=\"md-icon-button flex-none layout-align-center-center\" ng-click=\"$mdOpenMenu(); groupId = $index\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:dots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"action in $ctrl.groupMenuActions\"><md-button ng-click=\"action.callback(groupId)\">{{ action.title }}</md-button></md-menu-item></md-menu-content></md-menu></div></div><div class=\"pip-draggable-group fict-group layout-align-center-center layout-column tm16\"><div class=\"fict-group-text-container\"><md-icon md-svg-icon=\"icons:plus\"></md-icon>{{ \\'DROP_TO_CREATE_NEW_GROUP\\' | translate }}</div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('event_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container>Date:<md-datepicker ng-model=\"$ctrl.date\" class=\"w-stretch bm8\"></md-datepicker><md-input-container class=\"w-stretch\"><label>Description:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container>Backdrop\\'s opacity:<md-slider aria-label=\"opacity\" type=\"number\" min=\"0.1\" max=\"0.9\" step=\"0.01\" ng-model=\"$ctrl.opacity\" ng-change=\"$ctrl.onOpacitytest($ctrl.opacity)\"></md-slider></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('event_tile/EventTile.html',\n    '<div class=\"widget-box pip-event-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><img ng-if=\"$ctrl.options.image\" ng-src=\"{{$ctrl.options.image}}\" alt=\"{{$ctrl.options.title || $ctrl.options.name}}\"><div class=\"text-backdrop\" style=\"background-color: rgba(0, 0, 0, {{ $ctrl.opacity }})\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"text-container flex-auto pip-scroll\"><p class=\"date flex-none\" ng-if=\"$ctrl.options.date\">{{ $ctrl.options.date | formatShortDate }}</p><p class=\"text flex-auto\">{{ $ctrl.options.text || $ctrl.options.description }}</p></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu_tile/MenuTile.html',\n    '<md-menu class=\"widget-menu\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button flex-none\" ng-click=\"$mdOpenMenu()\" aria-label=\"Menu\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.menu\"><md-button ng-if=\"!item.submenu\" ng-click=\"$ctrl.callAction(item.action, item.params, item)\">{{:: item.title }}</md-button><md-menu ng-if=\"item.submenu\"><md-button ng-click=\"$ctrl.callAction(item.action)\">{{:: item.title }}</md-button><md-menu-content><md-menu-item ng-repeat=\"subitem in item.submenu\"><md-button ng-click=\"$ctrl.callAction(subitem.action, subitem.params, subitem)\">{{:: subitem.title }}</md-button></md-menu-item></md-menu-content></md-menu></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('note_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Title:</label> <input type=\"text\" ng-model=\"$ctrl.title\"></md-input-container><md-input-container class=\"w-stretch tm0\"><label>Text:</label> <textarea type=\"text\" ng-model=\"$ctrl.text\">\\n' +\n    '    </textarea></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('note_tile/NoteTile.html',\n    '<div class=\"widget-box pip-notes-widget {{ $ctrl.color }} layout-column\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\" ng-if=\"$ctrl.options.title || $ctrl.options.name\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span></div><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu><div class=\"text-container flex-auto pip-scroll\"><p>{{ $ctrl.options.text }}</p></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('picture_slider_tile/PictureSliderTile.html',\n    '<div class=\"widget-box pip-picture-slider-widget {{ $ctrl.color }} layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\"><span class=\"flex text-overflow\">{{ $ctrl.options.title }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"slider-container\"><div pip-image-slider=\"\" pip-animation-type=\"\\'fading\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'fading\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div><div pip-image-slider=\"\" pip-animation-type=\"\\'carousel\\'\" pip-animation-interval=\"$ctrl.animationInterval\" ng-if=\"$ctrl.animationType == \\'carousel\\'\"><div class=\"pip-animation-block\" ng-repeat=\"slide in $ctrl.options.slides\"><img ng-src=\"{{ slide.image }}\" alt=\"{{ slide.image }}\" pip-image-load=\"$ctrl.onImageLoad($event)\"><p class=\"slide-text\" ng-if=\"slide.text\">{{ slide.text }}</p></div></div></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('position_tile/ConfigDialogExtension.html',\n    '<div class=\"w-stretch\"><md-input-container class=\"w-stretch bm0\"><label>Location name:</label> <input type=\"text\" ng-model=\"$ctrl.locationName\"></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('position_tile/PositionTile.html',\n    '<div class=\"pip-position-widget widget-box p0 layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\" index=\"{{ $ctrl.index }}\" group=\"{{ $ctrl.group }}\"><div class=\"position-absolute-right-top\" ng-if=\"!$ctrl.options.locationName\"><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><div class=\"widget-heading lp16 rp8 layout-row layout-align-end-center flex-none\" ng-if=\"$ctrl.options.locationName\"><span class=\"flex text-overflow\">{{ $ctrl.options.locationName }}</span><pip-tile-menu ng-if=\"!$ctrl.options.hideMenu\"></pip-tile-menu></div><pip-location-map class=\"flex\" ng-if=\"$ctrl.showPosition\" pip-stretch=\"true\" pip-rebind=\"true\" pip-location-pos=\"$ctrl.options.location\"></pip-location-map></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDashboard.Templates');\n} catch (e) {\n  module = angular.module('pipDashboard.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('statistics_tile/StatisticsTile.html',\n    '<div class=\"widget-box pip-statistics-widget layout-column layout-fill\" ng-class=\"{ small: $ctrl.options.size.colSpan == 1 && $ctrl.options.size.rowSpan == 1, medium: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 1, big: $ctrl.options.size.colSpan == 2 && $ctrl.options.size.rowSpan == 2 }\"><div class=\"widget-heading layout-row layout-align-start-center flex-none\"><span class=\"widget-title flex-auto text-overflow\">{{ $ctrl.options.title || $ctrl.options.name }}</span><pip-tile-menu></pip-tile-menu></div><div class=\"widget-content flex-auto layout-row layout-align-center-center\" ng-if=\"$ctrl.options.series && !$ctrl.reset\"><pip-pie-chart pip-series=\"$ctrl.options.series\" ng-if=\"!$ctrl.options.chartType || $ctrl.options.chartType == \\'pie\\'\" pip-donut=\"true\" pip-pie-size=\"$ctrl.chartSize\" pip-show-total=\"true\" pip-centered=\"true\"></pip-pie-chart></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dashboard-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYWRkX3RpbGVfZGlhbG9nL0FkZFRpbGVEaWFsb2dDb250cm9sbGVyLnRzIiwic3JjL2FkZF90aWxlX2RpYWxvZy9BZGRUaWxlUHJvdmlkZXIudHMiLCJzcmMvYWRkX3RpbGVfZGlhbG9nL2luZGV4LnRzIiwic3JjL2NhbGVuZGFyX3RpbGUvQ2FsZW5kYXJUaWxlLnRzIiwic3JjL2NvbW1vbl90aWxlL1RpbGUudHMiLCJzcmMvY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ0NvbnRyb2xsZXIudHMiLCJzcmMvY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ0V4dGVuZENvbXBvbmVudC50cyIsInNyYy9jb25maWdfdGlsZV9kaWFsb2cvQ29uZmlnRGlhbG9nU2VydmljZS50cyIsInNyYy9jb25maWdfdGlsZV9kaWFsb2cvaW5kZXgudHMiLCJzcmMvZGFzaGJvYXJkL0Rhc2hib2FyZC50cyIsInNyYy9kcmFnZ2FibGUvRHJhZ2dhYmxlLnRzIiwic3JjL2RyYWdnYWJsZS9EcmFnZ2FibGVUaWxlU2VydmljZS50cyIsInNyYy9kcmFnZ2FibGUvaW5kZXgudHMiLCJzcmMvZXZlbnRfdGlsZS9FdmVudFRpbGUudHMiLCJzcmMvaW5kZXgudHMiLCJzcmMvbWVudV90aWxlL01lbnVUaWxlRGlyZWN0aXZlLnRzIiwic3JjL21lbnVfdGlsZS9NZW51VGlsZVNlcnZpY2UudHMiLCJzcmMvbWVudV90aWxlL2luZGV4LnRzIiwic3JjL25vdGVfdGlsZS9Ob3RlVGlsZS50cyIsInNyYy9waWN0dXJlX3NsaWRlcl90aWxlL1BpY3R1cmVTbGlkZXJUaWxlLnRzIiwic3JjL3Bvc2l0aW9uX3RpbGUvUG9zaXRpb25UaWxlLnRzIiwic3JjL3N0YXRpc3RpY3NfdGlsZS9TdGF0aXN0aWNzVGlsZS50cyIsInNyYy90aWxlX2dyb3VwL1RpbGVHcm91cERpcmVjdGl2ZS50cyIsInNyYy90aWxlX2dyb3VwL1RpbGVHcm91cFNlcnZpY2UudHMiLCJzcmMvdGlsZV9ncm91cC9pbmRleC50cyIsInNyYy91dGlsaXR5L1RpbGVUZW1wbGF0ZVV0aWxpdHkudHMiLCJ0ZW1wL3BpcC13ZWJ1aS1kYXNoYm9hcmQtaHRtbC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0lBQUE7SUFLQSxDQUFDO0lBQUQsb0JBQUM7QUFBRCxDQUxBLEFBS0MsSUFBQTtBQUxZLHNDQUFhO0FBTzFCO0lBS0ksaUNBQ0ksTUFBVyxFQUNKLGdCQUF3QixFQUMvQixVQUE2QixFQUN0QixTQUEwQztRQUYxQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQVE7UUFFeEIsY0FBUyxHQUFULFNBQVMsQ0FBaUM7UUFOOUMsZUFBVSxHQUFXLENBQUMsQ0FBQztRQVExQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVUsS0FBSztZQUN2QyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLHFDQUFHLEdBQVY7UUFDSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztZQUNoQixVQUFVLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtZQUNqQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVk7U0FDN0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUFBLENBQUM7SUFFSyx3Q0FBTSxHQUFiO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBQUEsQ0FBQztJQUVLLDBDQUFRLEdBQWYsVUFBZ0IsVUFBa0IsRUFBRSxXQUFtQjtRQUNuRCxJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzFELE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUFBLENBQUM7SUFFSywwQ0FBUSxHQUFmLFVBQWdCLFVBQWtCLEVBQUUsV0FBbUI7UUFDbkQsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMxRCxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUFBLENBQUM7SUFDTiw4QkFBQztBQUFELENBeENBLEFBd0NDLElBQUE7QUF4Q1ksMERBQXVCOzs7OztBQ1BwQyxxRUFHbUM7QUFVbkMsQ0FBQztJQUNDLElBQU0sZUFBZSxHQUFHLFVBQVMsU0FBbUM7UUFDbEUsSUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDMUcsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUNYLFlBQWEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFO2dCQUN4QywrQkFBK0IsRUFBRSxlQUFlO2dCQUNoRCxzQ0FBc0MsRUFBRSxpR0FBaUc7Z0JBQ3pJLDBDQUEwQyxFQUFFLGtCQUFrQjthQUMvRCxDQUFDLENBQUM7WUFDRyxZQUFhLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRTtnQkFDeEMsK0JBQStCLEVBQUUsb0JBQW9CO2dCQUNyRCxzQ0FBc0MsRUFBRSxzSEFBc0g7Z0JBQzlKLDBDQUEwQyxFQUFFLHNCQUFzQjthQUNuRSxDQUFDLENBQUM7UUFDTCxDQUFDO0lBQ0gsQ0FBQyxDQUFBO0lBRUQ7UUFDRSxnQ0FDVSxVQUE2QixFQUM3QixTQUEwQztZQUQxQyxlQUFVLEdBQVYsVUFBVSxDQUFtQjtZQUM3QixjQUFTLEdBQVQsU0FBUyxDQUFpQztRQUNqRCxDQUFDO1FBRUcscUNBQUksR0FBWCxVQUFZLE1BQU0sRUFBRSxnQkFBZ0I7WUFBcEMsaUJBb0JDO1lBbkJDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUztpQkFDbEIsSUFBSSxDQUFDO2dCQUNKLFdBQVcsRUFBRSw4QkFBOEI7Z0JBQzNDLGdCQUFnQixFQUFFLElBQUk7Z0JBQ3RCLFVBQVUsRUFBRSxpREFBdUI7Z0JBQ25DLFlBQVksRUFBRSxZQUFZO2dCQUMxQixtQkFBbUIsRUFBRSxJQUFJO2dCQUN6QixPQUFPLEVBQUU7b0JBQ1AsTUFBTSxFQUFFO3dCQUNOLE1BQU0sQ0FBQyxNQUFNLENBQUM7b0JBQ2hCLENBQUM7b0JBQ0QsZ0JBQWdCLEVBQUU7d0JBQ2hCLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDMUIsQ0FBQztvQkFDRCxVQUFVLEVBQUU7d0JBQ1YsTUFBTSxDQUFPLEtBQUksQ0FBQyxVQUFXLENBQUM7b0JBQ2hDLENBQUM7aUJBQ0Y7YUFDRixDQUFDLENBQUM7UUFDUCxDQUFDO1FBQUEsQ0FBQztRQUNKLDZCQUFDO0lBQUQsQ0EzQkEsQUEyQkMsSUFBQTtJQUVEO1FBSUU7WUFGUSxnQkFBVyxHQUFzQixJQUFJLENBQUM7WUFJdkMscUJBQWdCLEdBQUcsVUFBVSxJQUF1QjtnQkFDekQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7WUFDMUIsQ0FBQyxDQUFDO1FBSmEsQ0FBQztRQU1ULG9DQUFJLEdBQVgsVUFBWSxTQUEwQztZQUNwRCxVQUFVLENBQUM7WUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztnQkFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLHNCQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFeEUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQztRQUNILDRCQUFDO0lBQUQsQ0FsQkEsQUFrQkMsSUFBQTtJQUVELE9BQU87U0FDSixNQUFNLENBQUMsMkJBQTJCLENBQUM7U0FDbkMsTUFBTSxDQUFDLGVBQWUsQ0FBQztTQUN2QixRQUFRLENBQUMsa0JBQWtCLEVBQUUscUJBQXFCLENBQUMsQ0FBQztBQUN6RCxDQUFDOzs7OztBQ25GRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLDJCQUEyQixFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUV6RCxxQ0FBbUM7QUFDbkMsNkJBQTJCOzs7Ozs7Ozs7Ozs7Ozs7QUNKM0IsZ0VBRXNDO0FBS3RDLENBQUM7SUFDQztRQUFxQywwQ0FBZTtRQUNsRCxnQ0FDVSwwQkFBOEM7WUFEeEQsWUFHRSxpQkFBTyxTQWFSO1lBZlMsZ0NBQTBCLEdBQTFCLDBCQUEwQixDQUFvQjtZQUl0RCxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDakIsS0FBSSxDQUFDLElBQUksR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNsRixLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztvQkFDYixLQUFLLEVBQUUsYUFBYTtvQkFDcEIsS0FBSyxFQUFFO3dCQUNMLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztvQkFDdkIsQ0FBQztpQkFDRixDQUFDLENBQUM7Z0JBQ0gsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQztnQkFDcEQsS0FBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUM7WUFDNUMsQ0FBQzs7UUFDSCxDQUFDO1FBRU8sOENBQWEsR0FBckI7WUFBQSxpQkFnQkM7WUFmQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsSUFBSSxDQUFDO2dCQUNuQyxXQUFXLEVBQUUscUJBQXFCO2dCQUNsQyxNQUFNLEVBQUU7b0JBQ04sS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO29CQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJO29CQUN2QixJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJO2lCQUN4QjtnQkFDRCxZQUFZLEVBQUUsMENBQTBDO2FBQ3pELEVBQUUsVUFBQyxNQUFXO2dCQUNiLEtBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUU3QixLQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQzFCLEtBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQ2xDLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDbEMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUgsNkJBQUM7SUFBRCxDQXJDQSxBQXFDQyxDQXJDb0MsaUNBQWUsR0FxQ25EO0lBRUQsSUFBTSxZQUFZLEdBQXlCO1FBQ3pDLFFBQVEsRUFBRTtZQUNSLE9BQU8sRUFBRSxhQUFhO1NBQ3ZCO1FBQ0QsVUFBVSxFQUFFLHNCQUFzQjtRQUNsQyxXQUFXLEVBQUUsaUNBQWlDO0tBQy9DLENBQUE7SUFFRCxPQUFPO1NBQ0osTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixTQUFTLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFFaEQsQ0FBQzs7Ozs7QUNyREQ7SUFLSTtJQUFnQixDQUFDO0lBQ3JCLG9CQUFDO0FBQUQsQ0FOQSxBQU1DLElBQUE7QUFOWSxzQ0FBYTs7Ozs7QUNMMUI7SUFBQTtJQUVBLENBQUM7SUFBRCxpQkFBQztBQUFELENBRkEsQUFFQztBQURVLGNBQUcsR0FBYSxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUd6RTtJQUFBO0lBY0EsQ0FBQztJQUFELGdCQUFDO0FBQUQsQ0FkQSxBQWNDO0FBYlUsYUFBRyxHQUFRLENBQUM7UUFDWCxJQUFJLEVBQUUseUNBQXlDO1FBQy9DLEVBQUUsRUFBRSxJQUFJO0tBQ1g7SUFDRDtRQUNJLElBQUksRUFBRSx3Q0FBd0M7UUFDOUMsRUFBRSxFQUFFLElBQUk7S0FDWDtJQUNEO1FBQ0ksSUFBSSxFQUFFLHlDQUF5QztRQUMvQyxFQUFFLEVBQUUsSUFBSTtLQUNYO0NBQ0osQ0FBQztBQUdOO0lBTUksb0NBQ1csTUFBTSxFQUNOLFlBQVksRUFDWixTQUEwQztRQUVqRCxVQUFVLENBQUM7UUFMZixpQkFhQztRQVpVLFdBQU0sR0FBTixNQUFNLENBQUE7UUFDTixpQkFBWSxHQUFaLFlBQVksQ0FBQTtRQUNaLGNBQVMsR0FBVCxTQUFTLENBQWlDO1FBUjlDLFdBQU0sR0FBYSxVQUFVLENBQUMsR0FBRyxDQUFDO1FBQ2xDLFVBQUssR0FBUSxTQUFTLENBQUMsR0FBRyxDQUFDO1FBQzNCLFdBQU0sR0FBVyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQVV4QyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUV2RSxJQUFJLENBQUMsUUFBUSxHQUFHO1lBQ1osS0FBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM1QixDQUFDLENBQUE7SUFDTCxDQUFDO0lBRU0sNENBQU8sR0FBZCxVQUFlLFdBQVc7UUFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0ExQkEsQUEwQkMsSUFBQTtBQTFCWSxnRUFBMEI7OztBQ3JCdkMsQ0FBQztJQVNHLElBQU0saUNBQWlDLEdBQXVDO1FBQzFFLGVBQWUsRUFBRSxHQUFHO1FBQ3BCLGNBQWMsRUFBRSxHQUFHO1FBQ25CLFFBQVEsRUFBRSxHQUFHO0tBQ2hCLENBQUE7SUFFRDtRQUFBO1FBT0EsQ0FBQztRQUFELHVDQUFDO0lBQUQsQ0FQQSxBQU9DLElBQUE7SUFNRDtRQUtJLDZDQUNZLGdCQUFpRCxFQUNqRCxRQUFpQyxFQUNqQyxNQUFzQixFQUN0QixRQUFnQixFQUNoQixNQUE0QztZQUo1QyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWlDO1lBQ2pELGFBQVEsR0FBUixRQUFRLENBQXlCO1lBQ2pDLFdBQU0sR0FBTixNQUFNLENBQWdCO1lBQ3RCLGFBQVEsR0FBUixRQUFRLENBQVE7WUFDaEIsV0FBTSxHQUFOLE1BQU0sQ0FBc0M7UUFDcEQsQ0FBQztRQUVFLHdEQUFVLEdBQWpCLFVBQWtCLE9BQXlDO1lBQTNELGlCQVVDO1lBVEcsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3JELE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDOUQsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxlQUFlLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUNsRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsSUFBSTtvQkFDekUsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDNUYsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVNLHFEQUFPLEdBQWQ7WUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7UUFDdkMsQ0FBQztRQUNMLDBDQUFDO0lBQUQsQ0E1QkEsQUE0QkMsSUFBQTtJQUVELElBQU0sc0JBQXNCLEdBQXlCO1FBQ2pELFdBQVcsRUFBRSxxREFBcUQ7UUFDbEUsVUFBVSxFQUFFLG1DQUFtQztRQUMvQyxRQUFRLEVBQUUsaUNBQWlDO0tBQzlDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLDhCQUE4QixDQUFDO1NBQ3RDLFNBQVMsQ0FBQyw4QkFBOEIsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO0FBQzNFLENBQUM7Ozs7O0FDbkVELG1FQUFzRTtBQVl0RSxDQUFDO0lBQ0csSUFBTSxlQUFlLEdBQUcsVUFBUyxTQUFtQztRQUNoRSxJQUFNLFlBQVksR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUMxRyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ0wsWUFBYSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUU7Z0JBQzFDLGtDQUFrQyxFQUFFLFdBQVc7Z0JBQy9DLHVDQUF1QyxFQUFFLE9BQU87Z0JBQ2hELHNDQUFzQyxFQUFFLE1BQU07Z0JBQzlDLHVDQUF1QyxFQUFFLE9BQU87YUFDbkQsQ0FBQyxDQUFDO1lBQ08sWUFBYSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUU7Z0JBQzFDLGtDQUFrQyxFQUFFLGlCQUFpQjtnQkFDckQsdUNBQXVDLEVBQUUsUUFBUTtnQkFDakQsc0NBQXNDLEVBQUUsU0FBUztnQkFDakQsdUNBQXVDLEVBQUUsU0FBUzthQUNyRCxDQUFDLENBQUM7UUFDUCxDQUFDO0lBQ0wsQ0FBQyxDQUFBO0lBRUQ7UUFDSSxpQ0FDVyxTQUEwQztZQUExQyxjQUFTLEdBQVQsU0FBUyxDQUFpQztRQUNsRCxDQUFDO1FBRUcsc0NBQUksR0FBWCxVQUFZLE1BQWdDLEVBQUUsZUFBaUMsRUFBRSxjQUE2QjtZQUMxRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztnQkFDWixXQUFXLEVBQUUsTUFBTSxDQUFDLEtBQUs7Z0JBQ3pCLFdBQVcsRUFBRSxNQUFNLENBQUMsV0FBVyxJQUFJLHVDQUF1QztnQkFDMUUsVUFBVSxFQUFFLG1EQUEwQjtnQkFDdEMsZ0JBQWdCLEVBQUUsSUFBSTtnQkFDdEIsWUFBWSxFQUFFLElBQUk7Z0JBQ2xCLE1BQU0sRUFBRTtvQkFDSixZQUFZLEVBQUUsTUFBTSxDQUFDLFlBQVk7b0JBQ2pDLE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTTtpQkFDeEI7Z0JBQ0QsbUJBQW1CLEVBQUUsSUFBSTthQUM1QixDQUFDO2lCQUNELElBQUksQ0FBQyxVQUFDLEdBQUc7Z0JBQ04sRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztvQkFDbEIsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUN6QixDQUFDO1lBQ0wsQ0FBQyxFQUFFO2dCQUNDLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLGNBQWMsRUFBRSxDQUFDO2dCQUNyQixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDWCxDQUFDO1FBQ0wsOEJBQUM7SUFBRCxDQTVCQSxBQTRCQyxJQUFBO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQztTQUN0QyxNQUFNLENBQUMsZUFBZSxDQUFDO1NBQ3ZCLE9BQU8sQ0FBQyw0QkFBNEIsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7Ozs7O0FDaEVELE9BQU87S0FDRixNQUFNLENBQUMsOEJBQThCLEVBQUUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBRTVELG9DQUFrQztBQUNsQyxpQ0FBK0I7QUFDL0IseUNBQXVDOzs7OztBQ0V2QyxDQUFDO0lBQ0MsSUFBTSxlQUFlLEdBQUcsVUFBVSxTQUFtQztRQUNuRSxJQUFNLFlBQVksR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUMxRyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ1AsWUFBYSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUU7Z0JBQzVDLHdCQUF3QixFQUFFLCtCQUErQjthQUMxRCxDQUFDLENBQUM7WUFDTyxZQUFhLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRTtnQkFDNUMsd0JBQXdCLEVBQUUsMkNBQTJDO2FBQ3RFLENBQUMsQ0FBQztRQUNMLENBQUM7SUFDSCxDQUFDLENBQUE7SUFFRCxJQUFNLHlCQUF5QixHQUFHLFVBQVUsd0JBQWdEO1FBQzFGLHdCQUF3QixDQUFDLGdCQUFnQixDQUFDO1lBQ3hDLENBQUM7b0JBQ0csS0FBSyxFQUFFLE9BQU87b0JBQ2QsSUFBSSxFQUFFLFVBQVU7b0JBQ2hCLElBQUksRUFBRSxPQUFPO29CQUNiLE1BQU0sRUFBRSxDQUFDO2lCQUNWO2dCQUNEO29CQUNFLEtBQUssRUFBRSxVQUFVO29CQUNqQixJQUFJLEVBQUUsVUFBVTtvQkFDaEIsSUFBSSxFQUFFLFVBQVU7b0JBQ2hCLE1BQU0sRUFBRSxDQUFDO2lCQUNWO2FBQ0Y7WUFDRCxDQUFDO29CQUNHLEtBQUssRUFBRSxVQUFVO29CQUNqQixJQUFJLEVBQUUsTUFBTTtvQkFDWixJQUFJLEVBQUUsVUFBVTtvQkFDaEIsTUFBTSxFQUFFLENBQUM7aUJBQ1Y7Z0JBQ0Q7b0JBQ0UsS0FBSyxFQUFFLGNBQWM7b0JBQ3JCLElBQUksRUFBRSxXQUFXO29CQUNqQixJQUFJLEVBQUUsT0FBTztvQkFDYixNQUFNLEVBQUUsQ0FBQztpQkFDVjtnQkFDRDtvQkFDRSxLQUFLLEVBQUUsWUFBWTtvQkFDbkIsSUFBSSxFQUFFLGVBQWU7b0JBQ3JCLElBQUksRUFBRSxZQUFZO29CQUNsQixNQUFNLEVBQUUsQ0FBQztpQkFDVjthQUNGO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFBO0lBRUQ7UUFBQTtRQUtBLENBQUM7UUFBRCx1QkFBQztJQUFELENBTEEsQUFLQyxJQUFBO0lBRUQsSUFBTSxzQkFBb0IsR0FBcUI7UUFDN0MsU0FBUyxFQUFFLEdBQUc7UUFDZCxVQUFVLEVBQUUsR0FBRztRQUNmLE1BQU0sRUFBRSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEtBQUs7S0FDZCxDQUFDO0lBUUY7UUFnQ0UsNkJBQ0UsTUFBc0IsRUFDZCxVQUFxQyxFQUNyQyxNQUFXLEVBQ1gsUUFBYSxFQUNiLFFBQWlDLEVBQ2pDLFlBQXlDLEVBQ3pDLGdCQUF1QyxFQUN2QyxlQUFxQztZQVIvQyxpQkE4QkM7WUE1QlMsZUFBVSxHQUFWLFVBQVUsQ0FBMkI7WUFDckMsV0FBTSxHQUFOLE1BQU0sQ0FBSztZQUNYLGFBQVEsR0FBUixRQUFRLENBQUs7WUFDYixhQUFRLEdBQVIsUUFBUSxDQUF5QjtZQUNqQyxpQkFBWSxHQUFaLFlBQVksQ0FBNkI7WUFDekMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUF1QjtZQUN2QyxvQkFBZSxHQUFmLGVBQWUsQ0FBc0I7WUF2Q3ZDLDRCQUF1QixHQUFRLENBQUM7b0JBQ3BDLEtBQUssRUFBRSxlQUFlO29CQUN0QixRQUFRLEVBQUUsVUFBQyxVQUFVO3dCQUNuQixLQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO29CQUNoQyxDQUFDO2lCQUNGO2dCQUNEO29CQUNFLEtBQUssRUFBRSxRQUFRO29CQUNmLFFBQVEsRUFBRSxVQUFDLFVBQVU7d0JBQ25CLEtBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQy9CLENBQUM7aUJBQ0Y7Z0JBQ0Q7b0JBQ0UsS0FBSyxFQUFFLGFBQWE7b0JBQ3BCLFFBQVEsRUFBRSxVQUFDLFVBQVU7d0JBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLEVBQUUsVUFBVSxDQUFDLENBQUM7b0JBQzNELENBQUM7aUJBQ0Y7YUFDRixDQUFDO1lBQ00sZ0JBQVcsR0FBVyx1REFBdUQ7Z0JBQ25GLGlGQUFpRjtnQkFDakYsd0JBQXdCLENBQUM7WUFLcEIscUJBQWdCLEdBQVEsSUFBSSxDQUFDLHVCQUF1QixDQUFDO1lBNkZyRCxnQkFBVyxHQUFHLFVBQUMsVUFBVTtnQkFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsVUFBVSxDQUFDLENBQUM7Z0JBQ3ZDLEtBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM1QyxDQUFDLENBQUE7WUFoRkMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUdoQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxzQkFBb0IsQ0FBQztZQUdyRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQzlDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDbkMsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztnQkFBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztZQUdwRyxJQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQztZQUM3QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFFdEIsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDWixLQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNwQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDVixDQUFDO1FBRU8sNENBQWMsR0FBdEI7WUFBQSxpQkF5QkM7WUF4QkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLFVBQUMsS0FBSyxFQUFFLFVBQVU7Z0JBQzVDLEtBQUssQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGNBQWMsSUFBSSxFQUFFO29CQUMvQyxLQUFLLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQUMsTUFBTSxFQUFFLEtBQUs7d0JBRTVDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksSUFBSTs0QkFDM0IsT0FBTyxFQUFFLENBQUM7NEJBQ1YsT0FBTyxFQUFFLENBQUM7eUJBQ1gsQ0FBQzt3QkFDRixNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQzt3QkFDckIsTUFBTSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7d0JBQy9CLE1BQU0sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7d0JBQ2hDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO2dDQUMzQixLQUFLLEVBQUUsUUFBUTtnQ0FDZixLQUFLLEVBQUUsVUFBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU07b0NBQzFCLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztnQ0FDMUMsQ0FBQzs2QkFDRixDQUFDLENBQUMsQ0FBQzt3QkFFSixNQUFNLENBQUM7NEJBQ0wsSUFBSSxFQUFFLE1BQU07NEJBQ1osUUFBUSxFQUFFLEtBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxLQUFJLENBQUMsV0FBVyxDQUFDO3lCQUNyRSxDQUFDO29CQUNKLENBQUMsQ0FBQyxDQUFBO1lBQ04sQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRU0sMENBQVksR0FBbkIsVUFBb0IsVUFBVTtZQUE5QixpQkEyQkM7WUExQkMsSUFBSSxDQUFDLGdCQUFnQjtpQkFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsVUFBVSxDQUFDO2lCQUNyQyxJQUFJLENBQUMsVUFBQyxJQUFJO2dCQUNULElBQUksV0FBVyxDQUFDO2dCQUVoQixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ1YsTUFBTSxDQUFDO2dCQUNULENBQUM7Z0JBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzNCLFdBQVcsR0FBRyxLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDckQsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDTixXQUFXLEdBQUc7d0JBQ1osS0FBSyxFQUFFLFdBQVc7d0JBQ2xCLE1BQU0sRUFBRSxFQUFFO3FCQUNYLENBQUM7Z0JBQ0osQ0FBQztnQkFFRCxLQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUVsRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDM0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ3hDLENBQUM7Z0JBRUQsS0FBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztRQUFBLENBQUM7UUFPTSx3Q0FBVSxHQUFsQixVQUFtQixLQUFLLEVBQUUsT0FBTztZQUMvQixPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsV0FBVztnQkFDMUIsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU07b0JBQ3pCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO3dCQUNsQixLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDOzRCQUM5QyxLQUFLLENBQUMsSUFBSSxDQUFDO2dDQUNULElBQUksRUFBRSxNQUFNLENBQUMsSUFBSTs2QkFDbEIsQ0FBQyxDQUFDO3dCQUNMLENBQUMsQ0FBQyxDQUFDO29CQUNMLENBQUM7Z0JBQ0gsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFTywwQ0FBWSxHQUFwQixVQUFxQixJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU07WUFBekMsaUJBT0M7WUFOQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztZQUNuRSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pGLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3RGLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1osS0FBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7WUFDckUsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUgsMEJBQUM7SUFBRCxDQXBKQSxBQW9KQyxJQUFBO0lBRUQsSUFBTSxTQUFTLEdBQXlCO1FBQ3RDLFFBQVEsRUFBRTtZQUNSLFdBQVcsRUFBRSxpQkFBaUI7WUFDOUIsc0JBQXNCLEVBQUUsa0JBQWtCO1lBQzFDLGNBQWMsRUFBRSxZQUFZO1NBQzdCO1FBQ0QsVUFBVSxFQUFFLG1CQUFtQjtRQUMvQixXQUFXLEVBQUUsMEJBQTBCO0tBQ3hDLENBQUE7SUFFRCxPQUFPO1NBQ0osTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixNQUFNLENBQUMseUJBQXlCLENBQUM7U0FDakMsTUFBTSxDQUFDLGVBQWUsQ0FBQztTQUN2QixTQUFTLENBQUMsY0FBYyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBRTFDLENBQUM7Ozs7O0FDbFBELCtEQUlnQztBQUNoQyxtRUFJd0M7QUFFM0IsUUFBQSxrQkFBa0IsR0FBVyxHQUFHLENBQUM7QUFDakMsUUFBQSxtQkFBbUIsR0FBVyxHQUFHLENBQUM7QUFDbEMsUUFBQSxtQkFBbUIsR0FBRyxnQ0FBZ0MsQ0FBQztBQUVwRSxJQUFNLDJCQUEyQixHQUFXLENBQUMsQ0FBQztBQUM5QyxJQUFNLGVBQWUsR0FBRztJQUN0QixTQUFTLEVBQUUsMEJBQWtCO0lBQzdCLFVBQVUsRUFBRSwyQkFBbUI7SUFDL0IsTUFBTSxFQUFFLEVBQUU7SUFDVixTQUFTLEVBQUUsa0NBQWtDO0lBRTdDLG1CQUFtQixFQUFFLGlCQUFpQjtJQUN0Qyx1QkFBdUIsRUFBRSx1Q0FBdUM7Q0FDakUsQ0FBQztBQUVGLENBQUM7SUFvQkM7UUFtQkUsNkJBQ1UsTUFBaUMsRUFDakMsVUFBcUMsRUFDckMsUUFBaUMsRUFDakMsUUFBaUMsRUFDakMsUUFBZ0IsRUFDeEIsV0FBNkIsRUFDN0IsWUFBK0IsRUFDL0IsUUFBbUM7WUFSckMsaUJBb0RDO1lBbkRTLFdBQU0sR0FBTixNQUFNLENBQTJCO1lBQ2pDLGVBQVUsR0FBVixVQUFVLENBQTJCO1lBQ3JDLGFBQVEsR0FBUixRQUFRLENBQXlCO1lBQ2pDLGFBQVEsR0FBUixRQUFRLENBQXlCO1lBQ2pDLGFBQVEsR0FBUixRQUFRLENBQVE7WUFyQm5CLHVCQUFrQixHQUFRLElBQUksQ0FBQztZQUMvQixtQkFBYyxHQUFZLElBQUksQ0FBQztZQUMvQixlQUFVLEdBQVEsSUFBSSxDQUFDO1lBd0I1QixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQ2xCLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBRTthQUMxQyxFQUFFLGVBQWUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxVQUFDLEtBQUssRUFBRSxVQUFVO2dCQUN0RCxNQUFNLENBQUM7b0JBQ0wsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO29CQUNsQixXQUFXLEVBQUUsS0FBSztvQkFDbEIsS0FBSyxFQUFFLFVBQVU7b0JBQ2pCLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUk7d0JBQzVCLElBQU0sU0FBUyxHQUFHLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBRTdDLE1BQU0sQ0FBQywyQ0FBb0IsQ0FBQyxzQ0FBZSxFQUFFOzRCQUMzQyxHQUFHLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLENBQUM7NEJBQ3ZDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSTs0QkFDbEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTt5QkFDckIsQ0FBQyxDQUFDO29CQUNMLENBQUMsQ0FBQztpQkFDSCxDQUFDO1lBQ0osQ0FBQyxDQUFDLENBQUM7WUFHSCxNQUFNLENBQUMsTUFBTSxDQUFDLHNCQUFzQixFQUFFLFVBQUMsTUFBTTtnQkFDM0MsS0FBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFHVCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFHbEIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDaEMsS0FBSSxDQUFDLGNBQWMsR0FBRyxLQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztnQkFDL0MsS0FBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBRXRFLEtBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSztvQkFDNUIsS0FBSzt5QkFDRixtQkFBbUIsQ0FBQyxLQUFJLENBQUMsZ0JBQWdCLENBQUM7eUJBQzFDLFlBQVksQ0FBQyxLQUFJLENBQUMsMkJBQTJCLENBQUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO3lCQUNuRSxrQkFBa0IsRUFBRTt5QkFDcEIsbUJBQW1CLEVBQUUsQ0FBQztnQkFDM0IsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNWLENBQUM7UUFHTSx1Q0FBUyxHQUFoQjtZQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNsQyxDQUFDO1FBR08sbUNBQUssR0FBYixVQUFjLE1BQU07WUFBcEIsaUJBbURDO1lBbERDLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDNUIsSUFBSSxpQkFBaUIsR0FBRyxJQUFJLENBQUM7WUFFN0IsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDbkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUV6QyxNQUFNLENBQUM7WUFDVCxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFFMUIsTUFBTSxDQUFDO1lBQ1QsQ0FBQztZQUVELEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUN2QyxJQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDM0UsRUFBRSxDQUFDLENBQUMsZUFBZSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3pGLGlCQUFpQixHQUFHLENBQUMsQ0FBQztvQkFFdEIsRUFBRSxDQUFDLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ3hCLElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7d0JBRXpFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQUMsSUFBSTs0QkFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7d0JBQzVCLENBQUMsQ0FBQyxDQUFDO3dCQUVILElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7d0JBRS9HLElBQUksQ0FBQyxRQUFRLENBQUM7NEJBQ1osS0FBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7d0JBQzNCLENBQUMsQ0FBQyxDQUFDO29CQUNMLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ04sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7d0JBQ3pJLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQzs0QkFDWixLQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQzt3QkFDM0IsQ0FBQyxDQUFDLENBQUM7b0JBQ0wsQ0FBQztvQkFFRCxNQUFNLENBQUM7Z0JBQ1QsQ0FBQztZQUNILENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDWixLQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztnQkFDM0IsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDO1FBQ0gsQ0FBQztRQUdNLDBDQUFZLEdBQW5CLFVBQW9CLEtBQUssRUFBRSxLQUFLO1lBQzlCLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLEtBQUssQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3RDLEtBQUssQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO2dCQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNaLENBQUMsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUM3QyxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUM7UUFDSCxDQUFDO1FBRU0sMkNBQWEsR0FBcEIsVUFBcUIsS0FBSztZQUN4QixLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7UUFDL0IsQ0FBQztRQUVNLDhDQUFnQixHQUF2QixVQUF3QixLQUFLO1lBQTdCLGlCQU9DO1lBTkMsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDWixLQUFLLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztnQkFDMUIsS0FBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsMkJBQW1CLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUU3RCxLQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUN2RCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDVixDQUFDO1FBRU0sa0RBQW9CLEdBQTNCLFVBQTRCLEtBQUssRUFBRSxLQUFLO1lBQ3RDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDekIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQy9CLENBQUM7UUFDSCxDQUFDO1FBR08sa0RBQW9CLEdBQTVCLFVBQTZCLFVBQWtCLEVBQUUsTUFBYztZQUM3RCxNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUNuQixLQUFLLFVBQVU7b0JBQ2IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO3dCQUN0RCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztvQkFDbkMsQ0FBQztvQkFDRCxLQUFLLENBQUM7Z0JBQ1IsS0FBSyxVQUFVO29CQUNQLElBQUE7Ozs7O3FCQVVMLEVBVEMsd0JBQVMsRUFDVCxvQkFBTyxFQUNQLDRCQUFXLEVBQ1gsZ0NBQWEsQ0FNZDtvQkFDRCxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUMvRCxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7d0JBQ3ZDLElBQUksRUFBRSxXQUFXO3FCQUNsQixDQUFDLENBQUM7b0JBRUgsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ2xDLEtBQUssQ0FBQztZQUNWLENBQUM7UUFDSCxDQUFDO1FBR08sNkNBQWUsR0FBdkIsVUFBd0IsSUFBUztZQUMvQixJQUFNLFNBQVMsR0FBa0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNoRixTQUFTLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDM0YsU0FBUyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBRS9HLE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDbkIsQ0FBQztRQUVPLHlDQUFXLEdBQW5CLFVBQW9CLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUztZQUMzQyxJQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFFdkQsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBQyxLQUFLO2dCQUNwQixLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQzdCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUN4QixDQUFDLENBQUMsQ0FBQztZQUVILElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUVPLDBDQUFZLEdBQXBCLFVBQXFCLFNBQVMsRUFBRSxNQUFRO1lBQ3RDLElBQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsRUFDcEQsVUFBVSxHQUFHLE1BQU0sS0FBSyxTQUFTLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1lBRTNGLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFVBQUMsSUFBSSxFQUFFLEtBQUs7Z0JBQ3hCLElBQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7Z0JBQ2hELE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsWUFBWSxDQUFDLEdBQUcsVUFBVSxDQUFDO1lBQzVELENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLDBDQUFZLEdBQXBCLFVBQXFCLFNBQVM7WUFBOUIsaUJBOEJDO1lBN0JDLElBQU0sYUFBYSxHQUFHLEVBQUUsRUFDdEIsTUFBTSxHQUFHLEVBQUUsRUFDWCxVQUFVLEdBQUcsRUFBRSxDQUFDO1lBR2xCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxVQUFDLEtBQUssRUFBRSxLQUFLO2dCQUMvQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxVQUFDLENBQUM7b0JBQ3pCLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssS0FBSyxDQUFDLEtBQUssQ0FBQTtnQkFDbkMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDVCxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUM1QixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNOLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3JCLENBQUM7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUVILENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxFQUFFLFVBQUMsS0FBSztnQkFDcEMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUM3QixLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDbkMsQ0FBQyxDQUFDLENBQUM7WUFFSCxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxVQUFDLEtBQUs7Z0JBQ25CLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDaEQsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsVUFBVSxDQUFDO1lBRW5DLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFVBQUMsU0FBUyxFQUFFLEtBQUs7Z0JBQzdDLEtBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3RDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLHNDQUFRLEdBQWhCLFVBQWlCLFdBQVc7WUFBNUIsaUJBNEJDO1lBM0JDLElBQU0sS0FBSyxHQUFHO2dCQUNaLEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSztnQkFDeEIsTUFBTSxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSTtvQkFDbEMsSUFBTSxTQUFTLEdBQUcsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFFN0MsTUFBTSxDQUFDLDJDQUFvQixDQUFDLHNDQUFlLEVBQUU7d0JBQzNDLEdBQUcsRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLENBQUM7d0JBQzVDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSTt3QkFDbEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtxQkFDckIsQ0FBQyxDQUFDO2dCQUNMLENBQUMsQ0FBQzthQUNILENBQUM7WUFFRixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN4QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO2dCQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7WUFFL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDWixLQUFJLENBQUMsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDckYsS0FBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQ2xCLHdDQUFxQixDQUFDLG1DQUFnQixFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSSxDQUFDLElBQUksRUFBRSxLQUFJLENBQUMsZ0JBQWdCLEVBQUUsS0FBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7cUJBQy9JLFlBQVksQ0FBQyxLQUFJLENBQUMsMkJBQTJCLENBQUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO3FCQUNuRSxrQkFBa0IsRUFBRTtxQkFDcEIsbUJBQW1CLEVBQUUsQ0FDdkIsQ0FBQztZQUNKLENBQUMsQ0FBQyxDQUFDO1lBRUgsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNyRCxDQUFDO1FBRU8sK0NBQWlCLEdBQXpCLFVBQTBCLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYztZQUF6RCxpQkFpQkM7WUFoQkMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7Z0JBQ3BCLElBQU0sU0FBUyxHQUFHLEtBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBRTdDLElBQU0sT0FBTyxHQUFHLDJDQUFvQixDQUFDLHNDQUFlLEVBQUU7b0JBQ3BELEdBQUcsRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLENBQUM7b0JBQzVDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSTtvQkFDbEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtpQkFDckIsQ0FBQyxDQUFDO2dCQUVILEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBRXZCLENBQUMsQ0FBQyxPQUFPLENBQUM7cUJBQ1AsUUFBUSxDQUFDLG9CQUFvQixDQUFDO3FCQUM5QixNQUFNLENBQUMsT0FBTyxDQUFDLG1CQUFtQixFQUFFLENBQUM7cUJBQ3JDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUM5QixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFTyxnREFBa0IsR0FBMUIsVUFBMkIsWUFBWTtZQUF2QyxpQkFRQztZQVBDLFlBQVksQ0FBQyxPQUFPLENBQUMsVUFBQyxXQUFXO2dCQUMvQixXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFDLFdBQVc7b0JBQ3JDLEtBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSzt3QkFDNUIsS0FBSyxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDNUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFTyw2Q0FBZSxHQUF2QixVQUF3QixVQUFVLEVBQUUsSUFBSSxFQUFFLGdCQUFnQjtZQUExRCxpQkFPQztZQU5DLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFVBQUMsS0FBSyxFQUFFLEtBQUs7Z0JBQ2pDLE1BQU0sQ0FBQyx3Q0FBcUIsQ0FBQyxtQ0FBZ0IsRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFJLENBQUMsZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7cUJBQy9HLFlBQVksQ0FBQyxLQUFJLENBQUMsMkJBQTJCLENBQUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO3FCQUNuRSxrQkFBa0IsRUFBRTtxQkFDcEIsbUJBQW1CLEVBQUUsQ0FBQztZQUMzQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFTywrQ0FBaUIsR0FBekIsVUFBMEIsWUFBYyxFQUFHLFdBQWE7WUFBeEQsaUJBVUM7WUFUQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFDLEtBQUs7Z0JBQzVCLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztvQkFDbEIsS0FBSyxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsMkJBQTJCLENBQUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVFLENBQUM7Z0JBRUQsS0FBSztxQkFDRixrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDO3FCQUM3QyxtQkFBbUIsRUFBRSxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLCtDQUFpQixHQUF6QjtZQUNFLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9DLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDM0IsQ0FBQztRQUVPLGlEQUFtQixHQUEzQixVQUE0QixjQUFjO1lBQ3hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGNBQWMsR0FBRywyQkFBMkI7Z0JBQzlFLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzFFLENBQUM7UUFFTyxtREFBcUIsR0FBN0IsVUFBOEIsSUFBSTtZQUNoQyxJQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7WUFFbEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsVUFBQyxLQUFLO2dCQUM1QixJQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUU1QyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO29CQUNkLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQ3hCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUM7b0JBQzNCLE1BQU0sQ0FBQztnQkFDVCxDQUFDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7WUFFSCxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2hCLENBQUM7UUFFTyx5REFBMkIsR0FBbkMsVUFBb0MsY0FBYztZQUNoRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDcEcsQ0FBQztRQUVPLGlEQUFtQixHQUEzQixVQUE0QixLQUFLO1lBQy9CLElBQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFaEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2RSxJQUFJLENBQUMsV0FBVyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRWxELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBRXhDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDL0IsQ0FBQztRQUVPLGdEQUFrQixHQUExQixVQUEyQixLQUFLO1lBQWhDLGlCQStCQztZQTlCQyxJQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQzVCLElBQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUMxRCxJQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFFekQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztZQUVqRCxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQzdCLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7WUFFNUIsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLG9CQUFvQixDQUFDO2dCQUNoRSxJQUFJLEVBQUUsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUk7Z0JBQzdDLEdBQUcsRUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRzthQUM1QyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUVyQixFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUNoRixJQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUUxRSxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxLQUFLLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQzlDLE1BQU0sQ0FBQztnQkFDVCxDQUFDO2dCQUVELElBQUksQ0FBQyxrQkFBa0I7cUJBQ3BCLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQztxQkFDekMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFFOUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDWixLQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztnQkFDbEMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ1IsQ0FBQztRQUNILENBQUM7UUFFTywrQ0FBaUIsR0FBekI7WUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7WUFFL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDM0MsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztZQUMvQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUMxQixDQUFDO1FBRU8sZ0RBQWtCLEdBQTFCO1lBQ0UsSUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1lBRTdELE1BQU0sQ0FBQztnQkFDTCxJQUFJLEVBQUUsYUFBYSxDQUFDLElBQUk7Z0JBQ3hCLEdBQUcsRUFBRSxhQUFhLENBQUMsR0FBRzthQUN2QixDQUFDO1FBQ0osQ0FBQztRQUVPLHNEQUF3QixHQUFoQztZQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFVBQUMsU0FBUztnQkFDaEMsU0FBUyxDQUFDLG1CQUFtQixFQUFFLENBQUM7WUFDbEMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRU8sc0NBQVEsR0FBaEIsVUFBaUIsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJO1lBQzdCLElBQUksSUFBSSxDQUFDO1lBQ1QsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN4QyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRTdDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7aUJBQ3pELElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7aUJBQ3pCLE1BQU0sRUFBRSxDQUFDO1lBRVosRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLEVBQUUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBRXRCLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUVyRCxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO3FCQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBRWhCLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN0RCxDQUFDO1lBRUQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsRUFBRTtnQkFDcEMsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsRUFBRSxFQUFFLEVBQUU7Z0JBQ04sSUFBSSxFQUFFLFNBQVM7YUFDaEIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLDRDQUFjLEdBQXRCLFVBQXVCLEtBQUs7WUFDMUIsSUFBTSxpQkFBaUIsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDekUsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBRXhELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3pFLENBQUM7WUFFRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUNqQyxDQUFDO1FBRU8sdURBQXlCLEdBQWpDLFVBQWtDLEtBQUs7WUFBdkMsaUJBY0M7WUFiQyxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUM7WUFDckMsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUU5QixJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUNaLEtBQUssRUFBRSxXQUFXO2dCQUNsQixNQUFNLEVBQUUsRUFBRTthQUNYLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1osS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsS0FBSSxDQUFDLFVBQVUsQ0FBQyxLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDdkUsS0FBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQy9CLENBQUMsQ0FBQyxDQUFDO1lBRUgsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUNqQyxDQUFDO1FBRU8saURBQW1CLEdBQTNCLFVBQTRCLEtBQUs7WUFDL0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO2dCQUM3QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7WUFDdEQsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsS0FBSyxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFELEtBQUssQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDM0QsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1lBQzlCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDNUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7WUFDN0IsQ0FBQztRQUNILENBQUM7UUFFTyxzREFBd0IsR0FBaEMsVUFBaUMsS0FBSztZQUNwQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEtBQUssS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQzdDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7Z0JBQzdELENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQzlCLENBQUM7UUFDSCxDQUFDO1FBRU8saURBQW1CLEdBQTNCLFVBQTRCLEtBQUs7WUFDL0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUMvRCxDQUFDO1FBRU8sd0NBQVUsR0FBbEI7WUFBQSxpQkFtRUM7WUFsRUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDWixLQUFJLENBQUMsY0FBYyxHQUFHLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO2dCQUMvQyxLQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztnQkFDdEUsS0FBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7Z0JBQ3JGLEtBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSSxDQUFDLGVBQWUsQ0FBQyxLQUFJLENBQUMsTUFBTSxFQUFFLEtBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBRXRGLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQztxQkFDNUIsU0FBUyxDQUFDO29CQUNULFVBQVUsRUFBRTt3QkFDVixPQUFPLEVBQUUsSUFBSTt3QkFDYixTQUFTLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQy9CLEtBQUssRUFBRSxHQUFHO3FCQUNYO29CQUNELE9BQU8sRUFBRSxVQUFDLEtBQUs7d0JBQ2IsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFBO29CQUNqQyxDQUFDO29CQUNELE1BQU0sRUFBRSxVQUFDLEtBQUs7d0JBQ1osS0FBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFBO29CQUNoQyxDQUFDO29CQUNELEtBQUssRUFBRSxVQUFDLEtBQUs7d0JBQ1gsS0FBSSxDQUFDLGlCQUFpQixFQUFFLENBQUE7b0JBQzFCLENBQUM7aUJBQ0YsQ0FBQyxDQUFDO2dCQUVMLFFBQVEsQ0FBQyxpQ0FBaUMsQ0FBQztxQkFDeEMsUUFBUSxDQUFDO29CQUNSLE1BQU0sRUFBRSxVQUFDLEtBQUs7d0JBQ1osS0FBSSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFBO29CQUN2QyxDQUFDO29CQUNELFdBQVcsRUFBRSxVQUFDLEtBQUs7d0JBQ2pCLEtBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQTtvQkFDakMsQ0FBQztvQkFDRCxnQkFBZ0IsRUFBRSxVQUFDLEtBQUs7d0JBQ3RCLEtBQUksQ0FBQyx3QkFBd0IsQ0FBQyxLQUFLLENBQUMsQ0FBQTtvQkFDdEMsQ0FBQztvQkFDRCxXQUFXLEVBQUUsVUFBQyxLQUFLO3dCQUNqQixLQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUE7b0JBQ2pDLENBQUM7aUJBQ0YsQ0FBQyxDQUFDO2dCQUVMLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQztxQkFDN0IsUUFBUSxDQUFDO29CQUNSLE1BQU0sRUFBRSxVQUFDLEtBQUs7d0JBQ1osS0FBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtvQkFDNUIsQ0FBQztvQkFDRCxXQUFXLEVBQUUsVUFBQyxLQUFLO3dCQUNqQixLQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUE7b0JBQ2pDLENBQUM7b0JBQ0QsZ0JBQWdCLEVBQUUsVUFBQyxLQUFLO3dCQUN0QixLQUFJLENBQUMsd0JBQXdCLENBQUMsS0FBSyxDQUFDLENBQUE7b0JBQ3RDLENBQUM7b0JBQ0QsV0FBVyxFQUFFLFVBQUMsS0FBSzt3QkFDakIsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFBO29CQUNqQyxDQUFDO2lCQUNGLENBQUMsQ0FBQztnQkFFTCxLQUFJLENBQUMsVUFBVTtxQkFDWixFQUFFLENBQUMsc0JBQXNCLEVBQUUseUJBQXlCLEVBQUU7b0JBQ3JELFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDakQsQ0FBQyxDQUFDLEtBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDM0IsQ0FBQyxDQUFDO3FCQUNELEVBQUUsQ0FBQyxrQkFBa0IsRUFBRTtvQkFDdEIsUUFBUSxDQUFDLHFCQUFxQixDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNsRCxDQUFDLENBQUMsQ0FBQztZQUVQLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNSLENBQUM7UUFDSCwwQkFBQztJQUFELENBdmtCQSxBQXVrQkMsSUFBQTtJQUVELElBQU0sYUFBYSxHQUF5QjtRQUMxQyxRQUFRLEVBQUU7WUFDUixjQUFjLEVBQUUsb0JBQW9CO1lBQ3BDLFlBQVksRUFBRSxrQkFBa0I7WUFDaEMsT0FBTyxFQUFFLG1CQUFtQjtZQUM1QixnQkFBZ0IsRUFBRSxzQkFBc0I7U0FDekM7UUFFRCxXQUFXLEVBQUUsMEJBQTBCO1FBQ3ZDLFVBQVUsRUFBRSxtQkFBbUI7S0FDaEMsQ0FBQTtJQUVELE9BQU8sQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUM7U0FDaEMsU0FBUyxDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQ2xELENBQUM7Ozs7O0FDbm9CRCw4QkFBcUMsV0FBZ0MsRUFBRSxPQUFZO0lBQ2pGLE1BQU0sQ0FBQyxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRkQsb0RBRUM7QUFxQkQsSUFBSSxpQkFBaUIsR0FBRztJQUN0QixPQUFPLEVBQUUsQ0FBQztJQUNWLE9BQU8sRUFBRSxDQUFDO0NBQ1gsQ0FBQztBQUVGO0lBT0UseUJBQWEsT0FBWTtRQUN2QixJQUFJLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFTSxpQ0FBTyxHQUFkO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVNLGlDQUFPLEdBQWQsVUFBZSxLQUFLLEVBQUUsTUFBTTtRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBRTFCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQ1osS0FBSyxFQUFFLEtBQUs7Z0JBQ1osTUFBTSxFQUFFLE1BQU07YUFDZixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxxQ0FBVyxHQUFsQixVQUFtQixJQUFJLEVBQUUsR0FBRztRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBRXBCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQ1osSUFBSSxFQUFFLElBQUk7Z0JBQ1YsR0FBRyxFQUFFLEdBQUc7YUFDVCxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSw2Q0FBbUIsR0FBMUI7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNsQixDQUFDO0lBQUEsQ0FBQztJQUVLLG9DQUFVLEdBQWpCLFVBQWtCLE1BQU07UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV2QyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUFBLENBQUM7SUFFSyxpQ0FBTyxHQUFkO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFBQSxDQUFDO0lBRUssbUNBQVMsR0FBaEI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUM7YUFDdEIsUUFBUSxDQUFDLHFCQUFxQixDQUFDO2FBQy9CLEdBQUcsQ0FBQztZQUNILFFBQVEsRUFBRSxVQUFVO1lBQ3BCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFDM0IsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN6QixLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQzdCLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUM7U0FDaEMsQ0FBQyxDQUFDO1FBRUwsSUFBSSxDQUFDLElBQUk7YUFDTixRQUFRLENBQUMsY0FBYyxDQUFDO2FBQ3hCLEdBQUcsQ0FBQztZQUNILE1BQU0sRUFBRSxNQUFNO1NBQ2YsQ0FBQzthQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFdkIsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFBQSxDQUFDO0lBRUssa0NBQVEsR0FBZixVQUFnQixTQUFTO1FBQ3ZCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUVoQixFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUk7aUJBQ04sV0FBVyxDQUFDLGNBQWMsQ0FBQztpQkFDM0IsR0FBRyxDQUFDO2dCQUNILElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7Z0JBQzlCLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7YUFDN0IsQ0FBQztpQkFDRCxFQUFFLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQzFDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxJQUFJO2lCQUNOLEdBQUcsQ0FBQztnQkFDSCxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO2dCQUM5QixHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO2dCQUM1QixNQUFNLEVBQUUsRUFBRTthQUNYLENBQUM7aUJBQ0QsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBRS9CLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDdEIsQ0FBQztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFFWjtZQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO2dCQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUN0QixDQUFDO1lBRUQsSUFBSSxDQUFDLElBQUk7aUJBQ04sR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7aUJBQ2pCLEdBQUcsQ0FBQyxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDM0MsQ0FBQztJQUNILENBQUM7SUFBQSxDQUFDO0lBRUssNENBQWtCLEdBQXpCLFVBQTBCLE1BQU07UUFDOUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUFBLENBQUM7SUFFSyxvQ0FBVSxHQUFqQjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMzQixDQUFDO0lBQUEsQ0FBQztJQUVLLG9DQUFVLEdBQWpCLFVBQWtCLE9BQU87UUFDdkIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWpDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQUEsQ0FBQztJQUNKLHNCQUFDO0FBQUQsQ0FySUEsQUFxSUMsSUFBQTtBQXJJWSwwQ0FBZTtBQXVJNUIsT0FBTztLQUNKLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztLQUMzQixPQUFPLENBQUMsYUFBYSxFQUFFO0lBQ3RCLE1BQU0sQ0FBQyxVQUFVLE9BQU87UUFDdEIsSUFBSSxPQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFM0MsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNqQixDQUFDLENBQUE7QUFDSCxDQUFDLENBQUMsQ0FBQzs7Ozs7QUMvS0wsT0FBTyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUV4QyxrQ0FBZ0M7QUFDaEMsdUJBQXFCOzs7Ozs7Ozs7Ozs7Ozs7QUNIckIsZ0VBRXNDO0FBSXRDLENBQUM7SUFDQztRQUFrQyx1Q0FBZTtRQUsvQyw2QkFDRSxNQUFpQixFQUNULFFBQWdCLEVBQ2hCLFFBQWlDLEVBQ2pDLDBCQUE4QztZQUp4RCxZQU1FLGlCQUFPLFNBdUJSO1lBM0JTLGNBQVEsR0FBUixRQUFRLENBQVE7WUFDaEIsY0FBUSxHQUFSLFFBQVEsQ0FBeUI7WUFDakMsZ0NBQTBCLEdBQTFCLDBCQUEwQixDQUFvQjtZQU5qRCxhQUFPLEdBQVcsSUFBSSxDQUFDO1lBVTVCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztvQkFBQyxLQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSSxDQUFDLElBQUksRUFBRSxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNFLENBQUM7WUFFRCxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFDYixLQUFLLEVBQUUsYUFBYTtnQkFDcEIsS0FBSyxFQUFFO29CQUNMLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDdkIsQ0FBQzthQUNGLENBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO1lBQzFDLEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksS0FBSSxDQUFDLE9BQU8sQ0FBQztZQUVwRCxLQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFHakIsTUFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDWixNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNqQyxDQUFDLEVBQUUsVUFBQyxNQUFNO2dCQUNSLEtBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNuQixDQUFDLENBQUMsQ0FBQzs7UUFDTCxDQUFDO1FBRU8sdUNBQVMsR0FBakI7WUFBQSxpQkFNQztZQUxDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDWixLQUFJLENBQUMsV0FBVyxDQUFDLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQzlDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNWLENBQUM7UUFDSCxDQUFDO1FBRU8sMkNBQWEsR0FBckI7WUFBQSxpQkErQkM7WUE5QkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsMEJBQTBCLENBQUMsSUFBSSxDQUFDO2dCQUNuQyxXQUFXLEVBQUUscUJBQXFCO2dCQUNsQyxNQUFNLEVBQUU7b0JBQ04sS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO29CQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUk7d0JBQ3pCLE9BQU8sRUFBRSxDQUFDO3dCQUNWLE9BQU8sRUFBRSxDQUFDO3FCQUNYO29CQUNELElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7b0JBQ3ZCLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUs7b0JBQ3pCLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7b0JBQ3ZCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztvQkFDckIsYUFBYSxFQUFFLFVBQUMsT0FBTzt3QkFDckIsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7b0JBQ3pCLENBQUM7aUJBQ0Y7Z0JBQ0QsWUFBWSxFQUFFLHVDQUF1QzthQUN0RCxFQUFFLFVBQUMsTUFBVztnQkFDYixLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFFN0IsS0FBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2dCQUMxQixLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2dCQUNsQyxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUNoQyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2dCQUNsQyxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUNoQyxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO1lBQ3hDLENBQUMsRUFBRTtnQkFDRCxLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUM7WUFDbEMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRU8seUNBQVcsR0FBbkIsVUFBb0IsS0FBSztZQUN2QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4RCxDQUFDO1FBRU0sd0NBQVUsR0FBakIsVUFBa0IsTUFBTTtZQUF4QixpQkFTQztZQVJDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBRXpDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDWixLQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUM1RSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDVixDQUFDO1FBQ0gsQ0FBQztRQUdPLCtDQUFpQixHQUF6QixVQUEwQixRQUFRLEVBQUUsS0FBSztZQUN2QyxJQUNFLGNBQWMsR0FBRyxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxRQUFRLENBQUMsV0FBVyxFQUN6RSxlQUFlLEdBQUcsUUFBUSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLFlBQVksRUFDN0UsVUFBVSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLElBQUksS0FBSyxDQUFDLEtBQUssRUFDakQsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLElBQUksS0FBSyxDQUFDLE1BQU0sRUFDcEQsTUFBTSxHQUFHLENBQUMsRUFDVixTQUFTLEdBQUcsRUFBRSxDQUFDO1lBRWpCLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEUsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFVBQVUsR0FBRyxXQUFXLEdBQUcsZUFBZSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUM5RSxTQUFTLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQzlDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsZUFBZSxHQUFHLElBQUksQ0FBQztnQkFDbEQsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxVQUFVLEdBQUcsZUFBZSxHQUFHLFdBQVcsR0FBRyxJQUFJLENBQUM7Z0JBQzVFLFNBQVMsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDL0IsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxXQUFXLEdBQUcsVUFBVSxHQUFHLGNBQWMsR0FBRyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDOUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUM3QyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLFdBQVcsR0FBRyxjQUFjLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQztnQkFDNUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxjQUFjLEdBQUcsSUFBSSxDQUFDO2dCQUNoRCxTQUFTLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2hDLENBQUM7WUFFRCxLQUFLLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZCLENBQUM7UUFDSCwwQkFBQztJQUFELENBdEhBLEFBc0hDLENBdEhpQyxpQ0FBZSxHQXNIaEQ7SUFHRCxJQUFNLFNBQVMsR0FBeUI7UUFDdEMsUUFBUSxFQUFFO1lBQ1IsT0FBTyxFQUFFLGFBQWE7U0FDdkI7UUFDRCxVQUFVLEVBQUUsbUJBQW1CO1FBQy9CLFdBQVcsRUFBRSwyQkFBMkI7S0FDekMsQ0FBQTtJQUVELE9BQU87U0FDSixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxjQUFjLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDMUMsQ0FBQzs7Ozs7QUMxSUQsOEJBQTRCO0FBQzVCLHVCQUFxQjtBQUdyQix1QkFBcUI7QUFHckIsNkJBQTJCO0FBQzNCLGdDQUE4QjtBQUU5QixPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRTtJQUU3QixtQkFBbUI7SUFDbkIsd0JBQXdCO0lBRXhCLGFBQWE7SUFFYiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBRTNCLHdCQUF3QjtJQUV4QixXQUFXO0lBQ1gsY0FBYztJQUNkLGFBQWE7SUFDYixXQUFXO0lBQ1gsY0FBYztJQUNkLGFBQWE7SUFDYixZQUFZO0NBQ2IsQ0FBQyxDQUFDO0FBR0gseUNBQXVDO0FBRXZDLDhCQUE0QjtBQUM1Qix3Q0FBc0M7QUFDdEMsa0NBQWdDO0FBQ2hDLGdDQUE4QjtBQUM5QixtREFBaUQ7QUFDakQsd0NBQXNDO0FBQ3RDLDRDQUEwQztBQUUxQyxpQ0FBK0I7OztBQzNDL0IsQ0FBQztJQUNDLElBQU0sUUFBUSxHQUFHO1FBQ2YsTUFBTSxDQUFDO1lBQ0wsUUFBUSxFQUFFLElBQUk7WUFDZCxXQUFXLEVBQUUseUJBQXlCO1NBQ3ZDLENBQUM7SUFDSixDQUFDLENBQUE7SUFFRCxPQUFPO1NBQ0osTUFBTSxDQUFDLGFBQWEsQ0FBQztTQUNyQixTQUFTLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3hDLENBQUM7Ozs7Ozs7Ozs7Ozs7OztBQ1hELDRDQUFvRDtBQUVwRDtJQUFxQyxtQ0FBYTtJQStCaEQ7UUFDRSxVQUFVLENBQUM7UUFEYixZQUdFLGlCQUFPLFNBQ1I7UUFsQ00sVUFBSSxHQUFRLENBQUM7Z0JBQ2xCLEtBQUssRUFBRSxhQUFhO2dCQUNwQixNQUFNLEVBQUUsT0FBTyxDQUFDLElBQUk7Z0JBQ3BCLE9BQU8sRUFBRSxDQUFDO3dCQUNOLEtBQUssRUFBRSxPQUFPO3dCQUNkLE1BQU0sRUFBRSxZQUFZO3dCQUNwQixNQUFNLEVBQUU7NEJBQ04sS0FBSyxFQUFFLENBQUM7NEJBQ1IsS0FBSyxFQUFFLENBQUM7eUJBQ1Q7cUJBQ0Y7b0JBQ0Q7d0JBQ0UsS0FBSyxFQUFFLE9BQU87d0JBQ2QsTUFBTSxFQUFFLFlBQVk7d0JBQ3BCLE1BQU0sRUFBRTs0QkFDTixLQUFLLEVBQUUsQ0FBQzs0QkFDUixLQUFLLEVBQUUsQ0FBQzt5QkFDVDtxQkFDRjtvQkFDRDt3QkFDRSxLQUFLLEVBQUUsT0FBTzt3QkFDZCxNQUFNLEVBQUUsWUFBWTt3QkFDcEIsTUFBTSxFQUFFOzRCQUNOLEtBQUssRUFBRSxDQUFDOzRCQUNSLEtBQUssRUFBRSxDQUFDO3lCQUNUO3FCQUNGO2lCQUNGO2FBQ0YsQ0FBQyxDQUFDOztJQU1ILENBQUM7SUFFTSxvQ0FBVSxHQUFqQixVQUFrQixVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUk7UUFDeEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN0QyxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekMsQ0FBQztJQUNILENBQUM7SUFBQSxDQUFDO0lBRUssb0NBQVUsR0FBakIsVUFBa0IsTUFBTTtRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUN6QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUMzQyxDQUFDO0lBQUEsQ0FBQztJQUNKLHNCQUFDO0FBQUQsQ0FuREEsQUFtREMsQ0FuRG9DLG9CQUFhLEdBbURqRDtBQW5EWSwwQ0FBZTtBQXFENUIsQ0FBQztJQUNDO1FBR0U7UUFBZSxDQUFDO1FBRVQsK0JBQUksR0FBWDtZQUNFLFVBQVUsQ0FBQztZQUVYLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO2dCQUN4QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7WUFFeEMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQztRQUNILHVCQUFDO0lBQUQsQ0FiQSxBQWFDLElBQUE7SUFFRCxPQUFPO1NBQ0osTUFBTSxDQUFDLGFBQWEsQ0FBQztTQUNyQixRQUFRLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFDL0MsQ0FBQzs7Ozs7Ozs7QUMxRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFL0IsK0JBQTZCO0FBQzdCLDZCQUEyQjtBQUUzQix1Q0FBa0M7Ozs7Ozs7Ozs7Ozs7OztBQ05sQyxnRUFFc0M7QUFLdEMsQ0FBQztJQUNDO1FBQWlDLHNDQUFlO1FBRTlDLDRCQUNVLDBCQUE4QztZQUR4RCxZQUdFLGlCQUFPLFNBYVI7WUFmUyxnQ0FBMEIsR0FBMUIsMEJBQTBCLENBQW9CO1lBSXRELEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixLQUFJLENBQUMsSUFBSSxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSSxDQUFDLElBQUksRUFBRSxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUksQ0FBQyxJQUFJLENBQUM7WUFDcEYsQ0FBQztZQUVELEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNiLEtBQUssRUFBRSxhQUFhO2dCQUNwQixLQUFLLEVBQUU7b0JBQ0wsS0FBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO2dCQUN2QixDQUFDO2FBQ0YsQ0FBQyxDQUFDO1lBQ0gsS0FBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUM7O1FBQzlDLENBQUM7UUFFTywwQ0FBYSxHQUFyQjtZQUFBLGlCQWdCQztZQWZDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxJQUFJLENBQUM7Z0JBQ25DLE1BQU0sRUFBRTtvQkFDTixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7b0JBQ2pCLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7b0JBQ3ZCLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUs7b0JBQ3pCLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7aUJBQ3hCO2dCQUNELFlBQVksRUFBRSxzQ0FBc0M7YUFDckQsRUFBRSxVQUFDLE1BQVc7Z0JBQ2IsS0FBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2dCQUMxQixLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO2dCQUNsQyxLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDN0IsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDaEMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNwQyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDSCx5QkFBQztJQUFELENBckNBLEFBcUNDLENBckNnQyxpQ0FBZSxHQXFDL0M7SUFFRCxJQUFNLFFBQVEsR0FBeUI7UUFDckMsUUFBUSxFQUFFO1lBQ1IsT0FBTyxFQUFFLGFBQWE7U0FDdkI7UUFDRCxVQUFVLEVBQUUsa0JBQWtCO1FBQzlCLFdBQVcsRUFBRSx5QkFBeUI7S0FDdkMsQ0FBQTtJQUVELE9BQU87U0FDSixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDeEMsQ0FBQzs7O0FDMURELFlBQVksQ0FBQzs7Ozs7Ozs7Ozs7O0FBRWIsZ0VBRXNDO0FBUXRDLENBQUM7SUFDQztRQUFzQywyQ0FBZTtRQUluRCxpQ0FDVSxNQUFzQixFQUN0QixRQUFhLEVBQ2IsUUFBaUMsRUFDakMsZUFBcUM7WUFKL0MsWUFNRSxpQkFBTyxTQU1SO1lBWFMsWUFBTSxHQUFOLE1BQU0sQ0FBZ0I7WUFDdEIsY0FBUSxHQUFSLFFBQVEsQ0FBSztZQUNiLGNBQVEsR0FBUixRQUFRLENBQXlCO1lBQ2pDLHFCQUFlLEdBQWYsZUFBZSxDQUFzQjtZQVB4QyxtQkFBYSxHQUFXLFFBQVEsQ0FBQztZQUNqQyx1QkFBaUIsR0FBVyxJQUFJLENBQUM7WUFVdEMsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLEtBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLElBQUksS0FBSSxDQUFDLGFBQWEsQ0FBQztnQkFDdEUsS0FBSSxDQUFDLGlCQUFpQixHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLElBQUksS0FBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3BGLENBQUM7O1FBQ0gsQ0FBQztRQUVNLDZDQUFXLEdBQWxCLFVBQW1CLE1BQU07WUFBekIsaUJBSUM7WUFIQyxJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUNaLEtBQUksQ0FBQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEYsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRU0sNENBQVUsR0FBakIsVUFBa0IsTUFBTTtZQUF4QixpQkFTQztZQVJDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBRXpDLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1osQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxVQUFDLEtBQUs7b0JBQ3RDLEtBQUksQ0FBQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDeEUsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDVixDQUFDO1FBQ0gsOEJBQUM7SUFBRCxDQWxDQSxBQWtDQyxDQWxDcUMsaUNBQWUsR0FrQ3BEO0lBRUQsSUFBTSxpQkFBaUIsR0FBeUI7UUFDOUMsUUFBUSxFQUFFO1lBQ1IsT0FBTyxFQUFFLGFBQWE7U0FDdkI7UUFDRCxVQUFVLEVBQUUsdUJBQXVCO1FBQ25DLFdBQVcsRUFBRSw0Q0FBNEM7S0FDMUQsQ0FBQTtJQUVELE9BQU87U0FDSixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxzQkFBc0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQzFELENBQUM7Ozs7Ozs7Ozs7Ozs7OztBQzVERCxnRUFFc0M7QUFLdEMsQ0FBQztJQUNDO1FBQXFDLDBDQUFlO1FBR2xELGdDQUNFLE1BQXNCLEVBQ2QsUUFBaUMsRUFDakMsUUFBYSxFQUNiLDBCQUE4QyxFQUM5QyxxQkFBMEI7WUFMcEMsWUFPRSxpQkFBTyxTQStCUjtZQXBDUyxjQUFRLEdBQVIsUUFBUSxDQUF5QjtZQUNqQyxjQUFRLEdBQVIsUUFBUSxDQUFLO1lBQ2IsZ0NBQTBCLEdBQTFCLDBCQUEwQixDQUFvQjtZQUM5QywyQkFBcUIsR0FBckIscUJBQXFCLENBQUs7WUFQN0Isa0JBQVksR0FBWSxJQUFJLENBQUM7WUFXbEMsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO29CQUFDLEtBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFJLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0UsQ0FBQztZQUVELEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNiLEtBQUssRUFBRSxhQUFhO2dCQUNwQixLQUFLLEVBQUU7b0JBQ0wsS0FBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO2dCQUN2QixDQUFDO2FBQ0YsQ0FBQyxDQUFDO1lBQ0gsS0FBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQ2IsS0FBSyxFQUFFLGlCQUFpQjtnQkFDeEIsS0FBSyxFQUFFO29CQUNMLEtBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO2dCQUNoQyxDQUFDO2FBQ0YsQ0FBQyxDQUFDO1lBRUgsS0FBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUksS0FBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFFdkUsTUFBTSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsRUFBRTtnQkFDdEMsS0FBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1lBR0gsTUFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDWixNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNqQyxDQUFDLEVBQUUsVUFBQyxNQUFNO2dCQUNSLEVBQUUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUM7b0JBQUMsS0FBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQzVDLENBQUMsQ0FBQyxDQUFDOztRQUNMLENBQUM7UUFFTyw4Q0FBYSxHQUFyQjtZQUFBLGlCQWFDO1lBWkMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQztnQkFDbkMsV0FBVyxFQUFFLHFCQUFxQjtnQkFDbEMsTUFBTSxFQUFFO29CQUNOLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7b0JBQ3ZCLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVk7b0JBQ3ZDLFVBQVUsRUFBRSxJQUFJO2lCQUNqQjtnQkFDRCxZQUFZLEVBQUUsMENBQTBDO2FBQ3pELEVBQUUsVUFBQyxNQUFXO2dCQUNiLEtBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM3QixLQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1lBQ2xELENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVNLDJDQUFVLEdBQWpCLFVBQWtCLE1BQU07WUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDekMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFFekMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLENBQUM7UUFFTSx1REFBc0IsR0FBN0I7WUFBQSxpQkFVQztZQVRDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUM7Z0JBQzlCLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVk7Z0JBQ3ZDLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVE7YUFDbkMsRUFBRSxVQUFDLFdBQVc7Z0JBQ2IsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztvQkFDaEIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQztvQkFDN0MsS0FBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDLFdBQVcsQ0FBQztnQkFDdEQsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVPLCtDQUFjLEdBQXRCO1lBQUEsaUJBS0M7WUFKQyxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUNaLEtBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQzNCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNULENBQUM7UUFDSCw2QkFBQztJQUFELENBbkZBLEFBbUZDLENBbkZvQyxpQ0FBZSxHQW1GbkQ7SUFHRCxJQUFNLFlBQVksR0FBeUI7UUFDekMsUUFBUSxFQUFFO1lBQ1IsT0FBTyxFQUFFLGFBQWE7U0FDdkI7UUFDRCxVQUFVLEVBQUUsc0JBQXNCO1FBQ2xDLFdBQVcsRUFBRSxpQ0FBaUM7S0FDL0MsQ0FBQTtJQUVELE9BQU87U0FDSixNQUFNLENBQUMsY0FBYyxDQUFDO1NBQ3RCLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUNoRCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUN6R0QsZ0VBRXNDO0FBRXRDLENBQUM7SUFDQyxJQUFNLGFBQVcsR0FBVyxFQUFFLENBQUM7SUFDL0IsSUFBTSxXQUFTLEdBQVcsR0FBRyxDQUFDO0lBRTlCO1FBQXVDLDRDQUFlO1FBT3BELGtDQUNFLE1BQXNCLEVBQ3RCLFFBQWlDO1lBRm5DLFlBSUUsaUJBQU8sU0FTUjtZQWhCTSxXQUFLLEdBQVksS0FBSyxDQUFDO1lBQ3ZCLGVBQVMsR0FBVyxhQUFXLENBQUM7WUFPckMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7WUFDdEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7WUFFMUIsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFJLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQztZQUNwRixDQUFDO1lBRUQsS0FBSSxDQUFDLFlBQVksRUFBRSxDQUFDOztRQUN0QixDQUFDO1FBRU0sNkNBQVUsR0FBakIsVUFBa0IsTUFBTTtZQUF4QixpQkFTQztZQVJDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBRXpDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNwQixJQUFJLENBQUMsU0FBUyxDQUFDO2dCQUNiLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNWLENBQUM7UUFFTywrQ0FBWSxHQUFwQjtZQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxHQUFHLFdBQVMsR0FBRyxhQUFXLENBQUM7UUFDOUcsQ0FBQztRQUNILCtCQUFDO0lBQUQsQ0FwQ0EsQUFvQ0MsQ0FwQ3NDLGlDQUFlLEdBb0NyRDtJQUdELElBQU0sY0FBYyxHQUF5QjtRQUMzQyxRQUFRLEVBQUU7WUFDUixPQUFPLEVBQUUsYUFBYTtTQUN2QjtRQUNELFVBQVUsRUFBRSx3QkFBd0I7UUFDcEMsV0FBVyxFQUFFLHFDQUFxQztLQUNuRCxDQUFBO0lBRUQsT0FBTztTQUNKLE1BQU0sQ0FBQyxjQUFjLENBQUM7U0FDdEIsU0FBUyxDQUFDLG1CQUFtQixFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ3BELENBQUM7OztBQzFERCxDQUFDO0lBS0MsMkJBQ0UsTUFBaUIsRUFDakIsS0FBYSxFQUNiLEtBQThCO1FBRTlCLElBQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxFQUMvQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUVoRCxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSTtZQUMxQixJQUFNLEdBQUcsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQztZQUN0RCxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO1FBRUgsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV0Qix1QkFBdUIsSUFBSTtZQUN6QixNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztpQkFDZCxRQUFRLENBQUMsb0JBQW9CLENBQUM7aUJBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUM7aUJBQ1osR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1osQ0FBQztJQUNILENBQUM7SUFFRDtRQUNFLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxHQUFHO1lBQ2IsSUFBSSxFQUFFLFVBQ0osTUFBaUIsRUFDakIsS0FBYSxFQUNiLEtBQThCO2dCQUU1QixJQUFJLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDaEQsQ0FBQztTQUNGLENBQUM7SUFDSixDQUFDO0lBRUQsT0FBTztTQUNKLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQztTQUNoQyxTQUFTLENBQUMsbUJBQW1CLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFDcEQsQ0FBQzs7Ozs7QUN4Q0QsK0JBQXNDLFdBQWlDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSTtJQUNwRyxNQUFNLENBQUMsSUFBSSxXQUFXLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDeEQsQ0FBQztBQUZELHNEQUVDO0FBa0NELElBQU0scUJBQXFCLEdBQUcsQ0FBQyxDQUFDO0FBRWhDO0lBU0UsMEJBQVksS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSTtRQUpsQyxjQUFTLEdBQVEsRUFBRSxDQUFDO1FBQ3BCLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFJN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUM7UUFDdEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxPQUFPLEtBQUsscUJBQXFCLENBQUM7SUFDMUQsQ0FBQztJQUVNLGtDQUFPLEdBQWQsVUFBZSxJQUFJO1FBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUFBLENBQUM7SUFFSyw0Q0FBaUIsR0FBeEIsVUFBeUIsR0FBRyxFQUFFLEdBQUc7UUFDL0IsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUFBLENBQUM7SUFFSyxtQ0FBUSxHQUFmLFVBQWdCLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTztRQUN4QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDbEUsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ25FLENBQUM7SUFDSCxDQUFDO0lBQUEsQ0FBQztJQUVLLG1EQUF3QixHQUEvQixVQUFnQyxRQUFRLEVBQUUsT0FBTyxFQUFFLE9BQU87UUFDeEQsSUFBSSxjQUFjLENBQUM7UUFDbkIsSUFBSSxlQUFlLENBQUM7UUFDcEIsSUFBTSxRQUFRLEdBQUcsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFHNUMsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLENBQUMsSUFBSSxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBRXhDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDZCxjQUFjLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixjQUFjLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBRTFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFDcEIsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUM3QyxjQUFjLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNoRixDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFHRCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25DLElBQU0sWUFBWSxHQUFHLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7WUFFNUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztnQkFDNUQsZUFBZSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ25FLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sS0FBSyxDQUFDLElBQUksWUFBWSxDQUFDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDcEMsY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUNoRSxlQUFlLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ25FLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ04sY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUN6RCxlQUFlLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQzVELENBQUM7WUFDSCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLFlBQVksQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDM0IsY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDcEUsZUFBZSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2dCQUNuRSxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNOLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNyQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQ2hFLGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDbkUsQ0FBQztvQkFBQyxJQUFJLENBQUMsQ0FBQzt3QkFDTixjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7d0JBQ3pELGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDNUQsQ0FBQztnQkFDSCxDQUFDO1lBQ0gsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxLQUFLLENBQUMsSUFBSSxZQUFZLENBQUMsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNyQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUM1QyxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQ2hFLGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDbkUsQ0FBQztvQkFBQyxJQUFJLENBQUMsQ0FBQzt3QkFDTixjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQ2hFLGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDbkUsQ0FBQztnQkFDSCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNOLGNBQWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDekQsZUFBZSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUM1RCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7UUFHRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxPQUFPLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hELGNBQWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQzVELGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdkUsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUM1QyxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ2hFLGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZFLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ04sY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUNoRSxlQUFlLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUN2RSxDQUFDO1lBQ0gsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLGNBQWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDekQsZUFBZSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzVELENBQUM7UUFDSCxDQUFDO1FBRUQsTUFBTSxDQUFDO1lBQ0wsS0FBSyxFQUFFLGNBQWM7WUFDckIsR0FBRyxFQUFFLGVBQWU7U0FDckIsQ0FBQztJQUNKLENBQUM7SUFBQSxDQUFDO0lBRUssa0NBQU8sR0FBZCxVQUFlLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU87UUFDN0MsSUFBSSxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztRQUVuQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUV4QixHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsUUFBUSxFQUFFLEdBQUcsR0FBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztnQkFDMUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDMUIsS0FBSyxDQUFDO2dCQUNSLENBQUM7WUFDSCxDQUFDO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNkLENBQUM7UUFHRCxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsUUFBUSxFQUFFLEdBQUcsR0FBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztZQUMxQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztnQkFDN0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ25DLElBQUksR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUNoQyxLQUFLLENBQUM7Z0JBQ1IsQ0FBQztZQUNILENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNULE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDZCxDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFBQSxDQUFDO0lBRUssa0RBQXVCLEdBQTlCLFVBQStCLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTztRQUN2RCxJQUFJLGNBQWMsQ0FBQztRQUNuQixJQUFJLGVBQWUsQ0FBQztRQUNwQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVDLElBQU0sUUFBUSxHQUFHLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUcvQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25DLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7WUFFeEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNkLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEMsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFFMUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO29CQUNwQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQzdDLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2hGLENBQUM7WUFDSCxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNkLGNBQWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3JELGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEUsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDekQsZUFBZSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLENBQUM7UUFFRCxNQUFNLENBQUM7WUFDTCxLQUFLLEVBQUUsY0FBYztZQUNyQixHQUFHLEVBQUUsZUFBZTtTQUNyQixDQUFDO0lBQ0osQ0FBQztJQUFBLENBQUM7SUFFSyxzQ0FBVyxHQUFsQixVQUFtQixRQUFRO1FBQ3pCLElBQUksUUFBUSxDQUFDO1FBRWIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDYixRQUFRLEdBQUcsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1lBQzNDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ2IsUUFBUSxHQUFHLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxRQUFRLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ3RFLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUM7UUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFBQSxDQUFDO0lBRUsscUNBQVUsR0FBakIsVUFBa0IsR0FBRyxFQUFFLEdBQUc7UUFDeEIsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDeEMsQ0FBQztJQUFBLENBQUM7SUFFSyx1Q0FBWSxHQUFuQixVQUFvQixPQUFPO1FBQ3pCLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLEtBQUssQ0FBQztRQUVWLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRyxFQUFFLFFBQVE7WUFDbkMsS0FBSyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFDLElBQUk7Z0JBQ2pELE1BQU0sQ0FBQyxJQUFJLEtBQUssT0FBTyxDQUFDO1lBQzFCLENBQUMsQ0FBQyxDQUFDO1lBRUgsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsTUFBTSxDQUFDO1lBQ1QsQ0FBQztRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFBQSxDQUFDO0lBRUssdUNBQVksR0FBbkIsVUFBb0IsS0FBSyxFQUFFLEdBQUcsRUFBRSxJQUFJO1FBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRztZQUN6QixHQUFHLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSTtnQkFDZixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRztvQkFDOUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQy9DLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFBQSxDQUFDO0lBRUssd0NBQWEsR0FBcEI7UUFDRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQUc7WUFDekIsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7Z0JBQ2YsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7WUFDbkIsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFBQSxDQUFDO0lBRUssOENBQW1CLEdBQTFCLFVBQTJCLE9BQU87UUFDaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxPQUFPLEtBQUsscUJBQXFCLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFdkIsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFBQSxDQUFDO0lBRUssdUNBQVksR0FBbkIsVUFBb0IsZUFBaUI7UUFDbkMsSUFBTSxJQUFJLEdBQUcsSUFBSSxFQUNmLFNBQVMsR0FBRyxlQUFlLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQ2xELE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLDRCQUE0QixDQUFDLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUN4RixJQUFJLFNBQVMsR0FBRyxDQUFDLEVBQ2YsSUFBSSxHQUFHLENBQUMsRUFDUixTQUFTLEdBQUcsRUFBRSxDQUFDO1FBRWpCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBRXBCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRO1lBQ3ZDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUVoQyxhQUFhLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBRWhDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEtBQUssS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztvQkFDN0IsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDLENBQUM7Z0JBQzFDLENBQUM7Z0JBR0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDbEQsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO3dCQUM5RSxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO29CQUM5QixDQUFDLENBQUMsQ0FBQztnQkFDTCxDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsdUJBQXVCLFlBQVk7WUFDakMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO2dCQUM3QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNqQyxJQUFJLEVBQUUsQ0FBQztvQkFDUCxTQUFTLEdBQUcsQ0FBQyxDQUFDO29CQUVkLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO29CQUMvQixTQUFTLEdBQUcsRUFBRSxDQUFDO2dCQUNqQixDQUFDO2dCQUVELElBQUksR0FBRyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDN0YsSUFBSSxJQUFJLEdBQUcsU0FBUyxHQUFHLFNBQVMsR0FBRyxDQUFDLFNBQVMsR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBR2xGLFNBQVMsQ0FBQyxJQUFJLENBQUM7b0JBQ2IsR0FBRyxFQUFFLEdBQUc7b0JBQ1IsSUFBSSxFQUFFLElBQUk7b0JBQ1YsTUFBTSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVU7b0JBQ2xDLEtBQUssRUFBRSxJQUFJLEdBQUcsU0FBUztvQkFDdkIsR0FBRyxFQUFFLElBQUk7b0JBQ1QsR0FBRyxFQUFFLFNBQVM7aUJBQ2YsQ0FBQyxDQUFDO2dCQUVILFNBQVMsRUFBRSxDQUFDO1lBQ2QsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFBQSxDQUFDO0lBRUssNkNBQWtCLEdBQXpCLFVBQTBCLFlBQVksRUFBRSxXQUFXO1FBQ2pELElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxRQUFRLENBQUM7UUFFYixFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDO1FBRUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQyxJQUFJO1lBQ3RCLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNoQyxJQUFJLFNBQVMsQ0FBQztZQUNkLElBQUksS0FBSyxDQUFDO1lBQ1YsSUFBSSxNQUFNLENBQUM7WUFDWCxJQUFJLEtBQUssQ0FBQztZQUVWLElBQUksQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUN2QyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEtBQUssQ0FBQyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNyRixTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQ2hHLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ04sU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQ2xELENBQUM7Z0JBR0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUNsQixLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO29CQUN6QyxNQUFNLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDO2dCQUM1QyxDQUFDO2dCQUVELFFBQVEsR0FBRyxTQUFTLENBQUM7Z0JBRXJCLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFFOUMsU0FBUyxFQUFFLENBQUM7WUFDZCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNwRSxTQUFTLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztnQkFFeEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO29CQUNsQixLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7b0JBQzNDLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztnQkFDOUMsQ0FBQztnQkFFRCxRQUFRLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQztnQkFFckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBRWhELFNBQVMsSUFBSSxDQUFDLENBQUM7WUFDakIsQ0FBQztZQUlELEVBQUUsQ0FBQyxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUN6QixJQUFJLENBQUMsa0JBQWtCLENBQUM7b0JBQ3RCLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtvQkFDcEIsR0FBRyxFQUFFLFNBQVMsQ0FBQyxHQUFHO2lCQUNuQixDQUFDLENBQUM7Z0JBRUgsTUFBTSxDQUFDO1lBQ1QsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUVELElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUFBLENBQUM7SUFFSyw4Q0FBbUIsR0FBMUI7UUFDRSxJQUFJLGFBQWEsRUFBRSxZQUFZLENBQUM7UUFFaEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNkLENBQUM7UUFFRCxhQUFhLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFVBQUMsSUFBSTtZQUN2QyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQztZQUNuQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUM7UUFFaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxHQUFHLEdBQUcsYUFBYSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFFekUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDaEIsWUFBWSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxVQUFDLElBQUk7Z0JBQ3RDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO2dCQUNuQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDO1lBQ3hDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUM7WUFFaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDeEUsQ0FBQztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQUEsQ0FBQztJQUVLLHdDQUFhLEdBQXBCLFVBQXFCLElBQUk7UUFDdkIsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQyxJQUFJO1lBQ3ZDLE1BQU0sQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNoRCxDQUFDO0lBQUEsQ0FBQztJQUVLLCtDQUFvQixHQUEzQixVQUE0QixNQUFNLEVBQUUsV0FBVztRQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUs7YUFDZCxNQUFNLENBQUMsVUFBQyxJQUFJO1lBQ1gsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBRWhDLE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVztnQkFDekIsUUFBUSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7Z0JBQy9FLFFBQVEsQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDakYsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO0lBQ2xCLENBQUM7SUFBQSxDQUFDO0lBRUssdUNBQVksR0FBbkIsVUFBb0IsSUFBSTtRQUN0QixNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFBQSxDQUFDO0lBRUssb0NBQVMsR0FBaEIsVUFBaUIsU0FBUyxFQUFFLFVBQVU7UUFDcEMsSUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzFELElBQU0sZUFBZSxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztRQUU1RCxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsZUFBZSxFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUVqRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUFBLENBQUM7SUFFSyxxQ0FBVSxHQUFqQixVQUFrQixVQUFVO1FBQzFCLElBQUksV0FBVyxDQUFDO1FBRWhCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLO1lBQ3BDLEVBQUUsQ0FBQyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixXQUFXLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDZixDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFBQSxDQUFDO0lBRUssNENBQWlCLEdBQXhCLFVBQXlCLElBQUk7UUFDM0IsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFVBQUMsSUFBSTtZQUN6QyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUVELE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQUEsQ0FBQztJQUNKLHVCQUFDO0FBQUQsQ0EvZEEsQUErZEMsSUFBQTtBQS9kWSw0Q0FBZ0I7QUFrZTdCLE9BQU87S0FDSixNQUFNLENBQUMsd0JBQXdCLENBQUM7S0FDaEMsT0FBTyxDQUFDLGNBQWMsRUFBRTtJQUN2QixNQUFNLENBQUMsVUFBVSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxJQUFJO1FBQzVDLElBQU0sT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFcEUsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNqQixDQUFDLENBQUE7QUFDSCxDQUFDLENBQUMsQ0FBQzs7Ozs7QUNwaEJMLE9BQU87S0FDRixNQUFNLENBQUMsd0JBQXdCLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFMUMsZ0NBQThCO0FBQzlCLDhCQUE0Qjs7Ozs7QUNDNUIsQ0FBQztJQUNHO1FBS0ksNkJBQ0ksWUFBeUMsRUFDekMsUUFBaUMsRUFDakMsZ0JBQWlEO1lBRWpELElBQUksQ0FBQyxhQUFhLEdBQUcsWUFBWSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxnQkFBZ0IsQ0FBQztRQUM5QyxDQUFDO1FBRU0seUNBQVcsR0FBbEIsVUFBbUIsTUFBTSxFQUFFLEdBQUssRUFBRyxTQUFXLEVBQUcsYUFBZTtZQUFoRSxpQkEwQkM7WUF4Qk8sSUFBQSwwQkFBUSxFQUNSLGdDQUFXLEVBQ1gsa0JBQUksQ0FDRztZQUNYLElBQUksTUFBTSxDQUFDO1lBRVgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDUCxJQUFNLFlBQVksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNsRyxNQUFNLENBQUMsYUFBYSxJQUFJLElBQUk7b0JBQ3hCLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztvQkFDcEYsWUFBWSxDQUFDO1lBQ3JCLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNYLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3RGLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUNkLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsSUFBSTtvQkFDakQsTUFBTSxHQUFHLFNBQVMsR0FBRyxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2hGLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUVELE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDbEIsQ0FBQztRQUVNLCtDQUFpQixHQUF4QixVQUF5QixRQUFRLEVBQUUsS0FBSztZQUNwQyxJQUNJLGNBQWMsR0FBRyxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxRQUFRLENBQUMsV0FBVyxFQUN6RSxlQUFlLEdBQUcsUUFBUSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLFlBQVksRUFDN0UsVUFBVSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLEtBQUssQ0FBQyxLQUFLLEVBQ25GLFdBQVcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUN0RixNQUFNLEdBQUcsQ0FBQyxFQUNWLFNBQVMsR0FBRyxFQUFFLENBQUM7WUFFbkIsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNsRSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLFdBQVcsR0FBRyxlQUFlLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQzlFLFNBQVMsQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLEdBQUcsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDOUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxlQUFlLEdBQUcsSUFBSSxDQUFDO2dCQUNsRCxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLFVBQVUsR0FBRyxlQUFlLEdBQUcsV0FBVyxHQUFHLElBQUksQ0FBQztnQkFDNUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNqQyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxVQUFVLEdBQUcsY0FBYyxHQUFHLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUM5RSxTQUFTLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQzdDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxHQUFHLGNBQWMsR0FBRyxVQUFVLEdBQUcsSUFBSSxDQUFDO2dCQUM1RSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLGNBQWMsR0FBRyxJQUFJLENBQUM7Z0JBQ2hELFNBQVMsQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDbEMsQ0FBQztZQUVELENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUNMLDBCQUFDO0lBQUQsQ0FwRUEsQUFvRUMsSUFBQTtJQUdELElBQU0sU0FBUyxHQUFHLG1CQUFtQixNQUF3QjtRQUN6RCxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLElBQUksRUFBRSxVQUFVLEtBQWdCLEVBQUUsT0FBZSxFQUFFLEtBQVU7Z0JBQ3pELElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBRTVDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFVBQUMsS0FBSztvQkFDdkIsUUFBUSxDQUFDLEtBQUssRUFBRTt3QkFDWixNQUFNLEVBQUUsS0FBSztxQkFDaEIsQ0FBQyxDQUFDO2dCQUNQLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztTQUNKLENBQUE7SUFDTCxDQUFDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixPQUFPLENBQUMsaUJBQWlCLEVBQUUsbUJBQW1CLENBQUM7U0FDL0MsU0FBUyxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUM5QyxDQUFDOzs7QUNoR0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiZXhwb3J0IGNsYXNzIEFkZFRpbGVEaWFsb2cge1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgaWNvbjogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBhbW91bnQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIEFkZFRpbGVEaWFsb2dDb250cm9sbGVyIGltcGxlbWVudHMgbmcuSUNvbnRyb2xsZXIge1xuICAgIHB1YmxpYyBkZWZhdWx0VGlsZXM6IFtBZGRUaWxlRGlhbG9nW11dO1xuICAgIHB1YmxpYyBncm91cHM6IGFueTtcbiAgICBwdWJsaWMgdG90YWxUaWxlczogbnVtYmVyID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBncm91cHM6IGFueSxcbiAgICAgICAgcHVibGljIGFjdGl2ZUdyb3VwSW5kZXg6IG51bWJlcixcbiAgICAgICAgd2lkZ2V0TGlzdDogW0FkZFRpbGVEaWFsb2dbXV0sXG4gICAgICAgIHB1YmxpYyAkbWREaWFsb2c6IGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ1NlcnZpY2VcbiAgICApIHtcbiAgICAgICAgdGhpcy5hY3RpdmVHcm91cEluZGV4ID0gXy5pc051bWJlcihhY3RpdmVHcm91cEluZGV4KSA/IGFjdGl2ZUdyb3VwSW5kZXggOiAtMTtcbiAgICAgICAgdGhpcy5kZWZhdWx0VGlsZXMgPSBfLmNsb25lRGVlcCh3aWRnZXRMaXN0KTtcbiAgICAgICAgdGhpcy5ncm91cHMgPSBfLm1hcChncm91cHMsIGZ1bmN0aW9uIChncm91cCkge1xuICAgICAgICAgICAgcmV0dXJuIGdyb3VwWyd0aXRsZSddO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkKCkge1xuICAgICAgICB0aGlzLiRtZERpYWxvZy5oaWRlKHtcbiAgICAgICAgICAgIGdyb3VwSW5kZXg6IHRoaXMuYWN0aXZlR3JvdXBJbmRleCxcbiAgICAgICAgICAgIHdpZGdldHM6IHRoaXMuZGVmYXVsdFRpbGVzXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBwdWJsaWMgY2FuY2VsKCkge1xuICAgICAgICB0aGlzLiRtZERpYWxvZy5jYW5jZWwoKTtcbiAgICB9O1xuXG4gICAgcHVibGljIGVuY3JlYXNlKGdyb3VwSW5kZXg6IG51bWJlciwgd2lkZ2V0SW5kZXg6IG51bWJlcikge1xuICAgICAgICBjb25zdCB3aWRnZXQgPSB0aGlzLmRlZmF1bHRUaWxlc1tncm91cEluZGV4XVt3aWRnZXRJbmRleF07XG4gICAgICAgIHdpZGdldC5hbW91bnQrKztcbiAgICAgICAgdGhpcy50b3RhbFRpbGVzKys7XG4gICAgfTtcblxuICAgIHB1YmxpYyBkZWNyZWFzZShncm91cEluZGV4OiBudW1iZXIsIHdpZGdldEluZGV4OiBudW1iZXIpIHtcbiAgICAgICAgY29uc3Qgd2lkZ2V0ID0gdGhpcy5kZWZhdWx0VGlsZXNbZ3JvdXBJbmRleF1bd2lkZ2V0SW5kZXhdO1xuICAgICAgICB3aWRnZXQuYW1vdW50ID0gd2lkZ2V0LmFtb3VudCA/IHdpZGdldC5hbW91bnQgLSAxIDogMDtcbiAgICAgICAgdGhpcy50b3RhbFRpbGVzID0gdGhpcy50b3RhbFRpbGVzID8gdGhpcy50b3RhbFRpbGVzIC0gMSA6IDA7XG4gICAgfTtcbn0iLCJpbXBvcnQge1xuICBBZGRUaWxlRGlhbG9nLFxuICBBZGRUaWxlRGlhbG9nQ29udHJvbGxlclxufSBmcm9tICcuL0FkZFRpbGVEaWFsb2dDb250cm9sbGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBJQWRkVGlsZURpYWxvZ1NlcnZpY2Uge1xuICBzaG93KGdyb3VwcywgYWN0aXZlR3JvdXBJbmRleCk6IGFuZ3VsYXIuSVByb21pc2UgPCBhbnkgPiA7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFkZFRpbGVEaWFsb2dwcm92aWRlciB7XG4gIGNvbmZpZ1dpZGdldExpc3QobGlzdDogW0FkZFRpbGVEaWFsb2dbXV0pOiB2b2lkO1xufVxuXG57XG4gIGNvbnN0IHNldFRyYW5zbGF0aW9ucyA9IGZ1bmN0aW9uKCRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XG4gICAgY29uc3QgcGlwVHJhbnNsYXRlID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlUHJvdmlkZXInKSA/ICRpbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZVByb3ZpZGVyJykgOiBudWxsO1xuICAgIGlmIChwaXBUcmFuc2xhdGUpIHtcbiAgICAgICg8YW55PnBpcFRyYW5zbGF0ZSkuc2V0VHJhbnNsYXRpb25zKCdlbicsIHtcbiAgICAgICAgREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19USVRMRTogJ0FkZCBjb21wb25lbnQnLFxuICAgICAgICBEQVNIQk9BUkRfQUREX1RJTEVfRElBTE9HX1VTRV9IT1RfS0VZUzogJ1VzZSBcIkVudGVyXCIgb3IgXCIrXCIgYnV0dG9ucyBvbiBrZXlib2FyZCB0byBlbmNyZWFzZSBhbmQgXCJEZWxldGVcIiBvciBcIi1cIiB0byBkZWNyZWFzZSB0aWxlcyBhbW91bnQnLFxuICAgICAgICBEQVNIQk9BUkRfQUREX1RJTEVfRElBTE9HX0NSRUFURV9ORVdfR1JPVVA6ICdDcmVhdGUgbmV3IGdyb3VwJ1xuICAgICAgfSk7XG4gICAgICAoPGFueT5waXBUcmFuc2xhdGUpLnNldFRyYW5zbGF0aW9ucygncnUnLCB7XG4gICAgICAgIERBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfVElUTEU6ICfQlNC+0LHQsNCy0LjRgtGMINC60L7QvNC/0L7QvdC10L3RgicsXG4gICAgICAgIERBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfVVNFX0hPVF9LRVlTOiAn0JjRgdC/0L7Qu9GM0LfRg9C50YLQtSBcIkVudGVyXCIg0LjQu9C4IFwiK1wiINC60LvQsNCy0LjRiNC4INC90LAg0LrQu9Cw0LLQuNCw0YLRg9GA0LUg0YfRgtC+0LHRiyDRg9Cy0LXQu9C40YfQuNGC0Ywg0LggXCJEZWxldGVcIiBvciBcIi1cIiDRh9GC0L7QsdGLINGD0LzQtdC90YjQuNGC0Ywg0LrQvtC70LjRh9C10YHRgtCy0L4g0YLQsNC50LvQvtCyJyxcbiAgICAgICAgREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19DUkVBVEVfTkVXX0dST1VQOiAn0KHQvtC30LTQsNGC0Ywg0L3QvtCy0YPRjiDQs9GA0YPQv9C/0YMnXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjbGFzcyBBZGRUaWxlRGlhbG9nU2VydmljZSBpbXBsZW1lbnRzIElBZGRUaWxlRGlhbG9nU2VydmljZSB7XG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxuICAgICAgcHJpdmF0ZSB3aWRnZXRMaXN0OiBbQWRkVGlsZURpYWxvZ1tdXSxcbiAgICAgIHByaXZhdGUgJG1kRGlhbG9nOiBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dTZXJ2aWNlXG4gICAgKSB7fVxuXG4gICAgcHVibGljIHNob3coZ3JvdXBzLCBhY3RpdmVHcm91cEluZGV4KSB7XG4gICAgICByZXR1cm4gdGhpcy4kbWREaWFsb2dcbiAgICAgICAgLnNob3coe1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYWRkX3RpbGVfZGlhbG9nL0FkZFRpbGUuaHRtbCcsXG4gICAgICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgICAgICBjb250cm9sbGVyOiBBZGRUaWxlRGlhbG9nQ29udHJvbGxlcixcbiAgICAgICAgICBjb250cm9sbGVyQXM6ICdkaWFsb2dDdHJsJyxcbiAgICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiB0cnVlLFxuICAgICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICAgIGdyb3VwczogKCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gZ3JvdXBzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjdGl2ZUdyb3VwSW5kZXg6ICgpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2ZUdyb3VwSW5kZXg7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgd2lkZ2V0TGlzdDogKCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gKDxhbnk+dGhpcy53aWRnZXRMaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBjbGFzcyBBZGRUaWxlRGlhbG9nUHJvdmlkZXIgaW1wbGVtZW50cyBJQWRkVGlsZURpYWxvZ3Byb3ZpZGVyIHtcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBBZGRUaWxlRGlhbG9nU2VydmljZTtcbiAgICBwcml2YXRlIF93aWRnZXRMaXN0OiBbQWRkVGlsZURpYWxvZ1tdXSA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgICBwdWJsaWMgY29uZmlnV2lkZ2V0TGlzdCA9IGZ1bmN0aW9uIChsaXN0OiBbQWRkVGlsZURpYWxvZ1tdXSkge1xuICAgICAgdGhpcy5fd2lkZ2V0TGlzdCA9IGxpc3Q7XG4gICAgfTtcblxuICAgIHB1YmxpYyAkZ2V0KCRtZERpYWxvZzogYW5ndWxhci5tYXRlcmlhbC5JRGlhbG9nU2VydmljZSkge1xuICAgICAgXCJuZ0luamVjdFwiO1xuXG4gICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxuICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IEFkZFRpbGVEaWFsb2dTZXJ2aWNlKHRoaXMuX3dpZGdldExpc3QsICRtZERpYWxvZyk7XG5cbiAgICAgIHJldHVybiB0aGlzLl9zZXJ2aWNlO1xuICAgIH1cbiAgfVxuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdwaXBBZGREYXNoYm9hcmRUaWxlRGlhbG9nJylcbiAgICAuY29uZmlnKHNldFRyYW5zbGF0aW9ucylcbiAgICAucHJvdmlkZXIoJ3BpcEFkZFRpbGVEaWFsb2cnLCBBZGRUaWxlRGlhbG9nUHJvdmlkZXIpO1xufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdwaXBBZGREYXNoYm9hcmRUaWxlRGlhbG9nJywgWyduZ01hdGVyaWFsJ10pO1xuXG5pbXBvcnQgJy4vQWRkVGlsZURpYWxvZ0NvbnRyb2xsZXInO1xuaW1wb3J0ICcuL0FkZFRpbGVQcm92aWRlcic7IiwiaW1wb3J0IHtcbiAgTWVudVRpbGVTZXJ2aWNlXG59IGZyb20gJy4uL21lbnVfdGlsZS9NZW51VGlsZVNlcnZpY2UnO1xuaW1wb3J0IHtcbiAgSVRpbGVDb25maWdTZXJ2aWNlXG59IGZyb20gJy4uL2NvbmZpZ190aWxlX2RpYWxvZy9Db25maWdEaWFsb2dTZXJ2aWNlJztcblxue1xuICBjbGFzcyBDYWxlbmRhclRpbGVDb250cm9sbGVyIGV4dGVuZHMgTWVudVRpbGVTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgIHByaXZhdGUgcGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2U6IElUaWxlQ29uZmlnU2VydmljZVxuICAgICkge1xuICAgICAgc3VwZXIoKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xuICAgICAgICB0aGlzLm1lbnUgPSB0aGlzLm9wdGlvbnMubWVudSA/IF8udW5pb24odGhpcy5tZW51LCB0aGlzLm9wdGlvbnMubWVudSkgOiB0aGlzLm1lbnU7XG4gICAgICAgIHRoaXMubWVudS5wdXNoKHtcbiAgICAgICAgICB0aXRsZTogJ0NvbmZpZ3VyYXRlJyxcbiAgICAgICAgICBjbGljazogKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vbkNvbmZpZ0NsaWNrKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vcHRpb25zLmRhdGUgPSB0aGlzLm9wdGlvbnMuZGF0ZSB8fCBuZXcgRGF0ZSgpO1xuICAgICAgICB0aGlzLmNvbG9yID0gdGhpcy5vcHRpb25zLmNvbG9yIHx8ICdibHVlJztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uQ29uZmlnQ2xpY2soKSB7XG4gICAgICB0aGlzLnBpcFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlLnNob3coe1xuICAgICAgICBkaWFsb2dDbGFzczogJ3BpcC1jYWxlbmRhci1jb25maWcnLFxuICAgICAgICBsb2NhbHM6IHtcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvcixcbiAgICAgICAgICBzaXplOiB0aGlzLm9wdGlvbnMuc2l6ZSxcbiAgICAgICAgICBkYXRlOiB0aGlzLm9wdGlvbnMuZGF0ZSxcbiAgICAgICAgfSxcbiAgICAgICAgZXh0ZW5zaW9uVXJsOiAnY2FsZW5kYXJfdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCdcbiAgICAgIH0sIChyZXN1bHQ6IGFueSkgPT4ge1xuICAgICAgICB0aGlzLmNoYW5nZVNpemUocmVzdWx0LnNpemUpO1xuXG4gICAgICAgIHRoaXMuY29sb3IgPSByZXN1bHQuY29sb3I7XG4gICAgICAgIHRoaXMub3B0aW9ucy5jb2xvciA9IHJlc3VsdC5jb2xvcjtcbiAgICAgICAgdGhpcy5vcHRpb25zLmRhdGUgPSByZXN1bHQuZGF0ZTtcbiAgICAgIH0pO1xuICAgIH1cblxuICB9XG5cbiAgY29uc3QgQ2FsZW5kYXJUaWxlOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICBiaW5kaW5nczoge1xuICAgICAgb3B0aW9uczogJz1waXBPcHRpb25zJyxcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IENhbGVuZGFyVGlsZUNvbnRyb2xsZXIsXG4gICAgdGVtcGxhdGVVcmw6ICdjYWxlbmRhcl90aWxlL0NhbGVuZGFyVGlsZS5odG1sJ1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXG4gICAgLmNvbXBvbmVudCgncGlwQ2FsZW5kYXJUaWxlJywgQ2FsZW5kYXJUaWxlKTtcblxufSIsImV4cG9ydCBpbnRlcmZhY2UgSURhc2hib2FyZFRpbGUge1xuICAgIG9wdGlvbnM6IGFueTtcbiAgICBjb2xvcjogc3RyaW5nO1xuICAgIHNpemU6IE9iamVjdCB8IHN0cmluZyB8IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIERhc2hib2FyZFRpbGUgaW1wbGVtZW50cyBJRGFzaGJvYXJkVGlsZSB7XG4gICAgcHVibGljIG9wdGlvbnM6IGFueTtcbiAgICBwdWJsaWMgY29sb3I6IHN0cmluZztcbiAgICBwdWJsaWMgc2l6ZTogT2JqZWN0IHwgc3RyaW5nIHwgbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IH1cbn0iLCJcbmNsYXNzIFRpbGVDb2xvcnMge1xuICAgIHN0YXRpYyBhbGw6IHN0cmluZ1tdID0gWydwdXJwbGUnLCAnZ3JlZW4nLCAnZ3JheScsICdvcmFuZ2UnLCAnYmx1ZSddO1xufVxuXG5jbGFzcyBUaWxlU2l6ZXMge1xuICAgIHN0YXRpYyBhbGw6IGFueSA9IFt7XG4gICAgICAgICAgICBuYW1lOiAnREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX1NNQUxMJyxcbiAgICAgICAgICAgIGlkOiAnMTEnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfV0lERScsXG4gICAgICAgICAgICBpZDogJzIxJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX0xBUkdFJyxcbiAgICAgICAgICAgIGlkOiAnMjInXG4gICAgICAgIH1cbiAgICBdO1xufVxuXG5leHBvcnQgY2xhc3MgVGlsZUNvbmZpZ0RpYWxvZ0NvbnRyb2xsZXIge1xuICAgIHB1YmxpYyBjb2xvcnM6IHN0cmluZ1tdID0gVGlsZUNvbG9ycy5hbGw7XG4gICAgcHVibGljIHNpemVzOiBhbnkgPSBUaWxlU2l6ZXMuYWxsO1xuICAgIHB1YmxpYyBzaXplSWQ6IHN0cmluZyA9IFRpbGVTaXplcy5hbGxbMF0uaWQ7XG4gICAgcHVibGljIG9uQ2FuY2VsOiBGdW5jdGlvbjtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgcGFyYW1zLFxuICAgICAgICBwdWJsaWMgZXh0ZW5zaW9uVXJsLFxuICAgICAgICBwdWJsaWMgJG1kRGlhbG9nOiBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dTZXJ2aWNlXG4gICAgKSB7XG4gICAgICAgIFwibmdJbmplY3RcIjtcblxuICAgICAgICBhbmd1bGFyLmV4dGVuZCh0aGlzLCB0aGlzLnBhcmFtcyk7XG4gICAgICAgIHRoaXMuc2l6ZUlkID0gJycgKyB0aGlzLnBhcmFtcy5zaXplLmNvbFNwYW4gKyB0aGlzLnBhcmFtcy5zaXplLnJvd1NwYW47XG5cbiAgICAgICAgdGhpcy5vbkNhbmNlbCA9ICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLmNhbmNlbCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIG9uQXBwbHkodXBkYXRlZERhdGEpIHtcbiAgICAgICAgdGhpc1snc2l6ZSddLnNpemVYID0gTnVtYmVyKHRoaXMuc2l6ZUlkLnN1YnN0cigwLCAxKSk7XG4gICAgICAgIHRoaXNbJ3NpemUnXS5zaXplWSA9IE51bWJlcih0aGlzLnNpemVJZC5zdWJzdHIoMSwgMSkpO1xuICAgICAgICB0aGlzLiRtZERpYWxvZy5oaWRlKHVwZGF0ZWREYXRhKTtcbiAgICB9XG59IiwieyAgICBcbiAgICBpbnRlcmZhY2UgSVRpbGVDb25maWdFeHRlbmRDb21wb25lbnRCaW5kaW5ncyB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcblxuICAgICAgICBwaXBFeHRlbnNpb25Vcmw6IGFueTtcbiAgICAgICAgcGlwRGlhbG9nU2NvcGU6IGFueTtcbiAgICAgICAgcGlwQXBwbHk6IGFueTtcbiAgICB9XG5cbiAgICBjb25zdCBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3M6IElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3MgPSB7XG4gICAgICAgIHBpcEV4dGVuc2lvblVybDogJzwnLFxuICAgICAgICBwaXBEaWFsb2dTY29wZTogJzwnLFxuICAgICAgICBwaXBBcHBseTogJyYnXG4gICAgfVxuXG4gICAgY2xhc3MgVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudENoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogbmcuSUNoYW5nZXNPYmplY3Q8YW55PjtcblxuICAgICAgICBwaXBFeHRlbnNpb25Vcmw6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XG4gICAgICAgIHBpcERpYWxvZ1Njb3BlOiBuZy5JQ2hhbmdlc09iamVjdDxuZy5JU2NvcGU+O1xuXG4gICAgICAgIHBpcEFwcGx5OiBuZy5JQ2hhbmdlc09iamVjdDwoe3VwZGF0ZWREYXRhOiBhbnl9KSA9PiBuZy5JUHJvbWlzZTx2b2lkPj47XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QXR0cmlidXRlcyBleHRlbmRzIG5nLklBdHRyaWJ1dGVzIHtcbiAgICAgICAgcGlwRXh0ZW5zaW9uVXJsOiBzdHJpbmdcbiAgICB9XG5cbiAgICBjbGFzcyBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50Q29udHJvbGxlciBpbXBsZW1lbnRzIElUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3Mge1xuICAgICAgICBwdWJsaWMgcGlwRXh0ZW5zaW9uVXJsOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyBwaXBEaWFsb2dTY29wZTogbmcuSVNjb3BlO1xuICAgICAgICBwdWJsaWMgcGlwQXBwbHk6IChwYXJhbToge3VwZGF0ZWREYXRhOiBhbnl9KSA9PiBuZy5JUHJvbWlzZTx2b2lkPjtcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJHRlbXBsYXRlUmVxdWVzdDogYW5ndWxhci5JVGVtcGxhdGVSZXF1ZXN0U2VydmljZSxcbiAgICAgICAgICAgIHByaXZhdGUgJGNvbXBpbGU6IGFuZ3VsYXIuSUNvbXBpbGVTZXJ2aWNlLFxuICAgICAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLCBcbiAgICAgICAgICAgIHByaXZhdGUgJGVsZW1lbnQ6IEpRdWVyeSwgXG4gICAgICAgICAgICBwcml2YXRlICRhdHRyczogSVRpbGVDb25maWdFeHRlbmRDb21wb25lbnRBdHRyaWJ1dGVzXG4gICAgICAgICkgeyB9XG5cbiAgICAgICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudENoYW5nZXMpIHtcbiAgICAgICAgICAgIGlmIChjaGFuZ2VzLnBpcERpYWxvZ1Njb3BlKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGNoYW5nZXMucGlwRGlhbG9nU2NvcGUuY3VycmVudFZhbHVlWyckc2NvcGUnXTtcbiAgICAgICAgICAgICAgICBhbmd1bGFyLmV4dGVuZCh0aGlzLCBjaGFuZ2VzLnBpcERpYWxvZ1Njb3BlLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2hhbmdlcy5waXBFeHRlbnNpb25VcmwgJiYgY2hhbmdlcy5waXBFeHRlbnNpb25VcmwuY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kdGVtcGxhdGVSZXF1ZXN0KGNoYW5nZXMucGlwRXh0ZW5zaW9uVXJsLmN1cnJlbnRWYWx1ZSwgZmFsc2UpLnRoZW4oKGh0bWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCdwaXAtZXh0ZW5zaW9uLXBvaW50JykucmVwbGFjZVdpdGgodGhpcy4kY29tcGlsZShodG1sKSh0aGlzLiRzY29wZSkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uQXBwbHkoKSB7XG4gICAgICAgICAgICB0aGlzLnBpcEFwcGx5KHt1cGRhdGVkRGF0YTogdGhpc30pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgcGlwVGlsZUNvbmZpZ0NvbXBvbmVudDogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ0V4dGVuZENvbXBvbmVudC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogVGlsZUNvbmZpZ0V4dGVuZENvbXBvbmVudENvbnRyb2xsZXIsXG4gICAgICAgIGJpbmRpbmdzOiBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50QmluZGluZ3NcbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ3BpcENvbmZpZ0Rhc2hib2FyZFRpbGVEaWFsb2cnKVxuICAgICAgICAuY29tcG9uZW50KCdwaXBUaWxlQ29uZmlnRXh0ZW5kQ29tcG9uZW50JywgcGlwVGlsZUNvbmZpZ0NvbXBvbmVudCk7XG59IiwiaW1wb3J0IHsgVGlsZUNvbmZpZ0RpYWxvZ0NvbnRyb2xsZXIgfSBmcm9tICcuL0NvbmZpZ0RpYWxvZ0NvbnRyb2xsZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIElUaWxlQ29uZmlnU2VydmljZSB7XG4gICAgc2hvdyhwYXJhbXM6IElUaWxlQ29uZmlnRGlhbG9nT3B0aW9ucywgc3VjY2Vzc0NhbGxiYWNrID8gOiAoa2V5KSA9PiB2b2lkLCBjYW5jZWxDYWxsYmFjayA/IDogKCkgPT4gdm9pZCk6IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVGlsZUNvbmZpZ0RpYWxvZ09wdGlvbnMgZXh0ZW5kcyBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dPcHRpb25zIHtcbiAgICBkaWFsb2dDbGFzcz86IHN0cmluZztcbiAgICBleHRlbnNpb25Vcmw/OiBzdHJpbmc7XG4gICAgZXZlbnQ/OiBhbnk7XG59XG5cbntcbiAgICBjb25zdCBzZXRUcmFuc2xhdGlvbnMgPSBmdW5jdGlvbigkaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZSkge1xuICAgICAgICBjb25zdCBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGVQcm92aWRlcicpID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlUHJvdmlkZXInKSA6IG51bGw7XG4gICAgICAgIGlmIChwaXBUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgICggPCBhbnkgPiBwaXBUcmFuc2xhdGUpLnNldFRyYW5zbGF0aW9ucygnZW4nLCB7XG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19USVRMRTogJ0VkaXQgdGlsZScsXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX1NNQUxMOiAnU21hbGwnLFxuICAgICAgICAgICAgICAgIERBU0hCT0FSRF9USUxFX0NPTkZJR19ESUFMT0dfU0laRV9XSURFOiAnV2lkZScsXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX0xBUkdFOiAnTGFyZ2UnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICggPCBhbnkgPiBwaXBUcmFuc2xhdGUpLnNldFRyYW5zbGF0aW9ucygncnUnLCB7XG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19USVRMRTogJ9CY0LfQvNC10L3QuNGC0Ywg0LLQuNC00LbQtdGCJyxcbiAgICAgICAgICAgICAgICBEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1NJWkVfU01BTEw6ICfQnNCw0LvQtdC9LicsXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX1dJREU6ICfQqNC40YDQvtC60LjQuScsXG4gICAgICAgICAgICAgICAgREFTSEJPQVJEX1RJTEVfQ09ORklHX0RJQUxPR19TSVpFX0xBUkdFOiAn0JHQvtC70YzRiNC+0LknXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsYXNzIFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlIHtcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHVibGljICRtZERpYWxvZzogYW5ndWxhci5tYXRlcmlhbC5JRGlhbG9nU2VydmljZVxuICAgICAgICApIHt9XG5cbiAgICAgICAgcHVibGljIHNob3cocGFyYW1zOiBJVGlsZUNvbmZpZ0RpYWxvZ09wdGlvbnMsIHN1Y2Nlc3NDYWxsYmFjayA/IDogKGtleSkgPT4gdm9pZCwgY2FuY2VsQ2FsbGJhY2sgPyA6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLnNob3coe1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRFdmVudDogcGFyYW1zLmV2ZW50LFxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogcGFyYW1zLnRlbXBsYXRlVXJsIHx8ICdkaWFsb2dzL3RpbGVfY29uZmlnL0NvbmZpZ0RpYWxvZy5odG1sJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogVGlsZUNvbmZpZ0RpYWxvZ0NvbnRyb2xsZXIsXG4gICAgICAgICAgICAgICAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBleHRlbnNpb25Vcmw6IHBhcmFtcy5leHRlbnNpb25VcmwsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcy5sb2NhbHNcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tPdXRzaWRlVG9DbG9zZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ2FsbGJhY2soa2V5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbmNlbENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxDYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ3BpcENvbmZpZ0Rhc2hib2FyZFRpbGVEaWFsb2cnKVxuICAgICAgICAuY29uZmlnKHNldFRyYW5zbGF0aW9ucylcbiAgICAgICAgLnNlcnZpY2UoJ3BpcFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlJywgVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2UpO1xufSIsIlxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcENvbmZpZ0Rhc2hib2FyZFRpbGVEaWFsb2cnLCBbJ25nTWF0ZXJpYWwnXSk7XG5cbmltcG9ydCAnLi9Db25maWdEaWFsb2dDb250cm9sbGVyJztcbmltcG9ydCAnLi9Db25maWdEaWFsb2dTZXJ2aWNlJztcbmltcG9ydCAnLi9Db25maWdEaWFsb2dFeHRlbmRDb21wb25lbnQnOyIsImltcG9ydCB7XG4gIElUaWxlVGVtcGxhdGVTZXJ2aWNlXG59IGZyb20gJy4uL3V0aWxpdHkvVGlsZVRlbXBsYXRlVXRpbGl0eSc7XG5pbXBvcnQge1xuICBJQWRkVGlsZURpYWxvZ1NlcnZpY2UsXG4gIElBZGRUaWxlRGlhbG9ncHJvdmlkZXJcbn0gZnJvbSAnLi4vYWRkX3RpbGVfZGlhbG9nL0FkZFRpbGVQcm92aWRlcidcblxue1xuICBjb25zdCBzZXRUcmFuc2xhdGlvbnMgPSBmdW5jdGlvbiAoJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UpIHtcbiAgICBjb25zdCBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGVQcm92aWRlcicpID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlUHJvdmlkZXInKSA6IG51bGw7XG4gICAgaWYgKHBpcFRyYW5zbGF0ZSkge1xuICAgICAgKCA8IGFueSA+IHBpcFRyYW5zbGF0ZSkuc2V0VHJhbnNsYXRpb25zKCdlbicsIHtcbiAgICAgICAgRFJPUF9UT19DUkVBVEVfTkVXX0dST1VQOiAnRHJvcCBoZXJlIHRvIGNyZWF0ZSBuZXcgZ3JvdXAnLFxuICAgICAgfSk7XG4gICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ3J1Jywge1xuICAgICAgICBEUk9QX1RPX0NSRUFURV9ORVdfR1JPVVA6ICfQn9C10YDQtdGC0LDRidC40YLQtSDRgdGO0LTQsCDQtNC70Y8g0YHQvtC30LTQsNC90LjRjyDQvdC+0LLQvtC5INCz0YDRg9C/0L/RiydcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGNvbmZpZ3VyZUF2YWlsYWJsZVdpZGdldHMgPSBmdW5jdGlvbiAocGlwQWRkVGlsZURpYWxvZ1Byb3ZpZGVyOiBJQWRkVGlsZURpYWxvZ3Byb3ZpZGVyKSB7XG4gICAgcGlwQWRkVGlsZURpYWxvZ1Byb3ZpZGVyLmNvbmZpZ1dpZGdldExpc3QoW1xuICAgICAgW3tcbiAgICAgICAgICB0aXRsZTogJ0V2ZW50JyxcbiAgICAgICAgICBpY29uOiAnZG9jdW1lbnQnLFxuICAgICAgICAgIG5hbWU6ICdldmVudCcsXG4gICAgICAgICAgYW1vdW50OiAwXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0aXRsZTogJ1Bvc2l0aW9uJyxcbiAgICAgICAgICBpY29uOiAnbG9jYXRpb24nLFxuICAgICAgICAgIG5hbWU6ICdwb3NpdGlvbicsXG4gICAgICAgICAgYW1vdW50OiAwXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBbe1xuICAgICAgICAgIHRpdGxlOiAnQ2FsZW5kYXInLFxuICAgICAgICAgIGljb246ICdkYXRlJyxcbiAgICAgICAgICBuYW1lOiAnY2FsZW5kYXInLFxuICAgICAgICAgIGFtb3VudDogMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGl0bGU6ICdTdGlja3kgTm90ZXMnLFxuICAgICAgICAgIGljb246ICdub3RlLXRha2UnLFxuICAgICAgICAgIG5hbWU6ICdub3RlcycsXG4gICAgICAgICAgYW1vdW50OiAwXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0aXRsZTogJ1N0YXRpc3RpY3MnLFxuICAgICAgICAgIGljb246ICd0ci1zdGF0aXN0aWNzJyxcbiAgICAgICAgICBuYW1lOiAnc3RhdGlzdGljcycsXG4gICAgICAgICAgYW1vdW50OiAwXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICBdKTtcbiAgfVxuXG4gIGNsYXNzIGRyYWdnYWJsZU9wdGlvbnMge1xuICAgIHRpbGVXaWR0aDogbnVtYmVyO1xuICAgIHRpbGVIZWlnaHQ6IG51bWJlcjtcbiAgICBndXR0ZXI6IG51bWJlcjtcbiAgICBpbmxpbmU6IGJvb2xlYW47XG4gIH1cblxuICBjb25zdCBERUZBVUxUX0dSSURfT1BUSU9OUzogZHJhZ2dhYmxlT3B0aW9ucyA9IHtcbiAgICB0aWxlV2lkdGg6IDE1MCwgLy8gJ3B4J1xuICAgIHRpbGVIZWlnaHQ6IDE1MCwgLy8gJ3B4J1xuICAgIGd1dHRlcjogMTAsIC8vICdweCdcbiAgICBpbmxpbmU6IGZhbHNlXG4gIH07XG5cbiAgaW50ZXJmYWNlIERhc2hib2FyZEJpbmRpbmdzIHtcbiAgICAgIGdyaWRPcHRpb25zOiBhbnk7XG4gICAgICBncm91cEFkZGl0aW9uYWxBY3Rpb25zOiBhbnk7XG4gICAgICBncm91cGVkV2lkZ2V0czogYW55O1xuICB9XG5cbiAgY2xhc3MgRGFzaGJvYXJkQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyLCBEYXNoYm9hcmRCaW5kaW5ncyB7XG4gICAgcHJpdmF0ZSBkZWZhdWx0R3JvdXBNZW51QWN0aW9uczogYW55ID0gW3tcbiAgICAgICAgdGl0bGU6ICdBZGQgQ29tcG9uZW50JyxcbiAgICAgICAgY2FsbGJhY2s6IChncm91cEluZGV4KSA9PiB7XG4gICAgICAgICAgdGhpcy5hZGRDb21wb25lbnQoZ3JvdXBJbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnUmVtb3ZlJyxcbiAgICAgICAgY2FsbGJhY2s6IChncm91cEluZGV4KSA9PiB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVHcm91cChncm91cEluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdDb25maWd1cmF0ZScsXG4gICAgICAgIGNhbGxiYWNrOiAoZ3JvdXBJbmRleCkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdjb25maWd1cmF0ZSBncm91cCB3aXRoIGluZGV4OicsIGdyb3VwSW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgXTtcbiAgICBwcml2YXRlIF9pbmNsdWRlVHBsOiBzdHJpbmcgPSAnPHBpcC17eyB0eXBlIH19LXRpbGUgZ3JvdXA9XCJncm91cEluZGV4XCIgaW5kZXg9XCJpbmRleFwiJyArXG4gICAgICAncGlwLW9wdGlvbnM9XCIkcGFyZW50LiRjdHJsLmdyb3VwZWRXaWRnZXRzW2dyb3VwSW5kZXhdW1xcJ3NvdXJjZVxcJ11baW5kZXhdLm9wdHNcIj4nICtcbiAgICAgICc8L3BpcC17eyB0eXBlIH19LXRpbGU+JztcblxuICAgIHB1YmxpYyBncm91cGVkV2lkZ2V0czogYW55O1xuICAgIHB1YmxpYyBkcmFnZ2FibGVHcmlkT3B0aW9uczogZHJhZ2dhYmxlT3B0aW9ucztcbiAgICBwdWJsaWMgd2lkZ2V0c1RlbXBsYXRlczogYW55O1xuICAgIHB1YmxpYyBncm91cE1lbnVBY3Rpb25zOiBhbnkgPSB0aGlzLmRlZmF1bHRHcm91cE1lbnVBY3Rpb25zO1xuICAgIHB1YmxpYyB3aWRnZXRzQ29udGV4dDogYW55O1xuICAgIHB1YmxpYyBncmlkT3B0aW9uczogYW55O1xuICAgIHB1YmxpYyBncm91cEFkZGl0aW9uYWxBY3Rpb25zOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICRzY29wZTogYW5ndWxhci5JU2NvcGUsXG4gICAgICBwcml2YXRlICRyb290U2NvcGU6IGFuZ3VsYXIuSVJvb3RTY29wZVNlcnZpY2UsXG4gICAgICBwcml2YXRlICRhdHRyczogYW55LFxuICAgICAgcHJpdmF0ZSAkZWxlbWVudDogYW55LFxuICAgICAgcHJpdmF0ZSAkdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2UsXG4gICAgICBwcml2YXRlICRpbnRlcnBvbGF0ZTogYW5ndWxhci5JSW50ZXJwb2xhdGVTZXJ2aWNlLFxuICAgICAgcHJpdmF0ZSBwaXBBZGRUaWxlRGlhbG9nOiBJQWRkVGlsZURpYWxvZ1NlcnZpY2UsXG4gICAgICBwcml2YXRlIHBpcFRpbGVUZW1wbGF0ZTogSVRpbGVUZW1wbGF0ZVNlcnZpY2VcbiAgICApIHtcbiAgICAgIC8vIEFkZCBjbGFzcyB0byBzdHlsZSBzY3JvbGwgYmFyXG4gICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLXNjcm9sbCcpO1xuXG4gICAgICAvLyBTZXQgdGlsZXMgZ3JpZCBvcHRpb25zXG4gICAgICB0aGlzLmRyYWdnYWJsZUdyaWRPcHRpb25zID0gdGhpcy5ncmlkT3B0aW9ucyB8fCBERUZBVUxUX0dSSURfT1BUSU9OUztcblxuICAgICAgLy8gU3dpdGNoIGlubGluZSBkaXNwbGF5aW5nXG4gICAgICBpZiAodGhpcy5kcmFnZ2FibGVHcmlkT3B0aW9ucy5pbmxpbmUgPT09IHRydWUpIHtcbiAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ2lubGluZS1ncmlkJyk7XG4gICAgICB9XG4gICAgICAvLyBFeHRlbmQgZ3JvdXAncyBtZW51IGFjdGlvbnNcbiAgICAgIGlmICh0aGlzLmdyb3VwQWRkaXRpb25hbEFjdGlvbnMpIGFuZ3VsYXIuZXh0ZW5kKHRoaXMuZ3JvdXBNZW51QWN0aW9ucywgdGhpcy5ncm91cEFkZGl0aW9uYWxBY3Rpb25zKTtcblxuICAgICAgLy8gQ29tcGlsZSB3aWRnZXRzXG4gICAgICB0aGlzLndpZGdldHNDb250ZXh0ID0gJHNjb3BlO1xuICAgICAgdGhpcy5jb21waWxlV2lkZ2V0cygpO1xuXG4gICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5hZGRDbGFzcygndmlzaWJsZScpO1xuICAgICAgfSwgNzAwKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNvbXBpbGVXaWRnZXRzKCkge1xuICAgICAgXy5lYWNoKHRoaXMuZ3JvdXBlZFdpZGdldHMsIChncm91cCwgZ3JvdXBJbmRleCkgPT4ge1xuICAgICAgICBncm91cC5yZW1vdmVkV2lkZ2V0cyA9IGdyb3VwLnJlbW92ZWRXaWRnZXRzIHx8IFtdLFxuICAgICAgICAgIGdyb3VwLnNvdXJjZSA9IGdyb3VwLnNvdXJjZS5tYXAoKHdpZGdldCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIC8vIEVzdGFibGlzaCBkZWZhdWx0IHByb3BzXG4gICAgICAgICAgICB3aWRnZXQuc2l6ZSA9IHdpZGdldC5zaXplIHx8IHtcbiAgICAgICAgICAgICAgY29sU3BhbjogMSxcbiAgICAgICAgICAgICAgcm93U3BhbjogMVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdpZGdldC5pbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgd2lkZ2V0Lmdyb3VwSW5kZXggPSBncm91cEluZGV4O1xuICAgICAgICAgICAgd2lkZ2V0Lm1lbnUgPSB3aWRnZXQubWVudSB8fCB7fTtcbiAgICAgICAgICAgIGFuZ3VsYXIuZXh0ZW5kKHdpZGdldC5tZW51LCBbe1xuICAgICAgICAgICAgICB0aXRsZTogJ1JlbW92ZScsXG4gICAgICAgICAgICAgIGNsaWNrOiAoaXRlbSwgcGFyYW1zLCBvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVdpZGdldChpdGVtLCBwYXJhbXMsIG9iamVjdCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dKTtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgb3B0czogd2lkZ2V0LFxuICAgICAgICAgICAgICB0ZW1wbGF0ZTogdGhpcy5waXBUaWxlVGVtcGxhdGUuZ2V0VGVtcGxhdGUod2lkZ2V0LCB0aGlzLl9pbmNsdWRlVHBsKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZENvbXBvbmVudChncm91cEluZGV4KSB7XG4gICAgICB0aGlzLnBpcEFkZFRpbGVEaWFsb2dcbiAgICAgICAgLnNob3codGhpcy5ncm91cGVkV2lkZ2V0cywgZ3JvdXBJbmRleClcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICB2YXIgYWN0aXZlR3JvdXA7XG5cbiAgICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZGF0YS5ncm91cEluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgYWN0aXZlR3JvdXAgPSB0aGlzLmdyb3VwZWRXaWRnZXRzW2RhdGEuZ3JvdXBJbmRleF07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFjdGl2ZUdyb3VwID0ge1xuICAgICAgICAgICAgICB0aXRsZTogJ05ldyBncm91cCcsXG4gICAgICAgICAgICAgIHNvdXJjZTogW11cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5hZGRXaWRnZXRzKGFjdGl2ZUdyb3VwLnNvdXJjZSwgZGF0YS53aWRnZXRzKTtcblxuICAgICAgICAgIGlmIChkYXRhLmdyb3VwSW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLmdyb3VwZWRXaWRnZXRzLnB1c2goYWN0aXZlR3JvdXApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMuY29tcGlsZVdpZGdldHMoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyByZW1vdmVHcm91cCA9IChncm91cEluZGV4KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncmVtb3ZlR3JvdXAnLCBncm91cEluZGV4KTtcbiAgICAgIHRoaXMuZ3JvdXBlZFdpZGdldHMuc3BsaWNlKGdyb3VwSW5kZXgsIDEpO1xuICAgIH1cblxuICAgIHByaXZhdGUgYWRkV2lkZ2V0cyhncm91cCwgd2lkZ2V0cykge1xuICAgICAgd2lkZ2V0cy5mb3JFYWNoKCh3aWRnZXRHcm91cCkgPT4ge1xuICAgICAgICB3aWRnZXRHcm91cC5mb3JFYWNoKCh3aWRnZXQpID0+IHtcbiAgICAgICAgICBpZiAod2lkZ2V0LmFtb3VudCkge1xuICAgICAgICAgICAgQXJyYXkuYXBwbHkobnVsbCwgQXJyYXkod2lkZ2V0LmFtb3VudCkpLmZvckVhY2goKCkgPT4ge1xuICAgICAgICAgICAgICBncm91cC5wdXNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiB3aWRnZXQubmFtZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbW92ZVdpZGdldChpdGVtLCBwYXJhbXMsIG9iamVjdCkge1xuICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5yZW1vdmVkV2lkZ2V0cyA9IFtdO1xuICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5yZW1vdmVkV2lkZ2V0cy5wdXNoKHBhcmFtcy5vcHRpb25zLmluZGV4KTtcbiAgICAgIHRoaXMuZ3JvdXBlZFdpZGdldHNbcGFyYW1zLm9wdGlvbnMuZ3JvdXBJbmRleF0uc291cmNlLnNwbGljZShwYXJhbXMub3B0aW9ucy5pbmRleCwgMSk7XG4gICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5ncm91cGVkV2lkZ2V0c1twYXJhbXMub3B0aW9ucy5ncm91cEluZGV4XS5yZW1vdmVkV2lkZ2V0cyA9IFtdO1xuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cblxuICBjb25zdCBEYXNoYm9hcmQ6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xuICAgIGJpbmRpbmdzOiB7XG4gICAgICBncmlkT3B0aW9uczogJz1waXBHcmlkT3B0aW9ucycsXG4gICAgICBncm91cEFkZGl0aW9uYWxBY3Rpb25zOiAnPXBpcEdyb3VwQWN0aW9ucycsXG4gICAgICBncm91cGVkV2lkZ2V0czogJz1waXBHcm91cHMnXG4gICAgfSxcbiAgICBjb250cm9sbGVyOiBEYXNoYm9hcmRDb250cm9sbGVyLFxuICAgIHRlbXBsYXRlVXJsOiAnZGFzaGJvYXJkL0Rhc2hib2FyZC5odG1sJ1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXG4gICAgLmNvbmZpZyhjb25maWd1cmVBdmFpbGFibGVXaWRnZXRzKVxuICAgIC5jb25maWcoc2V0VHJhbnNsYXRpb25zKVxuICAgIC5jb21wb25lbnQoJ3BpcERhc2hib2FyZCcsIERhc2hib2FyZCk7XG5cbn0iLCJkZWNsYXJlIHZhciBpbnRlcmFjdDtcblxuaW1wb3J0IHtcbiAgRHJhZ1RpbGVTZXJ2aWNlLFxuICBJRHJhZ1RpbGVTZXJ2aWNlLFxuICBJRHJhZ1RpbGVDb25zdHJ1Y3RvclxufSBmcm9tICcuL0RyYWdnYWJsZVRpbGVTZXJ2aWNlJztcbmltcG9ydCB7XG4gIFRpbGVzR3JpZFNlcnZpY2UsXG4gIElUaWxlc0dyaWRTZXJ2aWNlLFxuICBJVGlsZXNHcmlkQ29uc3RydWN0b3Jcbn0gZnJvbSAnLi4vdGlsZV9ncm91cC9UaWxlR3JvdXBTZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfVElMRV9XSURUSDogbnVtYmVyID0gMTUwO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfVElMRV9IRUlHSFQ6IG51bWJlciA9IDE1MDtcbmV4cG9ydCBjb25zdCBVUERBVEVfR1JPVVBTX0VWRU5UID0gXCJwaXBVcGRhdGVEYXNoYm9hcmRHcm91cHNDb25maWdcIjtcblxuY29uc3QgU0lNUExFX0xBWU9VVF9DT0xVTU5TX0NPVU5UOiBudW1iZXIgPSAyO1xuY29uc3QgREVGQVVMVF9PUFRJT05TID0ge1xuICB0aWxlV2lkdGg6IERFRkFVTFRfVElMRV9XSURUSCwgLy8gJ3B4J1xuICB0aWxlSGVpZ2h0OiBERUZBVUxUX1RJTEVfSEVJR0hULCAvLyAncHgnXG4gIGd1dHRlcjogMjAsIC8vICdweCdcbiAgY29udGFpbmVyOiAncGlwLWRyYWdnYWJsZS1ncmlkOmZpcnN0LW9mLXR5cGUnLFxuICAvL21vYmlsZUJyZWFrcG9pbnQgICAgICAgOiBYWFgsICAgLy8gR2V0IGZyb20gcGlwTWVkaWEgU2VydmljZSBpbiB0aGUgY29uc3RydWN0b3JcbiAgYWN0aXZlRHJvcHpvbmVDbGFzczogJ2Ryb3B6b25lLWFjdGl2ZScsXG4gIGdyb3VwQ29udGFuaW5lclNlbGVjdG9yOiAnLnBpcC1kcmFnZ2FibGUtZ3JvdXA6bm90KC5maWN0LWdyb3VwKScsXG59O1xuXG57XG4gIGludGVyZmFjZSBJRHJhZ2dhYmxlQmluZGluZ3Mge1xuICAgICAgdGlsZXNUZW1wbGF0ZXM6IGFueTtcbiAgICAgIHRpbGVzQ29udGV4dDogYW55O1xuICAgICAgb3B0aW9uczogYW55O1xuICAgICAgZ3JvdXBNZW51QWN0aW9uczogYW55O1xuICAgICAgJGNvbnRhaW5lcjogSlF1ZXJ5O1xuICB9XG5cbiAgaW50ZXJmYWNlIElEcmFnZ2FibGVDb250cm9sbGVyU2NvcGUgZXh0ZW5kcyBuZy5JU2NvcGUge1xuICAgICRjb250YWluZXI6IEpRdWVyeTtcbiAgICB0aWxlc1RlbXBsYXRlczogYW55O1xuICAgIG9wdGlvbnM6IGFueTtcbiAgfVxuXG4gIGludGVyZmFjZSBJVGlsZVNjb3BlIGV4dGVuZHMgbmcuSVNjb3BlIHtcbiAgICBpbmRleDogbnVtYmVyIHwgc3RyaW5nO1xuICAgIGdyb3VwSW5kZXg6IG51bWJlciB8IHN0cmluZztcbiAgfVxuXG4gIGNsYXNzIERyYWdnYWJsZUNvbnRyb2xsZXIgaW1wbGVtZW50cyBuZy5JQ29tcG9uZW50Q29udHJvbGxlciwgSURyYWdnYWJsZUJpbmRpbmdzIHtcbiAgICBwdWJsaWMgb3B0czogYW55O1xuICAgIHB1YmxpYyBncm91cHM6IGFueTtcbiAgICBwdWJsaWMgc291cmNlRHJvcFpvbmVFbGVtOiBhbnkgPSBudWxsO1xuICAgIHB1YmxpYyBpc1NhbWVEcm9wem9uZTogYm9vbGVhbiA9IHRydWU7XG4gICAgcHVibGljIHRpbGVHcm91cHM6IGFueSA9IG51bGw7XG4gICAgcHVibGljIGF2YWlsYWJsZVdpZHRoOiBudW1iZXI7XG4gICAgcHVibGljIGF2YWlsYWJsZUNvbHVtbnM6IG51bWJlcjtcbiAgICBwdWJsaWMgZ3JvdXBzQ29udGFpbmVyczogYW55O1xuICAgIHB1YmxpYyBjb250YWluZXI6IGFueTtcbiAgICBwdWJsaWMgYWN0aXZlRHJhZ2dlZEdyb3VwOiBhbnk7XG4gICAgcHVibGljIGRyYWdnZWRUaWxlOiBhbnk7XG4gICAgcHVibGljIGNvbnRhaW5lck9mZnNldDogYW55O1xuICAgIHB1YmxpYyB0aWxlc1RlbXBsYXRlczogYW55O1xuICAgIHB1YmxpYyB0aWxlc0NvbnRleHQ6IGFueTtcbiAgICBwdWJsaWMgb3B0aW9uczogYW55O1xuICAgIHB1YmxpYyBncm91cE1lbnVBY3Rpb25zOiBhbnk7XG4gICAgcHVibGljICRjb250YWluZXI6IEpRdWVyeTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgcHJpdmF0ZSAkc2NvcGU6IElEcmFnZ2FibGVDb250cm9sbGVyU2NvcGUsXG4gICAgICBwcml2YXRlICRyb290U2NvcGU6IGFuZ3VsYXIuSVJvb3RTY29wZVNlcnZpY2UsXG4gICAgICBwcml2YXRlICRjb21waWxlOiBhbmd1bGFyLklDb21waWxlU2VydmljZSxcbiAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlLFxuICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5LFxuICAgICAgcGlwRHJhZ1RpbGU6IElEcmFnVGlsZVNlcnZpY2UsXG4gICAgICBwaXBUaWxlc0dyaWQ6IElUaWxlc0dyaWRTZXJ2aWNlLFxuICAgICAgcGlwTWVkaWE6IHBpcC5sYXlvdXRzLklNZWRpYVNlcnZpY2VcbiAgICApIHtcbiAgICAgIHRoaXMub3B0cyA9IF8ubWVyZ2Uoe1xuICAgICAgICBtb2JpbGVCcmVha3BvaW50OiBwaXBNZWRpYS5icmVha3BvaW50cy54c1xuICAgICAgfSwgREVGQVVMVF9PUFRJT05TLCB0aGlzLm9wdGlvbnMpO1xuXG4gICAgICB0aGlzLmdyb3VwcyA9IHRoaXMudGlsZXNUZW1wbGF0ZXMubWFwKChncm91cCwgZ3JvdXBJbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRpdGxlOiBncm91cC50aXRsZSxcbiAgICAgICAgICBlZGl0aW5nTmFtZTogZmFsc2UsXG4gICAgICAgICAgaW5kZXg6IGdyb3VwSW5kZXgsXG4gICAgICAgICAgc291cmNlOiBncm91cC5zb3VyY2UubWFwKCh0aWxlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0aWxlU2NvcGUgPSB0aGlzLmNyZWF0ZVRpbGVTY29wZSh0aWxlKTtcblxuICAgICAgICAgICAgcmV0dXJuIElEcmFnVGlsZUNvbnN0cnVjdG9yKERyYWdUaWxlU2VydmljZSwge1xuICAgICAgICAgICAgICB0cGw6ICRjb21waWxlKHRpbGUudGVtcGxhdGUpKHRpbGVTY29wZSksXG4gICAgICAgICAgICAgIG9wdGlvbnM6IHRpbGUub3B0cyxcbiAgICAgICAgICAgICAgc2l6ZTogdGlsZS5vcHRzLnNpemVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pXG4gICAgICAgIH07XG4gICAgICB9KTtcblxuICAgICAgLy8gQWRkIHRlbXBsYXRlcyB3YXRjaGVyXG4gICAgICAkc2NvcGUuJHdhdGNoKCckY3RybC50aWxlc1RlbXBsYXRlcycsIChuZXdWYWwpID0+IHtcbiAgICAgICAgdGhpcy53YXRjaChuZXdWYWwpO1xuICAgICAgfSwgdHJ1ZSk7XG5cbiAgICAgIC8vIEluaXRpYWxpemUgZGF0YVxuICAgICAgdGhpcy5pbml0aWFsaXplKCk7XG5cbiAgICAgIC8vIFJlc2l6ZSBoYW5kbGVyIFRPRE86IHJlcGxhY2UgYnkgcGlwIHJlc2l6ZSB3YXRjaGVyc1xuICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKCgpID0+IHtcbiAgICAgICAgdGhpcy5hdmFpbGFibGVXaWR0aCA9IHRoaXMuZ2V0Q29udGFpbmVyV2lkdGgoKTtcbiAgICAgICAgdGhpcy5hdmFpbGFibGVDb2x1bW5zID0gdGhpcy5nZXRBdmFpbGFibGVDb2x1bW5zKHRoaXMuYXZhaWxhYmxlV2lkdGgpO1xuXG4gICAgICAgIHRoaXMudGlsZUdyb3Vwcy5mb3JFYWNoKChncm91cCkgPT4ge1xuICAgICAgICAgIGdyb3VwXG4gICAgICAgICAgICAuc2V0QXZhaWxhYmxlQ29sdW1ucyh0aGlzLmF2YWlsYWJsZUNvbHVtbnMpXG4gICAgICAgICAgICAuZ2VuZXJhdGVHcmlkKHRoaXMuZ2V0U2luZ2xlVGlsZVdpZHRoRm9yTW9iaWxlKHRoaXMuYXZhaWxhYmxlV2lkdGgpKVxuICAgICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucygpXG4gICAgICAgICAgICAuY2FsY0NvbnRhaW5lckhlaWdodCgpO1xuICAgICAgICB9KTtcbiAgICAgIH0sIDUwKSk7XG4gICAgfVxuXG4gICAgLy8gUG9zdCBsaW5rIGZ1bmN0aW9uXG4gICAgcHVibGljICRwb3N0TGluaygpIHtcbiAgICAgIHRoaXMuJGNvbnRhaW5lciA9IHRoaXMuJGVsZW1lbnQ7XG4gICAgfVxuXG4gICAgLy8gV2F0Y2ggaGFuZGxlclxuICAgIHByaXZhdGUgd2F0Y2gobmV3VmFsKSB7XG4gICAgICBjb25zdCBwcmV2VmFsID0gdGhpcy5ncm91cHM7XG4gICAgICBsZXQgY2hhbmdlZEdyb3VwSW5kZXggPSBudWxsO1xuXG4gICAgICBpZiAobmV3VmFsLmxlbmd0aCA+IHByZXZWYWwubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuYWRkR3JvdXAobmV3VmFsW25ld1ZhbC5sZW5ndGggLSAxXSk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAobmV3VmFsLmxlbmd0aCA8IHByZXZWYWwubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlR3JvdXBzKG5ld1ZhbCk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld1ZhbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBncm91cFdpZGdldERpZmYgPSBwcmV2VmFsW2ldLnNvdXJjZS5sZW5ndGggLSBuZXdWYWxbaV0uc291cmNlLmxlbmd0aDtcbiAgICAgICAgaWYgKGdyb3VwV2lkZ2V0RGlmZiB8fCAobmV3VmFsW2ldLnJlbW92ZWRXaWRnZXRzICYmIG5ld1ZhbFtpXS5yZW1vdmVkV2lkZ2V0cy5sZW5ndGggPiAwKSkge1xuICAgICAgICAgIGNoYW5nZWRHcm91cEluZGV4ID0gaTtcblxuICAgICAgICAgIGlmIChncm91cFdpZGdldERpZmYgPCAwKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdUaWxlcyA9IG5ld1ZhbFtjaGFuZ2VkR3JvdXBJbmRleF0uc291cmNlLnNsaWNlKGdyb3VwV2lkZ2V0RGlmZik7XG5cbiAgICAgICAgICAgIF8uZWFjaChuZXdUaWxlcywgKHRpbGUpID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RpbGUnLCB0aWxlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLmFkZFRpbGVzSW50b0dyb3VwKG5ld1RpbGVzLCB0aGlzLnRpbGVHcm91cHNbY2hhbmdlZEdyb3VwSW5kZXhdLCB0aGlzLmdyb3Vwc0NvbnRhaW5lcnNbY2hhbmdlZEdyb3VwSW5kZXhdKTtcblxuICAgICAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMudXBkYXRlVGlsZXNHcm91cHMoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZVRpbGVzKHRoaXMudGlsZUdyb3Vwc1tjaGFuZ2VkR3JvdXBJbmRleF0sIG5ld1ZhbFtjaGFuZ2VkR3JvdXBJbmRleF0ucmVtb3ZlZFdpZGdldHMsIHRoaXMuZ3JvdXBzQ29udGFpbmVyc1tjaGFuZ2VkR3JvdXBJbmRleF0pO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVUaWxlc09wdGlvbnMobmV3VmFsKTtcbiAgICAgICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVRpbGVzR3JvdXBzKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG5ld1ZhbCAmJiB0aGlzLnRpbGVHcm91cHMpIHtcbiAgICAgICAgdGhpcy51cGRhdGVUaWxlc09wdGlvbnMobmV3VmFsKTtcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy51cGRhdGVUaWxlc0dyb3VwcygpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJbmxpbmUgZWRpdCBncm91cCBoYW5kbGVyc1xuICAgIHB1YmxpYyBvblRpdGxlQ2xpY2soZ3JvdXAsIGV2ZW50KSB7XG4gICAgICBpZiAoIWdyb3VwLmVkaXRpbmdOYW1lKSB7XG4gICAgICAgIGdyb3VwLm9sZFRpdGxlID0gXy5jbG9uZShncm91cC50aXRsZSk7XG4gICAgICAgIGdyb3VwLmVkaXRpbmdOYW1lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgJChldmVudC5jdXJyZW50VGFyZ2V0LmNoaWxkcmVuWzBdKS5mb2N1cygpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgY2FuY2VsRWRpdGluZyhncm91cCkge1xuICAgICAgZ3JvdXAudGl0bGUgPSBncm91cC5vbGRUaXRsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25CbHVyVGl0bGVJbnB1dChncm91cCkge1xuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgIGdyb3VwLmVkaXRpbmdOYW1lID0gZmFsc2U7XG4gICAgICAgIHRoaXMuJHJvb3RTY29wZS4kYnJvYWRjYXN0KFVQREFURV9HUk9VUFNfRVZFTlQsIHRoaXMuZ3JvdXBzKTtcbiAgICAgICAgLy8gVXBkYXRlIHRpdGxlIGluIG91dGVyIHNjb3BlXG4gICAgICAgIHRoaXMudGlsZXNUZW1wbGF0ZXNbZ3JvdXAuaW5kZXhdLnRpdGxlID0gZ3JvdXAudGl0bGU7XG4gICAgICB9LCAxMDApO1xuICAgIH1cblxuICAgIHB1YmxpYyBvbkt5ZXByZXNzVGl0bGVJbnB1dChncm91cCwgZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xuICAgICAgICB0aGlzLm9uQmx1clRpdGxlSW5wdXQoZ3JvdXApO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFVwZGF0ZSBvdXRlciBzY29wZSBmdW5jdGlvbnNcbiAgICBwcml2YXRlIHVwZGF0ZVRpbGVzVGVtcGxhdGVzKHVwZGF0ZVR5cGU6IHN0cmluZywgc291cmNlID8gOiBhbnkpIHtcbiAgICAgIHN3aXRjaCAodXBkYXRlVHlwZSkge1xuICAgICAgICBjYXNlICdhZGRHcm91cCc6XG4gICAgICAgICAgaWYgKHRoaXMuZ3JvdXBzLmxlbmd0aCAhPT0gdGhpcy50aWxlc1RlbXBsYXRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMudGlsZXNUZW1wbGF0ZXMucHVzaChzb3VyY2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbW92ZVRpbGUnOlxuICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGZyb21JbmRleCxcbiAgICAgICAgICAgIHRvSW5kZXgsXG4gICAgICAgICAgICB0aWxlT3B0aW9ucyxcbiAgICAgICAgICAgIGZyb21UaWxlSW5kZXhcbiAgICAgICAgICB9ID0ge1xuICAgICAgICAgICAgZnJvbUluZGV4OiBzb3VyY2UuZnJvbS5lbGVtLmF0dHJpYnV0ZXNbJ2RhdGEtZ3JvdXAtaWQnXS52YWx1ZSxcbiAgICAgICAgICAgIHRvSW5kZXg6IHNvdXJjZS50by5lbGVtLmF0dHJpYnV0ZXNbJ2RhdGEtZ3JvdXAtaWQnXS52YWx1ZSxcbiAgICAgICAgICAgIHRpbGVPcHRpb25zOiBzb3VyY2UudGlsZS5vcHRzLm9wdGlvbnMsXG4gICAgICAgICAgICBmcm9tVGlsZUluZGV4OiBzb3VyY2UudGlsZS5vcHRzLm9wdGlvbnMuaW5kZXhcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy50aWxlc1RlbXBsYXRlc1tmcm9tSW5kZXhdLnNvdXJjZS5zcGxpY2UoZnJvbVRpbGVJbmRleCwgMSk7XG4gICAgICAgICAgdGhpcy50aWxlc1RlbXBsYXRlc1t0b0luZGV4XS5zb3VyY2UucHVzaCh7XG4gICAgICAgICAgICBvcHRzOiB0aWxlT3B0aW9uc1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdGhpcy5yZUluZGV4VGlsZXMoc291cmNlLmZyb20uZWxlbSk7XG4gICAgICAgICAgdGhpcy5yZUluZGV4VGlsZXMoc291cmNlLnRvLmVsZW0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE1hbmFnZSB0aWxlcyBmdW5jdGlvbnNcbiAgICBwcml2YXRlIGNyZWF0ZVRpbGVTY29wZSh0aWxlOiBhbnkpOiBJVGlsZVNjb3BlIHtcbiAgICAgIGNvbnN0IHRpbGVTY29wZSA9IDwgSVRpbGVTY29wZSA+IHRoaXMuJHJvb3RTY29wZS4kbmV3KGZhbHNlLCB0aGlzLnRpbGVzQ29udGV4dCk7XG4gICAgICB0aWxlU2NvcGUuaW5kZXggPSB0aWxlLm9wdHMuaW5kZXggPT0gdW5kZWZpbmVkID8gdGlsZS5vcHRzLm9wdGlvbnMuaW5kZXggOiB0aWxlLm9wdHMuaW5kZXg7XG4gICAgICB0aWxlU2NvcGUuZ3JvdXBJbmRleCA9IHRpbGUub3B0cy5ncm91cEluZGV4ID09IHVuZGVmaW5lZCA/IHRpbGUub3B0cy5vcHRpb25zLmdyb3VwSW5kZXggOiB0aWxlLm9wdHMuZ3JvdXBJbmRleDtcblxuICAgICAgcmV0dXJuIHRpbGVTY29wZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbW92ZVRpbGVzKGdyb3VwLCBpbmRleGVzLCBjb250YWluZXIpIHtcbiAgICAgIGNvbnN0IHRpbGVzID0gJChjb250YWluZXIpLmZpbmQoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKTtcblxuICAgICAgXy5lYWNoKGluZGV4ZXMsIChpbmRleCkgPT4ge1xuICAgICAgICBncm91cC50aWxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB0aWxlc1tpbmRleF0ucmVtb3ZlKCk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5yZUluZGV4VGlsZXMoY29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlSW5kZXhUaWxlcyhjb250YWluZXIsIGdJbmRleCA/ICkge1xuICAgICAgY29uc3QgdGlsZXMgPSAkKGNvbnRhaW5lcikuZmluZCgnLnBpcC1kcmFnZ2FibGUtdGlsZScpLFxuICAgICAgICBncm91cEluZGV4ID0gZ0luZGV4ID09PSB1bmRlZmluZWQgPyBjb250YWluZXIuYXR0cmlidXRlc1snZGF0YS1ncm91cC1pZCddLnZhbHVlIDogZ0luZGV4O1xuXG4gICAgICBfLmVhY2godGlsZXMsICh0aWxlLCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBjaGlsZCA9ICQodGlsZSkuY2hpbGRyZW4oKVswXTtcbiAgICAgICAgYW5ndWxhci5lbGVtZW50KGNoaWxkKS5zY29wZSgpWydpbmRleCddID0gaW5kZXg7XG4gICAgICAgIGFuZ3VsYXIuZWxlbWVudChjaGlsZCkuc2NvcGUoKVsnZ3JvdXBJbmRleCddID0gZ3JvdXBJbmRleDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlR3JvdXBzKG5ld0dyb3Vwcykge1xuICAgICAgY29uc3QgcmVtb3ZlSW5kZXhlcyA9IFtdLFxuICAgICAgICByZW1haW4gPSBbXSxcbiAgICAgICAgY29udGFpbmVycyA9IFtdO1xuXG5cbiAgICAgIF8uZWFjaCh0aGlzLmdyb3VwcywgKGdyb3VwLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoXy5maW5kSW5kZXgobmV3R3JvdXBzLCAoZykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGdbJ3RpdGxlJ10gPT09IGdyb3VwLnRpdGxlXG4gICAgICAgICAgfSkgPCAwKSB7XG4gICAgICAgICAgcmVtb3ZlSW5kZXhlcy5wdXNoKGluZGV4KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZW1haW4ucHVzaChpbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBfLmVhY2gocmVtb3ZlSW5kZXhlcy5yZXZlcnNlKCksIChpbmRleCkgPT4ge1xuICAgICAgICB0aGlzLmdyb3Vwcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB0aGlzLnRpbGVHcm91cHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH0pO1xuXG4gICAgICBfLmVhY2gocmVtYWluLCAoaW5kZXgpID0+IHtcbiAgICAgICAgY29udGFpbmVycy5wdXNoKHRoaXMuZ3JvdXBzQ29udGFpbmVyc1tpbmRleF0pO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuZ3JvdXBzQ29udGFpbmVycyA9IGNvbnRhaW5lcnM7XG5cbiAgICAgIF8uZWFjaCh0aGlzLmdyb3Vwc0NvbnRhaW5lcnMsIChjb250YWluZXIsIGluZGV4KSA9PiB7XG4gICAgICAgIHRoaXMucmVJbmRleFRpbGVzKGNvbnRhaW5lciwgaW5kZXgpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhZGRHcm91cChzb3VyY2VHcm91cCkge1xuICAgICAgY29uc3QgZ3JvdXAgPSB7XG4gICAgICAgIHRpdGxlOiBzb3VyY2VHcm91cC50aXRsZSxcbiAgICAgICAgc291cmNlOiBzb3VyY2VHcm91cC5zb3VyY2UubWFwKCh0aWxlKSA9PiB7XG4gICAgICAgICAgY29uc3QgdGlsZVNjb3BlID0gdGhpcy5jcmVhdGVUaWxlU2NvcGUodGlsZSk7XG5cbiAgICAgICAgICByZXR1cm4gSURyYWdUaWxlQ29uc3RydWN0b3IoRHJhZ1RpbGVTZXJ2aWNlLCB7XG4gICAgICAgICAgICB0cGw6IHRoaXMuJGNvbXBpbGUodGlsZS50ZW1wbGF0ZSkodGlsZVNjb3BlKSxcbiAgICAgICAgICAgIG9wdGlvbnM6IHRpbGUub3B0cyxcbiAgICAgICAgICAgIHNpemU6IHRpbGUub3B0cy5zaXplXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICB9O1xuXG4gICAgICB0aGlzLmdyb3Vwcy5wdXNoKGdyb3VwKTtcbiAgICAgIGlmICghdGhpcy4kc2NvcGUuJCRwaGFzZSkgdGhpcy4kc2NvcGUuJGFwcGx5KCk7XG5cbiAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmdyb3Vwc0NvbnRhaW5lcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMub3B0cy5ncm91cENvbnRhbmluZXJTZWxlY3Rvcik7XG4gICAgICAgIHRoaXMudGlsZUdyb3Vwcy5wdXNoKFxuICAgICAgICAgIElUaWxlc0dyaWRDb25zdHJ1Y3RvcihUaWxlc0dyaWRTZXJ2aWNlLCBncm91cC5zb3VyY2UsIHRoaXMub3B0cywgdGhpcy5hdmFpbGFibGVDb2x1bW5zLCB0aGlzLmdyb3Vwc0NvbnRhaW5lcnNbdGhpcy5ncm91cHNDb250YWluZXJzLmxlbmd0aCAtIDFdKVxuICAgICAgICAgIC5nZW5lcmF0ZUdyaWQodGhpcy5nZXRTaW5nbGVUaWxlV2lkdGhGb3JNb2JpbGUodGhpcy5hdmFpbGFibGVXaWR0aCkpXG4gICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucygpXG4gICAgICAgICAgLmNhbGNDb250YWluZXJIZWlnaHQoKVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMudXBkYXRlVGlsZXNUZW1wbGF0ZXMoJ2FkZEdyb3VwJywgc291cmNlR3JvdXApO1xuICAgIH1cblxuICAgIHByaXZhdGUgYWRkVGlsZXNJbnRvR3JvdXAobmV3VGlsZXMsIGdyb3VwLCBncm91cENvbnRhaW5lcikge1xuICAgICAgbmV3VGlsZXMuZm9yRWFjaCgodGlsZSkgPT4ge1xuICAgICAgICBjb25zdCB0aWxlU2NvcGUgPSB0aGlzLmNyZWF0ZVRpbGVTY29wZSh0aWxlKTtcblxuICAgICAgICBjb25zdCBuZXdUaWxlID0gSURyYWdUaWxlQ29uc3RydWN0b3IoRHJhZ1RpbGVTZXJ2aWNlLCB7XG4gICAgICAgICAgdHBsOiB0aGlzLiRjb21waWxlKHRpbGUudGVtcGxhdGUpKHRpbGVTY29wZSksXG4gICAgICAgICAgb3B0aW9uczogdGlsZS5vcHRzLFxuICAgICAgICAgIHNpemU6IHRpbGUub3B0cy5zaXplXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGdyb3VwLmFkZFRpbGUobmV3VGlsZSk7XG5cbiAgICAgICAgJCgnPGRpdj4nKVxuICAgICAgICAgIC5hZGRDbGFzcygncGlwLWRyYWdnYWJsZS10aWxlJylcbiAgICAgICAgICAuYXBwZW5kKG5ld1RpbGUuZ2V0Q29tcGlsZWRUZW1wbGF0ZSgpKVxuICAgICAgICAgIC5hcHBlbmRUbyhncm91cENvbnRhaW5lcik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZVRpbGVzT3B0aW9ucyhvcHRpb25zR3JvdXApIHtcbiAgICAgIG9wdGlvbnNHcm91cC5mb3JFYWNoKChvcHRpb25Hcm91cCkgPT4ge1xuICAgICAgICBvcHRpb25Hcm91cC5zb3VyY2UuZm9yRWFjaCgodGlsZU9wdGlvbnMpID0+IHtcbiAgICAgICAgICB0aGlzLnRpbGVHcm91cHMuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgICAgICAgIGdyb3VwLnVwZGF0ZVRpbGVPcHRpb25zKHRpbGVPcHRpb25zLm9wdHMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdFRpbGVzR3JvdXBzKHRpbGVHcm91cHMsIG9wdHMsIGdyb3Vwc0NvbnRhaW5lcnMpIHtcbiAgICAgIHJldHVybiB0aWxlR3JvdXBzLm1hcCgoZ3JvdXAsIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBJVGlsZXNHcmlkQ29uc3RydWN0b3IoVGlsZXNHcmlkU2VydmljZSwgZ3JvdXAuc291cmNlLCBvcHRzLCB0aGlzLmF2YWlsYWJsZUNvbHVtbnMsIGdyb3Vwc0NvbnRhaW5lcnNbaW5kZXhdKVxuICAgICAgICAgIC5nZW5lcmF0ZUdyaWQodGhpcy5nZXRTaW5nbGVUaWxlV2lkdGhGb3JNb2JpbGUodGhpcy5hdmFpbGFibGVXaWR0aCkpXG4gICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucygpXG4gICAgICAgICAgLmNhbGNDb250YWluZXJIZWlnaHQoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlVGlsZXNHcm91cHMob25seVBvc2l0aW9uID8gLCBkcmFnZ2VkVGlsZSA/ICkge1xuICAgICAgdGhpcy50aWxlR3JvdXBzLmZvckVhY2goKGdyb3VwKSA9PiB7XG4gICAgICAgIGlmICghb25seVBvc2l0aW9uKSB7XG4gICAgICAgICAgZ3JvdXAuZ2VuZXJhdGVHcmlkKHRoaXMuZ2V0U2luZ2xlVGlsZVdpZHRoRm9yTW9iaWxlKHRoaXMuYXZhaWxhYmxlV2lkdGgpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGdyb3VwXG4gICAgICAgICAgLnNldFRpbGVzRGltZW5zaW9ucyhvbmx5UG9zaXRpb24sIGRyYWdnZWRUaWxlKVxuICAgICAgICAgIC5jYWxjQ29udGFpbmVySGVpZ2h0KCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldENvbnRhaW5lcldpZHRoKCk6IGFueSB7XG4gICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLiRjb250YWluZXIgfHwgJCgnYm9keScpO1xuICAgICAgcmV0dXJuIGNvbnRhaW5lci53aWR0aCgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0QXZhaWxhYmxlQ29sdW1ucyhhdmFpbGFibGVXaWR0aCk6IGFueSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRzLm1vYmlsZUJyZWFrcG9pbnQgPiBhdmFpbGFibGVXaWR0aCA/IFNJTVBMRV9MQVlPVVRfQ09MVU1OU19DT1VOVCA6XG4gICAgICAgIE1hdGguZmxvb3IoYXZhaWxhYmxlV2lkdGggLyAodGhpcy5vcHRzLnRpbGVXaWR0aCArIHRoaXMub3B0cy5ndXR0ZXIpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldEFjdGl2ZUdyb3VwQW5kVGlsZShlbGVtKTogYW55IHtcbiAgICAgIGNvbnN0IGFjdGl2ZSA9IHt9O1xuXG4gICAgICB0aGlzLnRpbGVHcm91cHMuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgICAgY29uc3QgZm91bmRUaWxlID0gZ3JvdXAuZ2V0VGlsZUJ5Tm9kZShlbGVtKTtcblxuICAgICAgICBpZiAoZm91bmRUaWxlKSB7XG4gICAgICAgICAgYWN0aXZlWydncm91cCddID0gZ3JvdXA7XG4gICAgICAgICAgYWN0aXZlWyd0aWxlJ10gPSBmb3VuZFRpbGU7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGFjdGl2ZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFNpbmdsZVRpbGVXaWR0aEZvck1vYmlsZShhdmFpbGFibGVXaWR0aCk6IGFueSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRzLm1vYmlsZUJyZWFrcG9pbnQgPiBhdmFpbGFibGVXaWR0aCA/IGF2YWlsYWJsZVdpZHRoIC8gMiAtIHRoaXMub3B0cy5ndXR0ZXIgOiBudWxsO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25EcmFnU3RhcnRMaXN0ZW5lcihldmVudCkge1xuICAgICAgY29uc3QgYWN0aXZlRW50aXRpZXMgPSB0aGlzLmdldEFjdGl2ZUdyb3VwQW5kVGlsZShldmVudC50YXJnZXQpO1xuXG4gICAgICB0aGlzLmNvbnRhaW5lciA9ICQoZXZlbnQudGFyZ2V0KS5wYXJlbnQoJy5waXAtZHJhZ2dhYmxlLWdyb3VwJykuZ2V0KDApO1xuICAgICAgdGhpcy5kcmFnZ2VkVGlsZSA9IGFjdGl2ZUVudGl0aWVzWyd0aWxlJ107XG4gICAgICB0aGlzLmFjdGl2ZURyYWdnZWRHcm91cCA9IGFjdGl2ZUVudGl0aWVzWydncm91cCddO1xuXG4gICAgICB0aGlzLiRlbGVtZW50LmFkZENsYXNzKCdkcmFnLXRyYW5zZmVyJyk7XG5cbiAgICAgIHRoaXMuZHJhZ2dlZFRpbGUuc3RhcnREcmFnKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkRyYWdNb3ZlTGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgIGNvbnN0IHggPSAocGFyc2VGbG9hdCh0YXJnZXQuc3R5bGUubGVmdCkgfHwgMCkgKyBldmVudC5keDtcbiAgICAgIGNvbnN0IHkgPSAocGFyc2VGbG9hdCh0YXJnZXQuc3R5bGUudG9wKSB8fCAwKSArIGV2ZW50LmR5O1xuXG4gICAgICB0aGlzLmNvbnRhaW5lck9mZnNldCA9IHRoaXMuZ2V0Q29udGFpbmVyT2Zmc2V0KCk7XG5cbiAgICAgIHRhcmdldC5zdHlsZS5sZWZ0ID0geCArICdweCc7IC8vIFRPRE8gW2FwaWRoaXJueWldIEV4dHJhY3QgdW5pdHMgaW50byBvcHRpb25zIHNlY3Rpb25cbiAgICAgIHRhcmdldC5zdHlsZS50b3AgPSB5ICsgJ3B4JztcblxuICAgICAgY29uc3QgYmVsb3dFbGVtZW50ID0gdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAuZ2V0VGlsZUJ5Q29vcmRpbmF0ZXMoe1xuICAgICAgICBsZWZ0OiBldmVudC5wYWdlWCAtIHRoaXMuY29udGFpbmVyT2Zmc2V0LmxlZnQsXG4gICAgICAgIHRvcDogZXZlbnQucGFnZVkgLSB0aGlzLmNvbnRhaW5lck9mZnNldC50b3BcbiAgICAgIH0sIHRoaXMuZHJhZ2dlZFRpbGUpO1xuXG4gICAgICBpZiAoYmVsb3dFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IGRyYWdnZWRUaWxlSW5kZXggPSB0aGlzLmFjdGl2ZURyYWdnZWRHcm91cC5nZXRUaWxlSW5kZXgodGhpcy5kcmFnZ2VkVGlsZSk7XG4gICAgICAgIGNvbnN0IGJlbG93RWxlbUluZGV4ID0gdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAuZ2V0VGlsZUluZGV4KGJlbG93RWxlbWVudCk7XG5cbiAgICAgICAgaWYgKChkcmFnZ2VkVGlsZUluZGV4ICsgMSkgPT09IGJlbG93RWxlbUluZGV4KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXBcbiAgICAgICAgICAuc3dhcFRpbGVzKHRoaXMuZHJhZ2dlZFRpbGUsIGJlbG93RWxlbWVudClcbiAgICAgICAgICAuc2V0VGlsZXNEaW1lbnNpb25zKHRydWUsIHRoaXMuZHJhZ2dlZFRpbGUpO1xuXG4gICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuc2V0R3JvdXBDb250YWluZXJzSGVpZ2h0KCk7XG4gICAgICAgIH0sIDApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25EcmFnRW5kTGlzdGVuZXIoKSB7XG4gICAgICB0aGlzLmRyYWdnZWRUaWxlLnN0b3BEcmFnKHRoaXMuaXNTYW1lRHJvcHpvbmUpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKCdkcmFnLXRyYW5zZmVyJyk7XG4gICAgICB0aGlzLmFjdGl2ZURyYWdnZWRHcm91cCA9IG51bGw7XG4gICAgICB0aGlzLmRyYWdnZWRUaWxlID0gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldENvbnRhaW5lck9mZnNldCgpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSB0aGlzLmNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGVmdDogY29udGFpbmVyUmVjdC5sZWZ0LFxuICAgICAgICB0b3A6IGNvbnRhaW5lclJlY3QudG9wXG4gICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgc2V0R3JvdXBDb250YWluZXJzSGVpZ2h0KCkge1xuICAgICAgdGhpcy50aWxlR3JvdXBzLmZvckVhY2goKHRpbGVHcm91cCkgPT4ge1xuICAgICAgICB0aWxlR3JvdXAuY2FsY0NvbnRhaW5lckhlaWdodCgpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBtb3ZlVGlsZShmcm9tLCB0bywgdGlsZSkge1xuICAgICAgbGV0IGVsZW07XG4gICAgICBjb25zdCBtb3ZlZFRpbGUgPSBmcm9tLnJlbW92ZVRpbGUodGlsZSk7XG4gICAgICBjb25zdCB0aWxlU2NvcGUgPSB0aGlzLmNyZWF0ZVRpbGVTY29wZSh0aWxlKTtcblxuICAgICAgJCh0aGlzLmdyb3Vwc0NvbnRhaW5lcnNbXy5maW5kSW5kZXgodGhpcy50aWxlR3JvdXBzLCBmcm9tKV0pXG4gICAgICAgIC5maW5kKG1vdmVkVGlsZS5nZXRFbGVtKCkpXG4gICAgICAgIC5yZW1vdmUoKTtcblxuICAgICAgaWYgKHRvICE9PSBudWxsKSB7XG4gICAgICAgIHRvLmFkZFRpbGUobW92ZWRUaWxlKTtcblxuICAgICAgICBlbGVtID0gdGhpcy4kY29tcGlsZShtb3ZlZFRpbGUuZ2V0RWxlbSgpKSh0aWxlU2NvcGUpO1xuXG4gICAgICAgICQodGhpcy5ncm91cHNDb250YWluZXJzW18uZmluZEluZGV4KHRoaXMudGlsZUdyb3VwcywgdG8pXSlcbiAgICAgICAgICAuYXBwZW5kKGVsZW0pO1xuXG4gICAgICAgIHRoaXMuJHRpbWVvdXQodG8uc2V0VGlsZXNEaW1lbnNpb25zLmJpbmQodG8sIHRydWUpKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy51cGRhdGVUaWxlc1RlbXBsYXRlcygnbW92ZVRpbGUnLCB7XG4gICAgICAgIGZyb206IGZyb20sXG4gICAgICAgIHRvOiB0byxcbiAgICAgICAgdGlsZTogbW92ZWRUaWxlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uRHJvcExpc3RlbmVyKGV2ZW50KSB7XG4gICAgICBjb25zdCBkcm9wcGVkR3JvdXBJbmRleCA9IGV2ZW50LnRhcmdldC5hdHRyaWJ1dGVzWydkYXRhLWdyb3VwLWlkJ10udmFsdWU7XG4gICAgICBjb25zdCBkcm9wcGVkR3JvdXAgPSB0aGlzLnRpbGVHcm91cHNbZHJvcHBlZEdyb3VwSW5kZXhdO1xuXG4gICAgICBpZiAodGhpcy5hY3RpdmVEcmFnZ2VkR3JvdXAgIT09IGRyb3BwZWRHcm91cCkge1xuICAgICAgICB0aGlzLm1vdmVUaWxlKHRoaXMuYWN0aXZlRHJhZ2dlZEdyb3VwLCBkcm9wcGVkR3JvdXAsIHRoaXMuZHJhZ2dlZFRpbGUpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnVwZGF0ZVRpbGVzR3JvdXBzKHRydWUpO1xuICAgICAgdGhpcy5zb3VyY2VEcm9wWm9uZUVsZW0gPSBudWxsO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Ecm9wVG9GaWN0R3JvdXBMaXN0ZW5lcihldmVudCkge1xuICAgICAgY29uc3QgZnJvbSA9IHRoaXMuYWN0aXZlRHJhZ2dlZEdyb3VwO1xuICAgICAgY29uc3QgdGlsZSA9IHRoaXMuZHJhZ2dlZFRpbGU7XG5cbiAgICAgIHRoaXMuYWRkR3JvdXAoe1xuICAgICAgICB0aXRsZTogJ05ldyBncm91cCcsXG4gICAgICAgIHNvdXJjZTogW11cbiAgICAgIH0pO1xuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMubW92ZVRpbGUoZnJvbSwgdGhpcy50aWxlR3JvdXBzW3RoaXMudGlsZUdyb3Vwcy5sZW5ndGggLSAxXSwgdGlsZSk7XG4gICAgICAgIHRoaXMudXBkYXRlVGlsZXNHcm91cHModHJ1ZSk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5zb3VyY2VEcm9wWm9uZUVsZW0gPSBudWxsO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Ecm9wRW50ZXJMaXN0ZW5lcihldmVudCkge1xuICAgICAgaWYgKCF0aGlzLnNvdXJjZURyb3Bab25lRWxlbSkge1xuICAgICAgICB0aGlzLnNvdXJjZURyb3Bab25lRWxlbSA9IGV2ZW50LmRyYWdFdmVudC5kcmFnRW50ZXI7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnNvdXJjZURyb3Bab25lRWxlbSAhPT0gZXZlbnQuZHJhZ0V2ZW50LmRyYWdFbnRlcikge1xuICAgICAgICBldmVudC5kcmFnRXZlbnQuZHJhZ0VudGVyLmNsYXNzTGlzdC5hZGQoJ2Ryb3B6b25lLWFjdGl2ZScpO1xuICAgICAgICAkKCdib2R5JykuY3NzKCdjdXJzb3InLCAnY29weScpO1xuICAgICAgICB0aGlzLmlzU2FtZURyb3B6b25lID0gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkKCdib2R5JykuY3NzKCdjdXJzb3InLCAnJyk7XG4gICAgICAgIHRoaXMuaXNTYW1lRHJvcHpvbmUgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25Ecm9wRGVhY3RpdmF0ZUxpc3RlbmVyKGV2ZW50KSB7XG4gICAgICBpZiAodGhpcy5zb3VyY2VEcm9wWm9uZUVsZW0gIT09IGV2ZW50LnRhcmdldCkge1xuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLm9wdHMuYWN0aXZlRHJvcHpvbmVDbGFzcyk7XG4gICAgICAgICQoJ2JvZHknKS5jc3MoJ2N1cnNvcicsICcnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uRHJvcExlYXZlTGlzdGVuZXIoZXZlbnQpIHtcbiAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3B0cy5hY3RpdmVEcm9wem9uZUNsYXNzKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXRpYWxpemUoKSB7XG4gICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5hdmFpbGFibGVXaWR0aCA9IHRoaXMuZ2V0Q29udGFpbmVyV2lkdGgoKTtcbiAgICAgICAgdGhpcy5hdmFpbGFibGVDb2x1bW5zID0gdGhpcy5nZXRBdmFpbGFibGVDb2x1bW5zKHRoaXMuYXZhaWxhYmxlV2lkdGgpO1xuICAgICAgICB0aGlzLmdyb3Vwc0NvbnRhaW5lcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMub3B0cy5ncm91cENvbnRhbmluZXJTZWxlY3Rvcik7XG4gICAgICAgIHRoaXMudGlsZUdyb3VwcyA9IHRoaXMuaW5pdFRpbGVzR3JvdXBzKHRoaXMuZ3JvdXBzLCB0aGlzLm9wdHMsIHRoaXMuZ3JvdXBzQ29udGFpbmVycyk7XG5cbiAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKVxuICAgICAgICAgIC5kcmFnZ2FibGUoe1xuICAgICAgICAgICAgYXV0b1Njcm9sbDoge1xuICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICBjb250YWluZXI6ICQoJyNjb250ZW50JykuZ2V0KDApLFxuICAgICAgICAgICAgICBzcGVlZDogNTAwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25zdGFydDogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMub25EcmFnU3RhcnRMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbm1vdmU6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLm9uRHJhZ01vdmVMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbmVuZDogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMub25EcmFnRW5kTGlzdGVuZXIoKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgIGludGVyYWN0KCcucGlwLWRyYWdnYWJsZS1ncm91cC5maWN0LWdyb3VwJylcbiAgICAgICAgICAuZHJvcHpvbmUoe1xuICAgICAgICAgICAgb25kcm9wOiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BUb0ZpY3RHcm91cExpc3RlbmVyKGV2ZW50KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uZHJhZ2VudGVyOiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BFbnRlckxpc3RlbmVyKGV2ZW50KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uZHJvcGRlYWN0aXZhdGU6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLm9uRHJvcERlYWN0aXZhdGVMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbmRyYWdsZWF2ZTogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMub25Ecm9wTGVhdmVMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICBpbnRlcmFjdCgnLnBpcC1kcmFnZ2FibGUtZ3JvdXAnKVxuICAgICAgICAgIC5kcm9wem9uZSh7XG4gICAgICAgICAgICBvbmRyb3A6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLm9uRHJvcExpc3RlbmVyKGV2ZW50KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uZHJhZ2VudGVyOiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5vbkRyb3BFbnRlckxpc3RlbmVyKGV2ZW50KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uZHJvcGRlYWN0aXZhdGU6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLm9uRHJvcERlYWN0aXZhdGVMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbmRyYWdsZWF2ZTogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMub25Ecm9wTGVhdmVMaXN0ZW5lcihldmVudClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLiRjb250YWluZXJcbiAgICAgICAgICAub24oJ21vdXNlZG93biB0b3VjaHN0YXJ0JywgJ21kLW1lbnUgLm1kLWljb24tYnV0dG9uJywgKCkgPT4ge1xuICAgICAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKS5kcmFnZ2FibGUoZmFsc2UpO1xuICAgICAgICAgICAgJCh0aGlzKS50cmlnZ2VyKCdjbGljaycpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLm9uKCdtb3VzZXVwIHRvdWNoZW5kJywgKCkgPT4ge1xuICAgICAgICAgICAgaW50ZXJhY3QoJy5waXAtZHJhZ2dhYmxlLXRpbGUnKS5kcmFnZ2FibGUodHJ1ZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBEcmFnQ29tcG9uZW50OiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICBiaW5kaW5nczoge1xuICAgICAgdGlsZXNUZW1wbGF0ZXM6ICc9cGlwVGlsZXNUZW1wbGF0ZXMnLFxuICAgICAgdGlsZXNDb250ZXh0OiAnPXBpcFRpbGVzQ29udGV4dCcsXG4gICAgICBvcHRpb25zOiAnPXBpcERyYWdnYWJsZUdyaWQnLFxuICAgICAgZ3JvdXBNZW51QWN0aW9uczogJz1waXBHcm91cE1lbnVBY3Rpb25zJ1xuICAgIH0sXG4gICAgLy9jb250cm9sbGVyQXM6ICdEcmFnZ2VkQ3RybCcsXG4gICAgdGVtcGxhdGVVcmw6ICdkcmFnZ2FibGUvRHJhZ2dhYmxlLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6IERyYWdnYWJsZUNvbnRyb2xsZXJcbiAgfVxuXG4gIGFuZ3VsYXIubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlcycpXG4gICAgLmNvbXBvbmVudCgncGlwRHJhZ2dhYmxlR3JpZCcsIERyYWdDb21wb25lbnQpO1xufSIsImV4cG9ydCBpbnRlcmZhY2UgRHJhZ1RpbGVDb25zdHJ1Y3RvciB7XG4gIG5ldyAob3B0aW9uczogYW55KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIElEcmFnVGlsZUNvbnN0cnVjdG9yKGNvbnN0cnVjdG9yOiBEcmFnVGlsZUNvbnN0cnVjdG9yLCBvcHRpb25zOiBhbnkpOiBJRHJhZ1RpbGVTZXJ2aWNlIHtcbiAgcmV0dXJuIG5ldyBjb25zdHJ1Y3RvcihvcHRpb25zKTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRHJhZ1RpbGVTZXJ2aWNlIHtcbiAgdHBsOiBhbnk7XG4gIG9wdHM6IGFueTtcbiAgc2l6ZTogYW55O1xuICBlbGVtOiBhbnk7XG4gIHByZXZpZXc6IGFueTtcbiAgZ2V0U2l6ZSgpOiBhbnk7XG4gIHNldFNpemUod2lkdGgsIGhlaWdodCk6IGFueTtcbiAgc2V0UG9zaXRpb24obGVmdCwgdG9wKTogYW55O1xuICBnZXRDb21waWxlZFRlbXBsYXRlKCk6IGFueTtcbiAgdXBkYXRlRWxlbShwYXJlbnQpOiBhbnk7XG4gIGdldEVsZW0oKTogYW55O1xuICBzdGFydERyYWcoKTogYW55O1xuICBzdG9wRHJhZyhpc0FuaW1hdGUpOiBhbnk7XG4gIHNldFByZXZpZXdQb3NpdGlvbihjb29yZHMpOiB2b2lkO1xuICBnZXRPcHRpb25zKCk6IGFueTtcbiAgc2V0T3B0aW9ucyhvcHRpb25zKTogYW55O1xufVxuXG5sZXQgREVGQVVMVF9USUxFX1NJWkUgPSB7XG4gIGNvbFNwYW46IDEsXG4gIHJvd1NwYW46IDFcbn07XG5cbmV4cG9ydCBjbGFzcyBEcmFnVGlsZVNlcnZpY2UgaW1wbGVtZW50cyBJRHJhZ1RpbGVTZXJ2aWNlIHtcbiAgcHVibGljIHRwbDogYW55O1xuICBwdWJsaWMgb3B0czogYW55O1xuICBwdWJsaWMgc2l6ZTogYW55O1xuICBwdWJsaWMgZWxlbTogYW55O1xuICBwdWJsaWMgcHJldmlldzogYW55O1xuXG4gIGNvbnN0cnVjdG9yIChvcHRpb25zOiBhbnkpIHtcbiAgICB0aGlzLnRwbCA9IG9wdGlvbnMudHBsLmdldCgwKTtcbiAgICB0aGlzLm9wdHMgPSBvcHRpb25zO1xuICAgIHRoaXMuc2l6ZSA9IF8ubWVyZ2Uoe30sIERFRkFVTFRfVElMRV9TSVpFLCBvcHRpb25zLnNpemUpO1xuICAgIHRoaXMuZWxlbSA9IG51bGw7XG4gIH1cblxuICBwdWJsaWMgZ2V0U2l6ZSgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLnNpemU7XG4gIH1cblxuICBwdWJsaWMgc2V0U2l6ZSh3aWR0aCwgaGVpZ2h0KTogYW55IHtcbiAgICB0aGlzLnNpemUud2lkdGggPSB3aWR0aDtcbiAgICB0aGlzLnNpemUuaGVpZ2h0ID0gaGVpZ2h0O1xuXG4gICAgaWYgKHRoaXMuZWxlbSkge1xuICAgICAgdGhpcy5lbGVtLmNzcyh7XG4gICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcHVibGljIHNldFBvc2l0aW9uKGxlZnQsIHRvcCk6IGFueSB7XG4gICAgdGhpcy5zaXplLmxlZnQgPSBsZWZ0O1xuICAgIHRoaXMuc2l6ZS50b3AgPSB0b3A7XG5cbiAgICBpZiAodGhpcy5lbGVtKSB7XG4gICAgICB0aGlzLmVsZW0uY3NzKHtcbiAgICAgICAgbGVmdDogbGVmdCxcbiAgICAgICAgdG9wOiB0b3BcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcHVibGljIGdldENvbXBpbGVkVGVtcGxhdGUoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy50cGw7XG4gIH07XG5cbiAgcHVibGljIHVwZGF0ZUVsZW0ocGFyZW50KTogYW55IHtcbiAgICB0aGlzLmVsZW0gPSAkKHRoaXMudHBsKS5wYXJlbnQocGFyZW50KTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHB1YmxpYyBnZXRFbGVtKCk6IGFueSB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbS5nZXQoMCk7XG4gIH07XG5cbiAgcHVibGljIHN0YXJ0RHJhZygpOiBhbnkge1xuICAgIHRoaXMucHJldmlldyA9ICQoJzxkaXY+JylcbiAgICAgIC5hZGRDbGFzcygncGlwLWRyYWdnZWQtcHJldmlldycpXG4gICAgICAuY3NzKHtcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIGxlZnQ6IHRoaXMuZWxlbS5jc3MoJ2xlZnQnKSxcbiAgICAgICAgdG9wOiB0aGlzLmVsZW0uY3NzKCd0b3AnKSxcbiAgICAgICAgd2lkdGg6IHRoaXMuZWxlbS5jc3MoJ3dpZHRoJyksXG4gICAgICAgIGhlaWdodDogdGhpcy5lbGVtLmNzcygnaGVpZ2h0JylcbiAgICAgIH0pO1xuXG4gICAgdGhpcy5lbGVtXG4gICAgICAuYWRkQ2xhc3MoJ25vLWFuaW1hdGlvbicpXG4gICAgICAuY3NzKHtcbiAgICAgICAgekluZGV4OiAnOTk5OSdcbiAgICAgIH0pXG4gICAgICAuYWZ0ZXIodGhpcy5wcmV2aWV3KTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHB1YmxpYyBzdG9wRHJhZyhpc0FuaW1hdGUpOiBhbnkge1xuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIGlmIChpc0FuaW1hdGUpIHtcbiAgICAgIHRoaXMuZWxlbVxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ25vLWFuaW1hdGlvbicpXG4gICAgICAgIC5jc3Moe1xuICAgICAgICAgIGxlZnQ6IHRoaXMucHJldmlldy5jc3MoJ2xlZnQnKSxcbiAgICAgICAgICB0b3A6IHRoaXMucHJldmlldy5jc3MoJ3RvcCcpXG4gICAgICAgIH0pXG4gICAgICAgIC5vbigndHJhbnNpdGlvbmVuZCcsIG9uVHJhbnNpdGlvbkVuZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlbGYuZWxlbVxuICAgICAgICAuY3NzKHtcbiAgICAgICAgICBsZWZ0OiBzZWxmLnByZXZpZXcuY3NzKCdsZWZ0JyksXG4gICAgICAgICAgdG9wOiBzZWxmLnByZXZpZXcuY3NzKCd0b3AnKSxcbiAgICAgICAgICB6SW5kZXg6ICcnXG4gICAgICAgIH0pXG4gICAgICAgIC5yZW1vdmVDbGFzcygnbm8tYW5pbWF0aW9uJyk7XG5cbiAgICAgIHNlbGYucHJldmlldy5yZW1vdmUoKTtcbiAgICAgIHNlbGYucHJldmlldyA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG5cbiAgICBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQoKSB7XG4gICAgICBpZiAoc2VsZi5wcmV2aWV3KSB7XG4gICAgICAgIHNlbGYucHJldmlldy5yZW1vdmUoKTtcbiAgICAgICAgc2VsZi5wcmV2aWV3ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgc2VsZi5lbGVtXG4gICAgICAgIC5jc3MoJ3pJbmRleCcsICcnKVxuICAgICAgICAub2ZmKCd0cmFuc2l0aW9uZW5kJywgb25UcmFuc2l0aW9uRW5kKTtcbiAgICB9XG4gIH07XG5cbiAgcHVibGljIHNldFByZXZpZXdQb3NpdGlvbihjb29yZHMpIHtcbiAgICB0aGlzLnByZXZpZXcuY3NzKGNvb3Jkcyk7XG4gIH07XG5cbiAgcHVibGljIGdldE9wdGlvbnMoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5vcHRzLm9wdGlvbnM7XG4gIH07XG5cbiAgcHVibGljIHNldE9wdGlvbnMob3B0aW9ucyk6IGFueSB7XG4gICAgXy5tZXJnZSh0aGlzLm9wdHMub3B0aW9ucywgb3B0aW9ucyk7XG4gICAgXy5tZXJnZSh0aGlzLnNpemUsIG9wdGlvbnMuc2l6ZSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbn1cblxuYW5ndWxhclxuICAubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlcycpXG4gIC5zZXJ2aWNlKCdwaXBEcmFnVGlsZScsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgIGxldCBuZXdUaWxlID0gbmV3IERyYWdUaWxlU2VydmljZShvcHRpb25zKTtcblxuICAgICAgcmV0dXJuIG5ld1RpbGU7XG4gICAgfVxuICB9KTsiLCJhbmd1bGFyLm1vZHVsZSgncGlwRHJhZ2dhYmxlVGlsZXMnLCBbXSk7XG5cbmltcG9ydCAnLi9EcmFnZ2FibGVUaWxlU2VydmljZSc7XG5pbXBvcnQgJy4vRHJhZ2dhYmxlJzsiLCJpbXBvcnQge1xuICBNZW51VGlsZVNlcnZpY2Vcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XG5pbXBvcnQge1xuICBJVGlsZUNvbmZpZ1NlcnZpY2Vcbn0gZnJvbSAnLi4vY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ1NlcnZpY2UnO1xue1xuICBjbGFzcyBFdmVudFRpbGVDb250cm9sbGVyIGV4dGVuZHMgTWVudVRpbGVTZXJ2aWNlIHtcbiAgICBwcml2YXRlIF9vbGRPcGFjaXR5OiBudW1iZXI7XG5cbiAgICBwdWJsaWMgb3BhY2l0eTogbnVtYmVyID0gMC41NztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgJHNjb3BlOiBuZy5JU2NvcGUsXG4gICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXG4gICAgICBwcml2YXRlICR0aW1lb3V0OiBhbmd1bGFyLklUaW1lb3V0U2VydmljZSxcbiAgICAgIHByaXZhdGUgcGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2U6IElUaWxlQ29uZmlnU2VydmljZVxuICAgICkge1xuICAgICAgc3VwZXIoKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLm1lbnUpIHRoaXMubWVudSA9IF8udW5pb24odGhpcy5tZW51LCB0aGlzLm9wdGlvbnMubWVudSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMubWVudS5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICdDb25maWd1cmF0ZScsXG4gICAgICAgIGNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5vbkNvbmZpZ0NsaWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvciB8fCAnZ3JheSc7XG4gICAgICB0aGlzLm9wYWNpdHkgPSB0aGlzLm9wdGlvbnMub3BhY2l0eSB8fCB0aGlzLm9wYWNpdHk7XG5cbiAgICAgIHRoaXMuZHJhd0ltYWdlKCk7XG5cbiAgICAgIC8vIFRPRE8gaXQgZG9lc24ndCB3b3JrXG4gICAgICAkc2NvcGUuJHdhdGNoKCgpID0+IHtcbiAgICAgICAgcmV0dXJuICRlbGVtZW50LmlzKCc6dmlzaWJsZScpO1xuICAgICAgfSwgKG5ld1ZhbCkgPT4ge1xuICAgICAgICB0aGlzLmRyYXdJbWFnZSgpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkcmF3SW1hZ2UoKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmltYWdlKSB7XG4gICAgICAgIHRoaXMuJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMub25JbWFnZUxvYWQodGhpcy4kZWxlbWVudC5maW5kKCdpbWcnKSk7XG4gICAgICAgIH0sIDUwMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkNvbmZpZ0NsaWNrKCkge1xuICAgICAgdGhpcy5fb2xkT3BhY2l0eSA9IF8uY2xvbmUodGhpcy5vcGFjaXR5KTtcbiAgICAgIHRoaXMucGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2Uuc2hvdyh7XG4gICAgICAgIGRpYWxvZ0NsYXNzOiAncGlwLWNhbGVuZGFyLWNvbmZpZycsXG4gICAgICAgIGxvY2Fsczoge1xuICAgICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgICAgIHNpemU6IHRoaXMub3B0aW9ucy5zaXplIHx8IHtcbiAgICAgICAgICAgIGNvbFNwYW46IDEsXG4gICAgICAgICAgICByb3dTcGFuOiAxXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkYXRlOiB0aGlzLm9wdGlvbnMuZGF0ZSxcbiAgICAgICAgICB0aXRsZTogdGhpcy5vcHRpb25zLnRpdGxlLFxuICAgICAgICAgIHRleHQ6IHRoaXMub3B0aW9ucy50ZXh0LFxuICAgICAgICAgIG9wYWNpdHk6IHRoaXMub3BhY2l0eSxcbiAgICAgICAgICBvbk9wYWNpdHl0ZXN0OiAob3BhY2l0eSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vcGFjaXR5ID0gb3BhY2l0eTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuc2lvblVybDogJ2V2ZW50X3RpbGUvQ29uZmlnRGlhbG9nRXh0ZW5zaW9uLmh0bWwnXG4gICAgICB9LCAocmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgdGhpcy5jaGFuZ2VTaXplKHJlc3VsdC5zaXplKTtcblxuICAgICAgICB0aGlzLmNvbG9yID0gcmVzdWx0LmNvbG9yO1xuICAgICAgICB0aGlzLm9wdGlvbnMuY29sb3IgPSByZXN1bHQuY29sb3I7XG4gICAgICAgIHRoaXMub3B0aW9ucy5kYXRlID0gcmVzdWx0LmRhdGU7XG4gICAgICAgIHRoaXMub3B0aW9ucy50aXRsZSA9IHJlc3VsdC50aXRsZTtcbiAgICAgICAgdGhpcy5vcHRpb25zLnRleHQgPSByZXN1bHQudGV4dDtcbiAgICAgICAgdGhpcy5vcHRpb25zLm9wYWNpdHkgPSByZXN1bHQub3BhY2l0eTtcbiAgICAgIH0sICgpID0+IHtcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gdGhpcy5fb2xkT3BhY2l0eTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25JbWFnZUxvYWQoaW1hZ2UpIHtcbiAgICAgIHRoaXMuc2V0SW1hZ2VNYXJnaW5DU1ModGhpcy4kZWxlbWVudC5wYXJlbnQoKSwgaW1hZ2UpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGFuZ2VTaXplKHBhcmFtcykge1xuICAgICAgdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9IHBhcmFtcy5zaXplWDtcbiAgICAgIHRoaXMub3B0aW9ucy5zaXplLnJvd1NwYW4gPSBwYXJhbXMuc2l6ZVk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaW1hZ2UpIHtcbiAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zZXRJbWFnZU1hcmdpbkNTUyh0aGlzLiRlbGVtZW50LnBhcmVudCgpLCB0aGlzLiRlbGVtZW50LmZpbmQoJ2ltZycpKTtcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBMYXRlciByZXBsYWNlIGJ5IHBpcEltYWdlVXRpbHMgc2V2aWNlJ3MgZnVuY3Rpb25cbiAgICBwcml2YXRlIHNldEltYWdlTWFyZ2luQ1NTKCRlbGVtZW50LCBpbWFnZSkge1xuICAgICAgbGV0XG4gICAgICAgIGNvbnRhaW5lcldpZHRoID0gJGVsZW1lbnQud2lkdGggPyAkZWxlbWVudC53aWR0aCgpIDogJGVsZW1lbnQuY2xpZW50V2lkdGgsIC8vIHx8IDgwLFxuICAgICAgICBjb250YWluZXJIZWlnaHQgPSAkZWxlbWVudC5oZWlnaHQgPyAkZWxlbWVudC5oZWlnaHQoKSA6ICRlbGVtZW50LmNsaWVudEhlaWdodCwgLy8gfHwgODAsXG4gICAgICAgIGltYWdlV2lkdGggPSBpbWFnZVswXS5uYXR1cmFsV2lkdGggfHwgaW1hZ2Uud2lkdGgsXG4gICAgICAgIGltYWdlSGVpZ2h0ID0gaW1hZ2VbMF0ubmF0dXJhbEhlaWdodCB8fCBpbWFnZS5oZWlnaHQsXG4gICAgICAgIG1hcmdpbiA9IDAsXG4gICAgICAgIGNzc1BhcmFtcyA9IHt9O1xuXG4gICAgICBpZiAoKGltYWdlV2lkdGggLyBjb250YWluZXJXaWR0aCkgPiAoaW1hZ2VIZWlnaHQgLyBjb250YWluZXJIZWlnaHQpKSB7XG4gICAgICAgIG1hcmdpbiA9IC0oKGltYWdlV2lkdGggLyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lckhlaWdodCAtIGNvbnRhaW5lcldpZHRoKSAvIDIpO1xuICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi1sZWZ0J10gPSAnJyArIG1hcmdpbiArICdweCc7XG4gICAgICAgIGNzc1BhcmFtc1snaGVpZ2h0J10gPSAnJyArIGNvbnRhaW5lckhlaWdodCArICdweCc7IC8vJzEwMCUnO1xuICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGltYWdlV2lkdGggKiBjb250YWluZXJIZWlnaHQgLyBpbWFnZUhlaWdodCArICdweCc7IC8vJzEwMCUnO1xuICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi10b3AnXSA9ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWFyZ2luID0gLSgoaW1hZ2VIZWlnaHQgLyBpbWFnZVdpZHRoICogY29udGFpbmVyV2lkdGggLSBjb250YWluZXJIZWlnaHQpIC8gMik7XG4gICAgICAgIGNzc1BhcmFtc1snbWFyZ2luLXRvcCddID0gJycgKyBtYXJnaW4gKyAncHgnO1xuICAgICAgICBjc3NQYXJhbXNbJ2hlaWdodCddID0gJycgKyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lcldpZHRoIC8gaW1hZ2VXaWR0aCArICdweCc7IC8vJzEwMCUnO1xuICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGNvbnRhaW5lcldpZHRoICsgJ3B4JzsgLy8nMTAwJSc7XG4gICAgICAgIGNzc1BhcmFtc1snbWFyZ2luLWxlZnQnXSA9ICcnO1xuICAgICAgfVxuXG4gICAgICBpbWFnZS5jc3MoY3NzUGFyYW1zKTtcbiAgICB9XG4gIH1cblxuXG4gIGNvbnN0IEV2ZW50VGlsZTogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgYmluZGluZ3M6IHtcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IEV2ZW50VGlsZUNvbnRyb2xsZXIsXG4gICAgdGVtcGxhdGVVcmw6ICdldmVudF90aWxlL0V2ZW50VGlsZS5odG1sJ1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXG4gICAgLmNvbXBvbmVudCgncGlwRXZlbnRUaWxlJywgRXZlbnRUaWxlKTtcbn0iLCIvLyBJbXBvcnQgc2VydmljZXNcbmltcG9ydCAnLi90aWxlX2dyb3VwL2luZGV4JztcbmltcG9ydCAnLi9kcmFnZ2FibGUnO1xuXG4vLyBJbXBvcnQgdGlsZSBzZXJ2aWNlc1xuaW1wb3J0ICcuL21lbnVfdGlsZSc7XG5cbi8vIEltcG9ydCBkaWFsb2dzXG5pbXBvcnQgJy4vYWRkX3RpbGVfZGlhbG9nJztcbmltcG9ydCAnLi9jb25maWdfdGlsZV9kaWFsb2cnO1xuXG5hbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkJywgW1xuICAvLyBTZXJ2aWNlc1xuICAncGlwRHJhZ2dhYmxlVGlsZXMnLFxuICAncGlwRHJhZ2dhYmxlVGlsZXNHcm91cCcsXG4gIC8vIFRpbGUgc2VydmljZXNcbiAgJ3BpcE1lbnVUaWxlJyxcbiAgLy8gRGlhbG9nc1xuICAncGlwQ29uZmlnRGFzaGJvYXJkVGlsZURpYWxvZycsXG4gICdwaXBBZGREYXNoYm9hcmRUaWxlRGlhbG9nJyxcbiAgLy9UZW1wbGF0ZXNcbiAgJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLFxuICAvLyBFeHRlcm5hbCBwaXAgbW9kdWxlc1xuICAncGlwTGF5b3V0JyxcbiAgJ3BpcExvY2F0aW9ucycsXG4gICdwaXBEYXRlVGltZScsXG4gICdwaXBDaGFydHMnLFxuICAncGlwVHJhbnNsYXRlJyxcbiAgJ3BpcENvbnRyb2xzJyxcbiAgJ3BpcEJ1dHRvbnMnXG5dKTtcblxuLy8gSW1wb3J0IHV0aWxpdHkgXG5pbXBvcnQgJy4vdXRpbGl0eS9UaWxlVGVtcGxhdGVVdGlsaXR5Jztcbi8vIEltcG9ydCB0aWxlc1xuaW1wb3J0ICcuL2NvbW1vbl90aWxlL1RpbGUnO1xuaW1wb3J0ICcuL2NhbGVuZGFyX3RpbGUvQ2FsZW5kYXJUaWxlJztcbmltcG9ydCAnLi9ldmVudF90aWxlL0V2ZW50VGlsZSc7XG5pbXBvcnQgJy4vbm90ZV90aWxlL05vdGVUaWxlJztcbmltcG9ydCAnLi9waWN0dXJlX3NsaWRlcl90aWxlL1BpY3R1cmVTbGlkZXJUaWxlJztcbmltcG9ydCAnLi9wb3NpdGlvbl90aWxlL1Bvc2l0aW9uVGlsZSc7XG5pbXBvcnQgJy4vc3RhdGlzdGljc190aWxlL1N0YXRpc3RpY3NUaWxlJztcbi8vIEltcG9ydCBjb21tb24gY29tcG9uZW50XG5pbXBvcnQgJy4vZGFzaGJvYXJkL0Rhc2hib2FyZCc7XG4iLCJ7XG4gIGNvbnN0IFRpbGVNZW51ID0gKCk6bmcuSURpcmVjdGl2ZSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgICAgdGVtcGxhdGVVcmw6ICdtZW51X3RpbGUvTWVudVRpbGUuaHRtbCdcbiAgICB9O1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcE1lbnVUaWxlJylcbiAgICAuZGlyZWN0aXZlKCdwaXBUaWxlTWVudScsIFRpbGVNZW51KTtcbn0iLCJpbXBvcnQgeyBEYXNoYm9hcmRUaWxlIH0gZnJvbSAnLi4vY29tbW9uX3RpbGUvVGlsZSc7XG5cbmV4cG9ydCBjbGFzcyBNZW51VGlsZVNlcnZpY2UgZXh0ZW5kcyBEYXNoYm9hcmRUaWxlIHtcbiAgcHVibGljIG1lbnU6IGFueSA9IFt7XG4gICAgdGl0bGU6ICdDaGFuZ2UgU2l6ZScsXG4gICAgYWN0aW9uOiBhbmd1bGFyLm5vb3AsXG4gICAgc3VibWVudTogW3tcbiAgICAgICAgdGl0bGU6ICcxIHggMScsXG4gICAgICAgIGFjdGlvbjogJ2NoYW5nZVNpemUnLFxuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBzaXplWDogMSxcbiAgICAgICAgICBzaXplWTogMVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJzIgeCAxJyxcbiAgICAgICAgYWN0aW9uOiAnY2hhbmdlU2l6ZScsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHNpemVYOiAyLFxuICAgICAgICAgIHNpemVZOiAxXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnMiB4IDInLFxuICAgICAgICBhY3Rpb246ICdjaGFuZ2VTaXplJyxcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgc2l6ZVg6IDIsXG4gICAgICAgICAgc2l6ZVk6IDJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIF1cbiAgfV07XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgXCJuZ0luamVjdFwiO1xuXG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBjYWxsQWN0aW9uKGFjdGlvbk5hbWUsIHBhcmFtcywgaXRlbSkge1xuICAgIGlmICh0aGlzW2FjdGlvbk5hbWVdKSB7XG4gICAgICB0aGlzW2FjdGlvbk5hbWVdLmNhbGwodGhpcywgcGFyYW1zKTtcbiAgICB9XG5cbiAgICBpZiAoaXRlbVsnY2xpY2snXSkge1xuICAgICAgaXRlbVsnY2xpY2snXS5jYWxsKGl0ZW0sIHBhcmFtcywgdGhpcyk7XG4gICAgfVxuICB9O1xuXG4gIHB1YmxpYyBjaGFuZ2VTaXplKHBhcmFtcykge1xuICAgIHRoaXMub3B0aW9ucy5zaXplLmNvbFNwYW4gPSBwYXJhbXMuc2l6ZVg7XG4gICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcbiAgfTtcbn1cblxue1xuICBjbGFzcyBNZW51VGlsZVByb3ZpZGVyIHtcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBNZW51VGlsZVNlcnZpY2U7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgICBwdWJsaWMgJGdldCgpIHtcbiAgICAgIFwibmdJbmplY3RcIjtcblxuICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcbiAgICAgICAgdGhpcy5fc2VydmljZSA9IG5ldyBNZW51VGlsZVNlcnZpY2UoKTtcblxuICAgICAgcmV0dXJuIHRoaXMuX3NlcnZpY2U7XG4gICAgfVxuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcE1lbnVUaWxlJylcbiAgICAucHJvdmlkZXIoJ3BpcE1lbnVUaWxlJywgTWVudVRpbGVQcm92aWRlcik7XG59IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcE1lbnVUaWxlJywgW10pO1xuXG5pbXBvcnQgJy4vTWVudVRpbGVEaXJlY3RpdmUnO1xuaW1wb3J0ICcuL01lbnVUaWxlU2VydmljZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vTWVudVRpbGVTZXJ2aWNlJzsiLCJpbXBvcnQge1xuICBNZW51VGlsZVNlcnZpY2Vcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XG5pbXBvcnQge1xuICBJVGlsZUNvbmZpZ1NlcnZpY2Vcbn0gZnJvbSAnLi4vY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ1NlcnZpY2UnO1xuXG57XG4gIGNsYXNzIE5vdGVUaWxlQ29udHJvbGxlciBleHRlbmRzIE1lbnVUaWxlU2VydmljZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgIHByaXZhdGUgcGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2U6IElUaWxlQ29uZmlnU2VydmljZVxuICAgICkge1xuICAgICAgc3VwZXIoKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xuICAgICAgICB0aGlzLm1lbnUgPSB0aGlzLm9wdGlvbnMubWVudSA/IF8udW5pb24odGhpcy5tZW51LCB0aGlzLm9wdGlvbnMubWVudSkgOiB0aGlzLm1lbnU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMubWVudS5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICdDb25maWd1cmF0ZScsXG4gICAgICAgIGNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5vbkNvbmZpZ0NsaWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb2xvciA9IHRoaXMub3B0aW9ucy5jb2xvciB8fCAnb3JhbmdlJztcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uQ29uZmlnQ2xpY2soKSB7XG4gICAgICB0aGlzLnBpcFRpbGVDb25maWdEaWFsb2dTZXJ2aWNlLnNob3coe1xuICAgICAgICBsb2NhbHM6IHtcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvcixcbiAgICAgICAgICBzaXplOiB0aGlzLm9wdGlvbnMuc2l6ZSxcbiAgICAgICAgICB0aXRsZTogdGhpcy5vcHRpb25zLnRpdGxlLFxuICAgICAgICAgIHRleHQ6IHRoaXMub3B0aW9ucy50ZXh0LFxuICAgICAgICB9LFxuICAgICAgICBleHRlbnNpb25Vcmw6ICdub3RlX3RpbGUvQ29uZmlnRGlhbG9nRXh0ZW5zaW9uLmh0bWwnXG4gICAgICB9LCAocmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgdGhpcy5jb2xvciA9IHJlc3VsdC5jb2xvcjtcbiAgICAgICAgdGhpcy5vcHRpb25zLmNvbG9yID0gcmVzdWx0LmNvbG9yO1xuICAgICAgICB0aGlzLmNoYW5nZVNpemUocmVzdWx0LnNpemUpO1xuICAgICAgICB0aGlzLm9wdGlvbnMudGV4dCA9IHJlc3VsdC50ZXh0O1xuICAgICAgICB0aGlzLm9wdGlvbnMudGl0bGUgPSByZXN1bHQudGl0bGU7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBOb3RlVGlsZTogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgYmluZGluZ3M6IHtcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IE5vdGVUaWxlQ29udHJvbGxlcixcbiAgICB0ZW1wbGF0ZVVybDogJ25vdGVfdGlsZS9Ob3RlVGlsZS5odG1sJ1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXG4gICAgLmNvbXBvbmVudCgncGlwTm90ZVRpbGUnLCBOb3RlVGlsZSk7XG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuICBNZW51VGlsZVNlcnZpY2Vcbn0gZnJvbSAnLi4vbWVudV90aWxlL01lbnVUaWxlU2VydmljZSc7XG5pbXBvcnQge1xuICBJVGlsZUNvbmZpZ1NlcnZpY2Vcbn0gZnJvbSAnLi4vY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZ1NlcnZpY2UnO1xuaW1wb3J0IHtcbiAgSVRpbGVUZW1wbGF0ZVNlcnZpY2Vcbn0gZnJvbSAnLi4vdXRpbGl0eS9UaWxlVGVtcGxhdGVVdGlsaXR5Jztcblxue1xuICBjbGFzcyBQaWN0dXJlU2xpZGVyQ29udHJvbGxlciBleHRlbmRzIE1lbnVUaWxlU2VydmljZSB7XG4gICAgcHVibGljIGFuaW1hdGlvblR5cGU6IHN0cmluZyA9ICdmYWRpbmcnO1xuICAgIHB1YmxpYyBhbmltYXRpb25JbnRlcnZhbDogbnVtYmVyID0gNTAwMDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgcHJpdmF0ZSAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLFxuICAgICAgcHJpdmF0ZSAkZWxlbWVudDogYW55LFxuICAgICAgcHJpdmF0ZSAkdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2UsXG4gICAgICBwcml2YXRlIHBpcFRpbGVUZW1wbGF0ZTogSVRpbGVUZW1wbGF0ZVNlcnZpY2VcbiAgICApIHtcbiAgICAgIHN1cGVyKCk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5hbmltYXRpb25UeXBlID0gdGhpcy5vcHRpb25zLmFuaW1hdGlvblR5cGUgfHwgdGhpcy5hbmltYXRpb25UeXBlO1xuICAgICAgICB0aGlzLmFuaW1hdGlvbkludGVydmFsID0gdGhpcy5vcHRpb25zLmFuaW1hdGlvbkludGVydmFsIHx8IHRoaXMuYW5pbWF0aW9uSW50ZXJ2YWw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIG9uSW1hZ2VMb2FkKCRldmVudCkge1xuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMucGlwVGlsZVRlbXBsYXRlLnNldEltYWdlTWFyZ2luQ1NTKHRoaXMuJGVsZW1lbnQucGFyZW50KCksICRldmVudC50YXJnZXQpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGNoYW5nZVNpemUocGFyYW1zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID0gcGFyYW1zLnNpemVYO1xuICAgICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcblxuICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgIF8uZWFjaCh0aGlzLiRlbGVtZW50LmZpbmQoJ2ltZycpLCAoaW1hZ2UpID0+IHtcbiAgICAgICAgICB0aGlzLnBpcFRpbGVUZW1wbGF0ZS5zZXRJbWFnZU1hcmdpbkNTUyh0aGlzLiRlbGVtZW50LnBhcmVudCgpLCBpbWFnZSk7XG4gICAgICAgIH0pO1xuICAgICAgfSwgNTAwKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBQaWN0dXJlU2xpZGVyVGlsZTogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgYmluZGluZ3M6IHtcbiAgICAgIG9wdGlvbnM6ICc9cGlwT3B0aW9ucydcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IFBpY3R1cmVTbGlkZXJDb250cm9sbGVyLFxuICAgIHRlbXBsYXRlVXJsOiAncGljdHVyZV9zbGlkZXJfdGlsZS9QaWN0dXJlU2xpZGVyVGlsZS5odG1sJ1xuICB9XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERhc2hib2FyZCcpXG4gICAgLmNvbXBvbmVudCgncGlwUGljdHVyZVNsaWRlclRpbGUnLCBQaWN0dXJlU2xpZGVyVGlsZSk7XG59IiwiaW1wb3J0IHtcbiAgTWVudVRpbGVTZXJ2aWNlXG59IGZyb20gJy4uL21lbnVfdGlsZS9NZW51VGlsZVNlcnZpY2UnO1xuaW1wb3J0IHtcbiAgSVRpbGVDb25maWdTZXJ2aWNlXG59IGZyb20gJy4uL2NvbmZpZ190aWxlX2RpYWxvZy9Db25maWdEaWFsb2dTZXJ2aWNlJztcblxue1xuICBjbGFzcyBQb3NpdGlvblRpbGVDb250cm9sbGVyIGV4dGVuZHMgTWVudVRpbGVTZXJ2aWNlIHtcbiAgICBwdWJsaWMgc2hvd1Bvc2l0aW9uOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcbiAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IGFuZ3VsYXIuSVRpbWVvdXRTZXJ2aWNlLFxuICAgICAgcHJpdmF0ZSAkZWxlbWVudDogYW55LFxuICAgICAgcHJpdmF0ZSBwaXBUaWxlQ29uZmlnRGlhbG9nU2VydmljZTogSVRpbGVDb25maWdTZXJ2aWNlLFxuICAgICAgcHJpdmF0ZSBwaXBMb2NhdGlvbkVkaXREaWFsb2c6IGFueSxcbiAgICApIHtcbiAgICAgIHN1cGVyKCk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tZW51KSB0aGlzLm1lbnUgPSBfLnVuaW9uKHRoaXMubWVudSwgdGhpcy5vcHRpb25zLm1lbnUpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm1lbnUucHVzaCh7XG4gICAgICAgIHRpdGxlOiAnQ29uZmlndXJhdGUnLFxuICAgICAgICBjbGljazogKCkgPT4ge1xuICAgICAgICAgIHRoaXMub25Db25maWdDbGljaygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMubWVudS5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICdDaGFuZ2UgbG9jYXRpb24nLFxuICAgICAgICBjbGljazogKCkgPT4ge1xuICAgICAgICAgIHRoaXMub3BlbkxvY2F0aW9uRWRpdERpYWxvZygpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5vcHRpb25zLmxvY2F0aW9uID0gdGhpcy5vcHRpb25zLmxvY2F0aW9uIHx8IHRoaXMub3B0aW9ucy5wb3NpdGlvbjtcblxuICAgICAgJHNjb3BlLiR3YXRjaCgnJGN0cmwub3B0aW9ucy5sb2NhdGlvbicsICgpID0+IHtcbiAgICAgICAgdGhpcy5yZURyYXdQb3NpdGlvbigpO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIFRPRE8gaXQgZG9lc24ndCB3b3JrXG4gICAgICAkc2NvcGUuJHdhdGNoKCgpID0+IHtcbiAgICAgICAgcmV0dXJuICRlbGVtZW50LmlzKCc6dmlzaWJsZScpO1xuICAgICAgfSwgKG5ld1ZhbCkgPT4ge1xuICAgICAgICBpZiAobmV3VmFsID09IHRydWUpIHRoaXMucmVEcmF3UG9zaXRpb24oKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Db25maWdDbGljaygpIHtcbiAgICAgIHRoaXMucGlwVGlsZUNvbmZpZ0RpYWxvZ1NlcnZpY2Uuc2hvdyh7XG4gICAgICAgIGRpYWxvZ0NsYXNzOiAncGlwLXBvc2l0aW9uLWNvbmZpZycsXG4gICAgICAgIGxvY2Fsczoge1xuICAgICAgICAgIHNpemU6IHRoaXMub3B0aW9ucy5zaXplLFxuICAgICAgICAgIGxvY2F0aW9uTmFtZTogdGhpcy5vcHRpb25zLmxvY2F0aW9uTmFtZSxcbiAgICAgICAgICBoaWRlQ29sb3JzOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBleHRlbnNpb25Vcmw6ICdwb3NpdGlvbl90aWxlL0NvbmZpZ0RpYWxvZ0V4dGVuc2lvbi5odG1sJ1xuICAgICAgfSwgKHJlc3VsdDogYW55KSA9PiB7XG4gICAgICAgIHRoaXMuY2hhbmdlU2l6ZShyZXN1bHQuc2l6ZSk7XG4gICAgICAgIHRoaXMub3B0aW9ucy5sb2NhdGlvbk5hbWUgPSByZXN1bHQubG9jYXRpb25OYW1lO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGNoYW5nZVNpemUocGFyYW1zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID0gcGFyYW1zLnNpemVYO1xuICAgICAgdGhpcy5vcHRpb25zLnNpemUucm93U3BhbiA9IHBhcmFtcy5zaXplWTtcblxuICAgICAgdGhpcy5yZURyYXdQb3NpdGlvbigpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuTG9jYXRpb25FZGl0RGlhbG9nKCkge1xuICAgICAgdGhpcy5waXBMb2NhdGlvbkVkaXREaWFsb2cuc2hvdyh7XG4gICAgICAgIGxvY2F0aW9uTmFtZTogdGhpcy5vcHRpb25zLmxvY2F0aW9uTmFtZSxcbiAgICAgICAgbG9jYXRpb25Qb3M6IHRoaXMub3B0aW9ucy5sb2NhdGlvblxuICAgICAgfSwgKG5ld1Bvc2l0aW9uKSA9PiB7XG4gICAgICAgIGlmIChuZXdQb3NpdGlvbikge1xuICAgICAgICAgIHRoaXMub3B0aW9ucy5sb2NhdGlvbiA9IG5ld1Bvc2l0aW9uLmxvY2F0aW9uO1xuICAgICAgICAgIHRoaXMub3B0aW9ucy5sb2NhdGlvbk5hbWUgPSBuZXdQb3NpdGlvbi5sb2NhdGlvTmFtZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZURyYXdQb3NpdGlvbigpIHtcbiAgICAgIHRoaXMuc2hvd1Bvc2l0aW9uID0gZmFsc2U7XG4gICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5zaG93UG9zaXRpb24gPSB0cnVlO1xuICAgICAgfSwgNTApO1xuICAgIH1cbiAgfVxuXG5cbiAgY29uc3QgUG9zaXRpb25UaWxlOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICBiaW5kaW5nczoge1xuICAgICAgb3B0aW9uczogJz1waXBPcHRpb25zJ1xuICAgIH0sXG4gICAgY29udHJvbGxlcjogUG9zaXRpb25UaWxlQ29udHJvbGxlcixcbiAgICB0ZW1wbGF0ZVVybDogJ3Bvc2l0aW9uX3RpbGUvUG9zaXRpb25UaWxlLmh0bWwnXG4gIH1cblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcbiAgICAuY29tcG9uZW50KCdwaXBQb3NpdGlvblRpbGUnLCBQb3NpdGlvblRpbGUpO1xufSIsImltcG9ydCB7XG4gIE1lbnVUaWxlU2VydmljZVxufSBmcm9tICcuLi9tZW51X3RpbGUvTWVudVRpbGVTZXJ2aWNlJztcblxue1xuICBjb25zdCBTTUFMTF9DSEFSVDogbnVtYmVyID0gNzA7XG4gIGNvbnN0IEJJR19DSEFSVDogbnVtYmVyID0gMjUwO1xuXG4gIGNsYXNzIFN0YXRpc3RpY3NUaWxlQ29udHJvbGxlciBleHRlbmRzIE1lbnVUaWxlU2VydmljZSB7XG4gICAgcHJpdmF0ZSBfJHNjb3BlOiBhbmd1bGFyLklTY29wZTtcbiAgICBwcml2YXRlIF8kdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2U7XG5cbiAgICBwdWJsaWMgcmVzZXQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwdWJsaWMgY2hhcnRTaXplOiBudW1iZXIgPSBTTUFMTF9DSEFSVDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcbiAgICAgICR0aW1lb3V0OiBhbmd1bGFyLklUaW1lb3V0U2VydmljZVxuICAgICkge1xuICAgICAgc3VwZXIoKTtcbiAgICAgIHRoaXMuXyRzY29wZSA9ICRzY29wZTtcbiAgICAgIHRoaXMuXyR0aW1lb3V0ID0gJHRpbWVvdXQ7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5tZW51ID0gdGhpcy5vcHRpb25zLm1lbnUgPyBfLnVuaW9uKHRoaXMubWVudSwgdGhpcy5vcHRpb25zLm1lbnUpIDogdGhpcy5tZW51O1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldENoYXJ0U2l6ZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjaGFuZ2VTaXplKHBhcmFtcykge1xuICAgICAgdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9IHBhcmFtcy5zaXplWDtcbiAgICAgIHRoaXMub3B0aW9ucy5zaXplLnJvd1NwYW4gPSBwYXJhbXMuc2l6ZVk7XG5cbiAgICAgIHRoaXMucmVzZXQgPSB0cnVlO1xuICAgICAgdGhpcy5zZXRDaGFydFNpemUoKTtcbiAgICAgIHRoaXMuXyR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5yZXNldCA9IGZhbHNlO1xuICAgICAgfSwgNTAwKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldENoYXJ0U2l6ZSgpIHtcbiAgICAgIHRoaXMuY2hhcnRTaXplID0gdGhpcy5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmIHRoaXMub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiA/IEJJR19DSEFSVCA6IFNNQUxMX0NIQVJUO1xuICAgIH1cbiAgfVxuXG5cbiAgY29uc3QgU3RhdGlzdGljc1RpbGU6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xuICAgIGJpbmRpbmdzOiB7XG4gICAgICBvcHRpb25zOiAnPXBpcE9wdGlvbnMnXG4gICAgfSxcbiAgICBjb250cm9sbGVyOiBTdGF0aXN0aWNzVGlsZUNvbnRyb2xsZXIsXG4gICAgdGVtcGxhdGVVcmw6ICdzdGF0aXN0aWNzX3RpbGUvU3RhdGlzdGljc1RpbGUuaHRtbCdcbiAgfVxuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdwaXBEYXNoYm9hcmQnKVxuICAgIC5jb21wb25lbnQoJ3BpcFN0YXRpc3RpY3NUaWxlJywgU3RhdGlzdGljc1RpbGUpO1xufSIsIntcbiAgaW50ZXJmYWNlIERyYWdnYWJsZVRpbGVBdHRyaWJ1dGVzIGV4dGVuZHMgbmcuSUF0dHJpYnV0ZXMge1xuICAgIHBpcERyYWdnYWJsZVRpbGVzOiBhbnk7XG4gIH1cblxuICBmdW5jdGlvbiBEcmFnZ2FibGVUaWxlTGluayhcbiAgICAkc2NvcGU6IG5nLklTY29wZSxcbiAgICAkZWxlbTogSlF1ZXJ5LFxuICAgICRhdHRyOiBEcmFnZ2FibGVUaWxlQXR0cmlidXRlc1xuICApIHtcbiAgICBjb25zdCBkb2NGcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuICAgICAgZ3JvdXAgPSAkc2NvcGUuJGV2YWwoJGF0dHIucGlwRHJhZ2dhYmxlVGlsZXMpO1xuXG4gICAgZ3JvdXAuZm9yRWFjaChmdW5jdGlvbiAodGlsZSkge1xuICAgICAgY29uc3QgdHBsID0gd3JhcENvbXBvbmVudCh0aWxlLmdldENvbXBpbGVkVGVtcGxhdGUoKSk7XG4gICAgICBkb2NGcmFnLmFwcGVuZENoaWxkKHRwbCk7XG4gICAgfSk7XG5cbiAgICAkZWxlbS5hcHBlbmQoZG9jRnJhZyk7XG5cbiAgICBmdW5jdGlvbiB3cmFwQ29tcG9uZW50KGVsZW0pIHtcbiAgICAgIHJldHVybiAkKCc8ZGl2PicpXG4gICAgICAgIC5hZGRDbGFzcygncGlwLWRyYWdnYWJsZS10aWxlJylcbiAgICAgICAgLmFwcGVuZChlbGVtKVxuICAgICAgICAuZ2V0KDApO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIERyYWdnYWJsZVRpbGVzKCk6IG5nLklEaXJlY3RpdmUge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgbGluazogZnVuY3Rpb24oXG4gICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxuICAgICAgICAkZWxlbTogSlF1ZXJ5LFxuICAgICAgICAkYXR0cjogRHJhZ2dhYmxlVGlsZUF0dHJpYnV0ZXNcbiAgICAgICkge1xuICAgICAgICAgIG5ldyBEcmFnZ2FibGVUaWxlTGluaygkc2NvcGUsICRlbGVtLCAkYXR0cik7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdwaXBEcmFnZ2FibGVUaWxlc0dyb3VwJylcbiAgICAuZGlyZWN0aXZlKCdwaXBEcmFnZ2FibGVUaWxlcycsIERyYWdnYWJsZVRpbGVzKTtcbn0iLCJleHBvcnQgaW50ZXJmYWNlIFRpbGVzR3JpZENvbnN0cnVjdG9yIHtcbiAgbmV3KHRpbGVzLCBvcHRpb25zLCBjb2x1bW5zLCBlbGVtKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIElUaWxlc0dyaWRDb25zdHJ1Y3Rvcihjb25zdHJ1Y3RvcjogVGlsZXNHcmlkQ29uc3RydWN0b3IsIHRpbGVzLCBvcHRpb25zLCBjb2x1bW5zLCBlbGVtKTogSVRpbGVzR3JpZFNlcnZpY2Uge1xuICByZXR1cm4gbmV3IGNvbnN0cnVjdG9yKHRpbGVzLCBvcHRpb25zLCBjb2x1bW5zLCBlbGVtKTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVGlsZXNHcmlkU2VydmljZSB7XG4gIHRpbGVzOiBhbnk7XG4gIG9wdHM6IGFueTtcbiAgY29sdW1uczogYW55O1xuICBlbGVtOiBhbnk7XG4gIGdyaWRDZWxsczogYW55O1xuICBpbmxpbmU6IGJvb2xlYW47XG4gIGlzTW9iaWxlTGF5b3V0OiBib29sZWFuO1xuXG4gIGFkZFRpbGUodGlsZSk6IGFueTtcbiAgZ2V0Q2VsbEJ5UG9zaXRpb24ocm93LCBjb2wpOiBhbnk7XG4gIGdldENlbGxzKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55O1xuICBnZXRBdmFpbGFibGVDZWxsc0Rlc2t0b3AocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pOiBhbnk7XG4gIGdldENlbGwoc3JjLCBiYXNpY1JvdywgYmFzaWNDb2wsIGNvbHVtbnMpOiBhbnk7XG4gIGdldEF2YWlsYWJsZUNlbGxzTW9iaWxlKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55O1xuICBnZXRCYXNpY1JvdyhwcmV2Q2VsbCk6IGFueTtcbiAgaXNDZWxsRnJlZShyb3csIGNvbCk6IGFueTtcbiAgZ2V0Q2VsbEluZGV4KHNyY0NlbGwpOiBhbnk7XG4gIHJlc2VydmVDZWxscyhzdGFydCwgZW5kLCBlbGVtKTogdm9pZDtcbiAgY2xlYXJFbGVtZW50cygpOiB2b2lkO1xuICBzZXRBdmFpbGFibGVDb2x1bW5zKGNvbHVtbnMpOiBhbnk7XG4gIGdlbmVyYXRlR3JpZChzaW5nbGVUaWxlV2lkdGggPyApOiBhbnk7XG4gIHNldFRpbGVzRGltZW5zaW9ucyhvbmx5UG9zaXRpb24sIGRyYWdnZWRUaWxlKTogYW55O1xuICBjYWxjQ29udGFpbmVySGVpZ2h0KCk6IGFueTtcbiAgZ2V0VGlsZUJ5Tm9kZShub2RlKTogYW55O1xuICBnZXRUaWxlQnlDb29yZGluYXRlcyhjb29yZHMsIGRyYWdnZWRUaWxlKTogYW55O1xuICBnZXRUaWxlSW5kZXgodGlsZSk6IGFueTtcbiAgc3dhcFRpbGVzKG1vdmVkVGlsZSwgYmVmb3JlVGlsZSk6IGFueTtcbiAgcmVtb3ZlVGlsZShyZW1vdmVUaWxlKTogYW55O1xuICB1cGRhdGVUaWxlT3B0aW9ucyhvcHRzKTogYW55O1xufVxuXG5jb25zdCBNT0JJTEVfTEFZT1VUX0NPTFVNTlMgPSAyO1xuXG5leHBvcnQgY2xhc3MgVGlsZXNHcmlkU2VydmljZSBpbXBsZW1lbnRzIElUaWxlc0dyaWRTZXJ2aWNlIHtcbiAgcHVibGljIHRpbGVzOiBhbnk7XG4gIHB1YmxpYyBvcHRzOiBhbnk7XG4gIHB1YmxpYyBjb2x1bW5zOiBhbnk7XG4gIHB1YmxpYyBlbGVtOiBhbnk7XG4gIHB1YmxpYyBncmlkQ2VsbHM6IGFueSA9IFtdO1xuICBwdWJsaWMgaW5saW5lOiBib29sZWFuID0gZmFsc2U7XG4gIHB1YmxpYyBpc01vYmlsZUxheW91dDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcih0aWxlcywgb3B0aW9ucywgY29sdW1ucywgZWxlbSkge1xuICAgIHRoaXMudGlsZXMgPSB0aWxlcztcbiAgICB0aGlzLm9wdHMgPSBvcHRpb25zO1xuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnMgfHwgMDsgLy8gYXZhaWxhYmxlIGNvbHVtbnMgaW4gYSByb3dcbiAgICB0aGlzLmVsZW0gPSBlbGVtO1xuICAgIHRoaXMuZ3JpZENlbGxzID0gW107XG4gICAgdGhpcy5pbmxpbmUgPSBvcHRpb25zLmlubGluZSB8fCBmYWxzZTtcbiAgICB0aGlzLmlzTW9iaWxlTGF5b3V0ID0gY29sdW1ucyA9PT0gTU9CSUxFX0xBWU9VVF9DT0xVTU5TO1xuICB9XG5cbiAgcHVibGljIGFkZFRpbGUodGlsZSk6IGFueSB7XG4gICAgdGhpcy50aWxlcy5wdXNoKHRpbGUpO1xuICAgIGlmICh0aGlzLnRpbGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgdGhpcy5nZW5lcmF0ZUdyaWQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBwdWJsaWMgZ2V0Q2VsbEJ5UG9zaXRpb24ocm93LCBjb2wpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLmdyaWRDZWxsc1tyb3ddW2NvbF07XG4gIH07XG5cbiAgcHVibGljIGdldENlbGxzKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55IHtcbiAgICBpZiAodGhpcy5pc01vYmlsZUxheW91dCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0QXZhaWxhYmxlQ2VsbHNNb2JpbGUocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRBdmFpbGFibGVDZWxsc0Rlc2t0b3AocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pO1xuICAgIH1cbiAgfTtcblxuICBwdWJsaWMgZ2V0QXZhaWxhYmxlQ2VsbHNEZXNrdG9wKHByZXZDZWxsLCByb3dTcGFuLCBjb2xTcGFuKTogYW55IHtcbiAgICBsZXQgbGVmdENvcm5lckNlbGw7XG4gICAgbGV0IHJpZ2h0Q29ybmVyQ2VsbDtcbiAgICBjb25zdCBiYXNpY0NvbCA9IHByZXZDZWxsICYmIHByZXZDZWxsLmNvbCB8fCAwO1xuICAgIGNvbnN0IGJhc2ljUm93ID0gdGhpcy5nZXRCYXNpY1JvdyhwcmV2Q2VsbCk7XG5cbiAgICAvLyBTbWFsbCB0aWxlXG4gICAgaWYgKGNvbFNwYW4gPT09IDEgJiYgcm93U3BhbiA9PT0gMSkge1xuICAgICAgY29uc3QgZ3JpZENvcHkgPSB0aGlzLmdyaWRDZWxscy5zbGljZSgpO1xuXG4gICAgICBpZiAoIXByZXZDZWxsKSB7XG4gICAgICAgIGxlZnRDb3JuZXJDZWxsID0gZ3JpZENvcHlbMF1bMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3csIGJhc2ljQ29sLCB0aGlzLmNvbHVtbnMpO1xuXG4gICAgICAgIGlmICghbGVmdENvcm5lckNlbGwpIHtcbiAgICAgICAgICBjb25zdCByb3dTaGlmdCA9IHRoaXMuaXNNb2JpbGVMYXlvdXQgPyAxIDogMjtcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3cgKyByb3dTaGlmdCwgMCwgdGhpcy5jb2x1bW5zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE1lZGl1bSB0aWxlXG4gICAgaWYgKGNvbFNwYW4gPT09IDIgJiYgcm93U3BhbiA9PT0gMSkge1xuICAgICAgY29uc3QgcHJldlRpbGVTaXplID0gcHJldkNlbGwgJiYgcHJldkNlbGwuZWxlbS5zaXplIHx8IG51bGw7XG5cbiAgICAgIGlmICghcHJldlRpbGVTaXplKSB7XG4gICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wpO1xuICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDEpO1xuICAgICAgfSBlbHNlIGlmIChwcmV2VGlsZVNpemUuY29sU3BhbiA9PT0gMiAmJiBwcmV2VGlsZVNpemUucm93U3BhbiA9PT0gMikge1xuICAgICAgICBpZiAodGhpcy5jb2x1bW5zIC0gYmFzaWNDb2wgLSAyID4gMCkge1xuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wgKyAxKTtcbiAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDApO1xuICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAyLCAxKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcmV2VGlsZVNpemUuY29sU3BhbiA9PT0gMiAmJiBwcmV2VGlsZVNpemUucm93U3BhbiA9PT0gMSkge1xuICAgICAgICBpZiAocHJldkNlbGwucm93ICUgMiA9PT0gMCkge1xuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDEsIGJhc2ljQ29sIC0gMSk7XG4gICAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDEsIGJhc2ljQ29sKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodGhpcy5jb2x1bW5zIC0gYmFzaWNDb2wgLSAzID49IDApIHtcbiAgICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wgKyAxKTtcbiAgICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDApO1xuICAgICAgICAgICAgcmlnaHRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdyArIDIsIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcmV2VGlsZVNpemUuY29sU3BhbiA9PT0gMSAmJiBwcmV2VGlsZVNpemUucm93U3BhbiA9PT0gMSkge1xuICAgICAgICBpZiAodGhpcy5jb2x1bW5zIC0gYmFzaWNDb2wgLSAzID49IDApIHtcbiAgICAgICAgICBpZiAodGhpcy5pc0NlbGxGcmVlKGJhc2ljUm93LCBiYXNpY0NvbCArIDEpKSB7XG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMSk7XG4gICAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sICsgMik7XG4gICAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAyLCAwKTtcbiAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMiwgMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBCaWcgdGlsZVxuICAgIGlmICghcHJldkNlbGwgJiYgcm93U3BhbiA9PT0gMiAmJiBjb2xTcGFuID09PSAyKSB7XG4gICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3csIGJhc2ljQ29sKTtcbiAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAxLCBiYXNpY0NvbCArIDEpO1xuICAgIH0gZWxzZSBpZiAocm93U3BhbiA9PT0gMiAmJiBjb2xTcGFuID09PSAyKSB7XG4gICAgICBpZiAodGhpcy5jb2x1bW5zIC0gYmFzaWNDb2wgLSAyID4gMCkge1xuICAgICAgICBpZiAodGhpcy5pc0NlbGxGcmVlKGJhc2ljUm93LCBiYXNpY0NvbCArIDEpKSB7XG4gICAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93LCBiYXNpY0NvbCArIDEpO1xuICAgICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAxLCBiYXNpY0NvbCArIDIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgYmFzaWNDb2wgKyAyKTtcbiAgICAgICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMSwgYmFzaWNDb2wgKyAzKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMiwgMCk7XG4gICAgICAgIHJpZ2h0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbEJ5UG9zaXRpb24oYmFzaWNSb3cgKyAzLCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc3RhcnQ6IGxlZnRDb3JuZXJDZWxsLFxuICAgICAgZW5kOiByaWdodENvcm5lckNlbGxcbiAgICB9O1xuICB9O1xuXG4gIHB1YmxpYyBnZXRDZWxsKHNyYywgYmFzaWNSb3csIGJhc2ljQ29sLCBjb2x1bW5zKTogYW55IHtcbiAgICBsZXQgY2VsbCwgY29sLCByb3c7XG5cbiAgICBpZiAodGhpcy5pc01vYmlsZUxheW91dCkge1xuICAgICAgLy8gbW9iaWxlIGxheW91dFxuICAgICAgZm9yIChjb2wgPSBiYXNpY0NvbDsgY29sIDwgY29sdW1uczsgY29sKyspIHtcbiAgICAgICAgaWYgKCFzcmNbYmFzaWNSb3ddW2NvbF0uZWxlbSkge1xuICAgICAgICAgIGNlbGwgPSBzcmNbYmFzaWNSb3ddW2NvbF07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNlbGw7XG4gICAgfVxuXG4gICAgLy8gZGVza3RvcFxuICAgIGZvciAoY29sID0gYmFzaWNDb2w7IGNvbCA8IGNvbHVtbnM7IGNvbCsrKSB7XG4gICAgICBmb3IgKHJvdyA9IDA7IHJvdyA8IDI7IHJvdysrKSB7XG4gICAgICAgIGlmICghc3JjW3JvdyArIGJhc2ljUm93XVtjb2xdLmVsZW0pIHtcbiAgICAgICAgICBjZWxsID0gc3JjW3JvdyArIGJhc2ljUm93XVtjb2xdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgIHJldHVybiBjZWxsO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBwdWJsaWMgZ2V0QXZhaWxhYmxlQ2VsbHNNb2JpbGUocHJldkNlbGwsIHJvd1NwYW4sIGNvbFNwYW4pOiBhbnkge1xuICAgIGxldCBsZWZ0Q29ybmVyQ2VsbDtcbiAgICBsZXQgcmlnaHRDb3JuZXJDZWxsO1xuICAgIGNvbnN0IGJhc2ljUm93ID0gdGhpcy5nZXRCYXNpY1JvdyhwcmV2Q2VsbCk7XG4gICAgY29uc3QgYmFzaWNDb2wgPSBwcmV2Q2VsbCAmJiBwcmV2Q2VsbC5jb2wgfHwgMDtcblxuXG4gICAgaWYgKGNvbFNwYW4gPT09IDEgJiYgcm93U3BhbiA9PT0gMSkge1xuICAgICAgY29uc3QgZ3JpZENvcHkgPSB0aGlzLmdyaWRDZWxscy5zbGljZSgpO1xuXG4gICAgICBpZiAoIXByZXZDZWxsKSB7XG4gICAgICAgIGxlZnRDb3JuZXJDZWxsID0gZ3JpZENvcHlbMF1bMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3csIGJhc2ljQ29sLCB0aGlzLmNvbHVtbnMpO1xuXG4gICAgICAgIGlmICghbGVmdENvcm5lckNlbGwpIHtcbiAgICAgICAgICBjb25zdCByb3dTaGlmdCA9IHRoaXMuaXNNb2JpbGVMYXlvdXQgPyAxIDogMjtcbiAgICAgICAgICBsZWZ0Q29ybmVyQ2VsbCA9IHRoaXMuZ2V0Q2VsbChncmlkQ29weSwgYmFzaWNSb3cgKyByb3dTaGlmdCwgMCwgdGhpcy5jb2x1bW5zKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghcHJldkNlbGwpIHtcbiAgICAgIGxlZnRDb3JuZXJDZWxsID0gdGhpcy5nZXRDZWxsQnlQb3NpdGlvbihiYXNpY1JvdywgMCk7XG4gICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgcm93U3BhbiAtIDEsIDEpO1xuICAgIH0gZWxzZSBpZiAoY29sU3BhbiA9PT0gMikge1xuICAgICAgbGVmdENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgMSwgMCk7XG4gICAgICByaWdodENvcm5lckNlbGwgPSB0aGlzLmdldENlbGxCeVBvc2l0aW9uKGJhc2ljUm93ICsgcm93U3BhbiwgMSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXJ0OiBsZWZ0Q29ybmVyQ2VsbCxcbiAgICAgIGVuZDogcmlnaHRDb3JuZXJDZWxsXG4gICAgfTtcbiAgfTtcblxuICBwdWJsaWMgZ2V0QmFzaWNSb3cocHJldkNlbGwpOiBhbnkge1xuICAgIGxldCBiYXNpY1JvdztcblxuICAgIGlmICh0aGlzLmlzTW9iaWxlTGF5b3V0KSB7XG4gICAgICBpZiAocHJldkNlbGwpIHtcbiAgICAgICAgYmFzaWNSb3cgPSBwcmV2Q2VsbCAmJiBwcmV2Q2VsbC5yb3cgfHwgMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJhc2ljUm93ID0gMDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByZXZDZWxsKSB7XG4gICAgICAgIGJhc2ljUm93ID0gcHJldkNlbGwucm93ICUgMiA9PT0gMCA/IHByZXZDZWxsLnJvdyA6IHByZXZDZWxsLnJvdyAtIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiYXNpY1JvdyA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGJhc2ljUm93O1xuICB9O1xuXG4gIHB1YmxpYyBpc0NlbGxGcmVlKHJvdywgY29sKTogYW55IHtcbiAgICByZXR1cm4gIXRoaXMuZ3JpZENlbGxzW3Jvd11bY29sXS5lbGVtO1xuICB9O1xuXG4gIHB1YmxpYyBnZXRDZWxsSW5kZXgoc3JjQ2VsbCk6IGFueSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgbGV0IGluZGV4O1xuXG4gICAgdGhpcy5ncmlkQ2VsbHMuZm9yRWFjaCgocm93LCByb3dJbmRleCkgPT4ge1xuICAgICAgaW5kZXggPSBfLmZpbmRJbmRleChzZWxmLmdyaWRDZWxsc1tyb3dJbmRleF0sIChjZWxsKSA9PiB7XG4gICAgICAgIHJldHVybiBjZWxsID09PSBzcmNDZWxsO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGluZGV4ICE9PSAtMSA/IGluZGV4IDogMDtcbiAgfTtcblxuICBwdWJsaWMgcmVzZXJ2ZUNlbGxzKHN0YXJ0LCBlbmQsIGVsZW0pIHtcbiAgICB0aGlzLmdyaWRDZWxscy5mb3JFYWNoKChyb3cpID0+IHtcbiAgICAgIHJvdy5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICAgIGlmIChjZWxsLnJvdyA+PSBzdGFydC5yb3cgJiYgY2VsbC5yb3cgPD0gZW5kLnJvdyAmJlxuICAgICAgICAgIGNlbGwuY29sID49IHN0YXJ0LmNvbCAmJiBjZWxsLmNvbCA8PSBlbmQuY29sKSB7XG4gICAgICAgICAgY2VsbC5lbGVtID0gZWxlbTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgcHVibGljIGNsZWFyRWxlbWVudHMoKSB7XG4gICAgdGhpcy5ncmlkQ2VsbHMuZm9yRWFjaCgocm93KSA9PiB7XG4gICAgICByb3cuZm9yRWFjaCgodGlsZSkgPT4ge1xuICAgICAgICB0aWxlLmVsZW0gPSBudWxsO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgcHVibGljIHNldEF2YWlsYWJsZUNvbHVtbnMoY29sdW1ucyk6IGFueSB7XG4gICAgdGhpcy5pc01vYmlsZUxheW91dCA9IGNvbHVtbnMgPT09IE1PQklMRV9MQVlPVVRfQ09MVU1OUztcbiAgICB0aGlzLmNvbHVtbnMgPSBjb2x1bW5zO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgcHVibGljIGdlbmVyYXRlR3JpZChzaW5nbGVUaWxlV2lkdGggPyApOiBhbnkge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzLFxuICAgICAgdGlsZVdpZHRoID0gc2luZ2xlVGlsZVdpZHRoIHx8IHRoaXMub3B0cy50aWxlV2lkdGgsXG4gICAgICBvZmZzZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGlwLWRyYWdnYWJsZS1ncm91cC10aXRsZScpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGxldCBjb2xzSW5Sb3cgPSAwLFxuICAgICAgcm93cyA9IDAsXG4gICAgICBncmlkSW5Sb3cgPSBbXTtcblxuICAgIHRoaXMuZ3JpZENlbGxzID0gW107XG5cbiAgICB0aGlzLnRpbGVzLmZvckVhY2goKHRpbGUsIGluZGV4LCBzcmNUaWxlcykgPT4ge1xuICAgICAgY29uc3QgdGlsZVNpemUgPSB0aWxlLmdldFNpemUoKTtcblxuICAgICAgZ2VuZXJhdGVDZWxscyh0aWxlU2l6ZS5jb2xTcGFuKTtcblxuICAgICAgaWYgKHNyY1RpbGVzLmxlbmd0aCA9PT0gaW5kZXggKyAxKSB7XG4gICAgICAgIGlmIChjb2xzSW5Sb3cgPCBzZWxmLmNvbHVtbnMpIHtcbiAgICAgICAgICBnZW5lcmF0ZUNlbGxzKHNlbGYuY29sdW1ucyAtIGNvbHNJblJvdyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBHZW5lcmF0ZSBtb3JlIGNlbGxzIGZvciBleHRlbmRzIHRpbGUgc2l6ZSB0byBiaWdcbiAgICAgICAgaWYgKHNlbGYudGlsZXMubGVuZ3RoICogMiA+IHNlbGYuZ3JpZENlbGxzLmxlbmd0aCkge1xuICAgICAgICAgIEFycmF5LmFwcGx5KG51bGwsIEFycmF5KHNlbGYudGlsZXMubGVuZ3RoICogMiAtIHNlbGYuZ3JpZENlbGxzLmxlbmd0aCkpLmZvckVhY2goKCkgPT4ge1xuICAgICAgICAgICAgZ2VuZXJhdGVDZWxscyhzZWxmLmNvbHVtbnMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBnZW5lcmF0ZUNlbGxzKG5ld0NlbGxDb3VudCkge1xuICAgICAgQXJyYXkuYXBwbHkobnVsbCwgQXJyYXkobmV3Q2VsbENvdW50KSkuZm9yRWFjaCgoKSA9PiB7XG4gICAgICAgIGlmIChzZWxmLmNvbHVtbnMgPCBjb2xzSW5Sb3cgKyAxKSB7XG4gICAgICAgICAgcm93cysrO1xuICAgICAgICAgIGNvbHNJblJvdyA9IDA7XG5cbiAgICAgICAgICBzZWxmLmdyaWRDZWxscy5wdXNoKGdyaWRJblJvdyk7XG4gICAgICAgICAgZ3JpZEluUm93ID0gW107XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdG9wID0gcm93cyAqIHNlbGYub3B0cy50aWxlSGVpZ2h0ICsgKHJvd3MgPyByb3dzICogc2VsZi5vcHRzLmd1dHRlciA6IDApICsgb2Zmc2V0LmhlaWdodDtcbiAgICAgICAgbGV0IGxlZnQgPSBjb2xzSW5Sb3cgKiB0aWxlV2lkdGggKyAoY29sc0luUm93ID8gY29sc0luUm93ICogc2VsZi5vcHRzLmd1dHRlciA6IDApO1xuXG4gICAgICAgIC8vIERlc2NyaWJlIGdyaWQgY2VsbCBzaXplIHRocm91Z2ggYmxvY2sgY29ybmVycyBjb29yZGluYXRlc1xuICAgICAgICBncmlkSW5Sb3cucHVzaCh7XG4gICAgICAgICAgdG9wOiB0b3AsXG4gICAgICAgICAgbGVmdDogbGVmdCxcbiAgICAgICAgICBib3R0b206IHRvcCArIHNlbGYub3B0cy50aWxlSGVpZ2h0LFxuICAgICAgICAgIHJpZ2h0OiBsZWZ0ICsgdGlsZVdpZHRoLFxuICAgICAgICAgIHJvdzogcm93cyxcbiAgICAgICAgICBjb2w6IGNvbHNJblJvd1xuICAgICAgICB9KTtcblxuICAgICAgICBjb2xzSW5Sb3crKztcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHB1YmxpYyBzZXRUaWxlc0RpbWVuc2lvbnMob25seVBvc2l0aW9uLCBkcmFnZ2VkVGlsZSk6IGFueSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgbGV0IGN1cnJJbmRleCA9IDA7XG4gICAgbGV0IHByZXZDZWxsO1xuXG4gICAgaWYgKG9ubHlQb3NpdGlvbikge1xuICAgICAgc2VsZi5jbGVhckVsZW1lbnRzKCk7XG4gICAgfVxuXG4gICAgdGhpcy50aWxlcy5mb3JFYWNoKCh0aWxlKSA9PiB7XG4gICAgICBjb25zdCB0aWxlU2l6ZSA9IHRpbGUuZ2V0U2l6ZSgpO1xuICAgICAgbGV0IHN0YXJ0Q2VsbDtcbiAgICAgIGxldCB3aWR0aDtcbiAgICAgIGxldCBoZWlnaHQ7XG4gICAgICBsZXQgY2VsbHM7XG5cbiAgICAgIHRpbGUudXBkYXRlRWxlbSgnLnBpcC1kcmFnZ2FibGUtdGlsZScpO1xuICAgICAgaWYgKHRpbGVTaXplLmNvbFNwYW4gPT09IDEpIHtcbiAgICAgICAgaWYgKHByZXZDZWxsICYmIHByZXZDZWxsLmVsZW0uc2l6ZS5jb2xTcGFuID09PSAyICYmIHByZXZDZWxsLmVsZW0uc2l6ZS5yb3dTcGFuID09PSAxKSB7XG4gICAgICAgICAgc3RhcnRDZWxsID0gc2VsZi5nZXRDZWxscyhzZWxmLmdldENlbGxCeVBvc2l0aW9uKHByZXZDZWxsLnJvdywgcHJldkNlbGwuY29sIC0gMSksIDEsIDEpLnN0YXJ0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0YXJ0Q2VsbCA9IHNlbGYuZ2V0Q2VsbHMocHJldkNlbGwsIDEsIDEpLnN0YXJ0O1xuICAgICAgICB9XG5cblxuICAgICAgICBpZiAoIW9ubHlQb3NpdGlvbikge1xuICAgICAgICAgIHdpZHRoID0gc3RhcnRDZWxsLnJpZ2h0IC0gc3RhcnRDZWxsLmxlZnQ7XG4gICAgICAgICAgaGVpZ2h0ID0gc3RhcnRDZWxsLmJvdHRvbSAtIHN0YXJ0Q2VsbC50b3A7XG4gICAgICAgIH1cblxuICAgICAgICBwcmV2Q2VsbCA9IHN0YXJ0Q2VsbDtcblxuICAgICAgICBzZWxmLnJlc2VydmVDZWxscyhzdGFydENlbGwsIHN0YXJ0Q2VsbCwgdGlsZSk7XG5cbiAgICAgICAgY3VyckluZGV4Kys7XG4gICAgICB9IGVsc2UgaWYgKHRpbGVTaXplLmNvbFNwYW4gPT09IDIpIHtcbiAgICAgICAgY2VsbHMgPSBzZWxmLmdldENlbGxzKHByZXZDZWxsLCB0aWxlU2l6ZS5yb3dTcGFuLCB0aWxlU2l6ZS5jb2xTcGFuKTtcbiAgICAgICAgc3RhcnRDZWxsID0gY2VsbHMuc3RhcnQ7XG5cbiAgICAgICAgaWYgKCFvbmx5UG9zaXRpb24pIHtcbiAgICAgICAgICB3aWR0aCA9IGNlbGxzLmVuZC5yaWdodCAtIGNlbGxzLnN0YXJ0LmxlZnQ7XG4gICAgICAgICAgaGVpZ2h0ID0gY2VsbHMuZW5kLmJvdHRvbSAtIGNlbGxzLnN0YXJ0LnRvcDtcbiAgICAgICAgfVxuXG4gICAgICAgIHByZXZDZWxsID0gY2VsbHMuZW5kO1xuXG4gICAgICAgIHNlbGYucmVzZXJ2ZUNlbGxzKGNlbGxzLnN0YXJ0LCBjZWxscy5lbmQsIHRpbGUpO1xuXG4gICAgICAgIGN1cnJJbmRleCArPSAyO1xuICAgICAgfVxuXG4gICAgICAvLyBSZW5kZXIgcHJldmlld1xuICAgICAgLy8gd2hpbGUgdGlsZXMgZnJvbSBncm91cCBpcyBkcmFnZ2VkXG4gICAgICBpZiAoZHJhZ2dlZFRpbGUgPT09IHRpbGUpIHtcbiAgICAgICAgdGlsZS5zZXRQcmV2aWV3UG9zaXRpb24oe1xuICAgICAgICAgIGxlZnQ6IHN0YXJ0Q2VsbC5sZWZ0LFxuICAgICAgICAgIHRvcDogc3RhcnRDZWxsLnRvcFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghb25seVBvc2l0aW9uKSB7XG4gICAgICAgIHRpbGUuc2V0U2l6ZSh3aWR0aCwgaGVpZ2h0KTtcbiAgICAgIH1cblxuICAgICAgdGlsZS5zZXRQb3NpdGlvbihzdGFydENlbGwubGVmdCwgc3RhcnRDZWxsLnRvcCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBwdWJsaWMgY2FsY0NvbnRhaW5lckhlaWdodCgpOiBhbnkge1xuICAgIGxldCBtYXhIZWlnaHRTaXplLCBtYXhXaWR0aFNpemU7XG5cbiAgICBpZiAoIXRoaXMudGlsZXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBtYXhIZWlnaHRTaXplID0gXy5tYXhCeSh0aGlzLnRpbGVzLCAodGlsZSkgPT4ge1xuICAgICAgY29uc3QgdGlsZVNpemUgPSB0aWxlWydnZXRTaXplJ10oKTtcbiAgICAgIHJldHVybiB0aWxlU2l6ZS50b3AgKyB0aWxlU2l6ZS5oZWlnaHQ7XG4gICAgfSlbJ2dldFNpemUnXSgpO1xuXG4gICAgdGhpcy5lbGVtLnN0eWxlLmhlaWdodCA9IG1heEhlaWdodFNpemUudG9wICsgbWF4SGVpZ2h0U2l6ZS5oZWlnaHQgKyAncHgnO1xuXG4gICAgaWYgKHRoaXMuaW5saW5lKSB7XG4gICAgICBtYXhXaWR0aFNpemUgPSBfLm1heEJ5KHRoaXMudGlsZXMsICh0aWxlKSA9PiB7XG4gICAgICAgIGNvbnN0IHRpbGVTaXplID0gdGlsZVsnZ2V0U2l6ZSddKCk7XG4gICAgICAgIHJldHVybiB0aWxlU2l6ZS5sZWZ0ICsgdGlsZVNpemUud2lkdGg7XG4gICAgICB9KVsnZ2V0U2l6ZSddKCk7XG5cbiAgICAgIHRoaXMuZWxlbS5zdHlsZS53aWR0aCA9IG1heFdpZHRoU2l6ZS5sZWZ0ICsgbWF4V2lkdGhTaXplLndpZHRoICsgJ3B4JztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBwdWJsaWMgZ2V0VGlsZUJ5Tm9kZShub2RlKTogYW55IHtcbiAgICBjb25zdCBmb3VuZFRpbGUgPSB0aGlzLnRpbGVzLmZpbHRlcigodGlsZSkgPT4ge1xuICAgICAgcmV0dXJuIG5vZGUgPT09IHRpbGUuZ2V0RWxlbSgpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGZvdW5kVGlsZS5sZW5ndGggPyBmb3VuZFRpbGVbMF0gOiBudWxsO1xuICB9O1xuXG4gIHB1YmxpYyBnZXRUaWxlQnlDb29yZGluYXRlcyhjb29yZHMsIGRyYWdnZWRUaWxlKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy50aWxlc1xuICAgICAgLmZpbHRlcigodGlsZSkgPT4ge1xuICAgICAgICBjb25zdCB0aWxlU2l6ZSA9IHRpbGUuZ2V0U2l6ZSgpO1xuXG4gICAgICAgIHJldHVybiB0aWxlICE9PSBkcmFnZ2VkVGlsZSAmJlxuICAgICAgICAgIHRpbGVTaXplLmxlZnQgPD0gY29vcmRzLmxlZnQgJiYgY29vcmRzLmxlZnQgPD0gKHRpbGVTaXplLmxlZnQgKyB0aWxlU2l6ZS53aWR0aCkgJiZcbiAgICAgICAgICB0aWxlU2l6ZS50b3AgPD0gY29vcmRzLnRvcCAmJiBjb29yZHMudG9wIDw9ICh0aWxlU2l6ZS50b3AgKyB0aWxlU2l6ZS5oZWlnaHQpO1xuICAgICAgfSlbMF0gfHwgbnVsbDtcbiAgfTtcblxuICBwdWJsaWMgZ2V0VGlsZUluZGV4KHRpbGUpOiBhbnkge1xuICAgIHJldHVybiBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCB0aWxlKTtcbiAgfTtcblxuICBwdWJsaWMgc3dhcFRpbGVzKG1vdmVkVGlsZSwgYmVmb3JlVGlsZSk6IGFueSB7XG4gICAgY29uc3QgbW92ZWRUaWxlSW5kZXggPSBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCBtb3ZlZFRpbGUpO1xuICAgIGNvbnN0IGJlZm9yZVRpbGVJbmRleCA9IF8uZmluZEluZGV4KHRoaXMudGlsZXMsIGJlZm9yZVRpbGUpO1xuXG4gICAgdGhpcy50aWxlcy5zcGxpY2UobW92ZWRUaWxlSW5kZXgsIDEpO1xuICAgIHRoaXMudGlsZXMuc3BsaWNlKGJlZm9yZVRpbGVJbmRleCwgMCwgbW92ZWRUaWxlKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHB1YmxpYyByZW1vdmVUaWxlKHJlbW92ZVRpbGUpOiBhbnkge1xuICAgIGxldCBkcm9wcGVkVGlsZTtcblxuICAgIHRoaXMudGlsZXMuZm9yRWFjaCgodGlsZSwgaW5kZXgsIHRpbGVzKSA9PiB7XG4gICAgICBpZiAodGlsZSA9PT0gcmVtb3ZlVGlsZSkge1xuICAgICAgICBkcm9wcGVkVGlsZSA9IHRpbGVzLnNwbGljZShpbmRleCwgMSlbMF07XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBkcm9wcGVkVGlsZTtcbiAgfTtcblxuICBwdWJsaWMgdXBkYXRlVGlsZU9wdGlvbnMob3B0cyk6IGFueSB7XG4gICAgY29uc3QgaW5kZXggPSBfLmZpbmRJbmRleCh0aGlzLnRpbGVzLCAodGlsZSkgPT4ge1xuICAgICAgcmV0dXJuIHRpbGVbJ2dldE9wdGlvbnMnXSgpID09PSBvcHRzO1xuICAgIH0pO1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgdGhpcy50aWxlc1tpbmRleF0uc2V0T3B0aW9ucyhvcHRzKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcbn1cblxuXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ3BpcERyYWdnYWJsZVRpbGVzR3JvdXAnKVxuICAuc2VydmljZSgncGlwVGlsZXNHcmlkJywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAodGlsZXMsIG9wdGlvbnMsIGNvbHVtbnMsIGVsZW0pIHtcbiAgICAgIGNvbnN0IG5ld0dyaWQgPSBuZXcgVGlsZXNHcmlkU2VydmljZSh0aWxlcywgb3B0aW9ucywgY29sdW1ucywgZWxlbSk7XG5cbiAgICAgIHJldHVybiBuZXdHcmlkO1xuICAgIH1cbiAgfSk7IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcERyYWdnYWJsZVRpbGVzR3JvdXAnLCBbXSk7XG5cbmltcG9ydCAnLi9UaWxlR3JvdXBEaXJlY3RpdmUnO1xuaW1wb3J0ICcuL1RpbGVHcm91cFNlcnZpY2UnOyIsImV4cG9ydCBpbnRlcmZhY2UgSVRpbGVUZW1wbGF0ZVNlcnZpY2Uge1xuICAgIGdldFRlbXBsYXRlKHNvdXJjZSwgdHBsID8gLCB0aWxlU2NvcGUgPyAsIHN0cmljdENvbXBpbGUgPyApOiBhbnk7XG4gICAgc2V0SW1hZ2VNYXJnaW5DU1MoJGVsZW1lbnQsIGltYWdlKTogdm9pZDtcbn0gXG5cbntcbiAgICBjbGFzcyB0aWxlVGVtcGxhdGVTZXJ2aWNlIGltcGxlbWVudHMgSVRpbGVUZW1wbGF0ZVNlcnZpY2Uge1xuICAgICAgICBwcml2YXRlIF8kaW50ZXJwb2xhdGU6IGFuZ3VsYXIuSUludGVycG9sYXRlU2VydmljZTtcbiAgICAgICAgcHJpdmF0ZSBfJGNvbXBpbGU6IGFuZ3VsYXIuSUNvbXBpbGVTZXJ2aWNlO1xuICAgICAgICBwcml2YXRlIF8kdGVtcGxhdGVSZXF1ZXN0OiBhbmd1bGFyLklUZW1wbGF0ZVJlcXVlc3RTZXJ2aWNlO1xuXG4gICAgICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgJGludGVycG9sYXRlOiBhbmd1bGFyLklJbnRlcnBvbGF0ZVNlcnZpY2UsXG4gICAgICAgICAgICAkY29tcGlsZTogYW5ndWxhci5JQ29tcGlsZVNlcnZpY2UsXG4gICAgICAgICAgICAkdGVtcGxhdGVSZXF1ZXN0OiBhbmd1bGFyLklUZW1wbGF0ZVJlcXVlc3RTZXJ2aWNlXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5fJGludGVycG9sYXRlID0gJGludGVycG9sYXRlO1xuICAgICAgICAgICAgdGhpcy5fJGNvbXBpbGUgPSAkY29tcGlsZTtcbiAgICAgICAgICAgIHRoaXMuXyR0ZW1wbGF0ZVJlcXVlc3QgPSAkdGVtcGxhdGVSZXF1ZXN0O1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIGdldFRlbXBsYXRlKHNvdXJjZSwgdHBsID8gLCB0aWxlU2NvcGUgPyAsIHN0cmljdENvbXBpbGUgPyApOiBhbnkge1xuICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsLFxuICAgICAgICAgICAgICAgIHR5cGVcbiAgICAgICAgICAgIH0gPSBzb3VyY2U7XG4gICAgICAgICAgICBsZXQgcmVzdWx0O1xuXG4gICAgICAgICAgICBpZiAodHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGludGVycG9sYXRlZCA9IHRwbCA/IHRoaXMuXyRpbnRlcnBvbGF0ZSh0cGwpKHNvdXJjZSkgOiB0aGlzLl8kaW50ZXJwb2xhdGUodGVtcGxhdGUpKHNvdXJjZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0cmljdENvbXBpbGUgPT0gdHJ1ZSA/XG4gICAgICAgICAgICAgICAgICAgICh0aWxlU2NvcGUgPyB0aGlzLl8kY29tcGlsZShpbnRlcnBvbGF0ZWQpKHRpbGVTY29wZSkgOiB0aGlzLl8kY29tcGlsZShpbnRlcnBvbGF0ZWQpKSA6XG4gICAgICAgICAgICAgICAgICAgIGludGVycG9sYXRlZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRpbGVTY29wZSA/IHRoaXMuXyRjb21waWxlKHRlbXBsYXRlKSh0aWxlU2NvcGUpIDogdGhpcy5fJGNvbXBpbGUodGVtcGxhdGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGVtcGxhdGVVcmwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl8kdGVtcGxhdGVSZXF1ZXN0KHRlbXBsYXRlVXJsLCBmYWxzZSkudGhlbigoaHRtbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSB0aWxlU2NvcGUgPyB0aGlzLl8kY29tcGlsZShodG1sKSh0aWxlU2NvcGUpIDogdGhpcy5fJGNvbXBpbGUoaHRtbCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgc2V0SW1hZ2VNYXJnaW5DU1MoJGVsZW1lbnQsIGltYWdlKSB7XG4gICAgICAgICAgICBsZXRcbiAgICAgICAgICAgICAgICBjb250YWluZXJXaWR0aCA9ICRlbGVtZW50LndpZHRoID8gJGVsZW1lbnQud2lkdGgoKSA6ICRlbGVtZW50LmNsaWVudFdpZHRoLFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lckhlaWdodCA9ICRlbGVtZW50LmhlaWdodCA/ICRlbGVtZW50LmhlaWdodCgpIDogJGVsZW1lbnQuY2xpZW50SGVpZ2h0LFxuICAgICAgICAgICAgICAgIGltYWdlV2lkdGggPSAoaW1hZ2VbMF0gPyBpbWFnZVswXS5uYXR1cmFsV2lkdGggOiBpbWFnZS5uYXR1cmFsV2lkdGgpIHx8IGltYWdlLndpZHRoLFxuICAgICAgICAgICAgICAgIGltYWdlSGVpZ2h0ID0gKGltYWdlWzBdID8gaW1hZ2VbMF0ubmF0dXJhbEhlaWdodCA6IGltYWdlLm5hdHVyYWxXaWR0aCkgfHwgaW1hZ2UuaGVpZ2h0LFxuICAgICAgICAgICAgICAgIG1hcmdpbiA9IDAsXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zID0ge307XG5cbiAgICAgICAgICAgIGlmICgoaW1hZ2VXaWR0aCAvIGNvbnRhaW5lcldpZHRoKSA+IChpbWFnZUhlaWdodCAvIGNvbnRhaW5lckhlaWdodCkpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4gPSAtKChpbWFnZVdpZHRoIC8gaW1hZ2VIZWlnaHQgKiBjb250YWluZXJIZWlnaHQgLSBjb250YWluZXJXaWR0aCkgLyAyKTtcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi1sZWZ0J10gPSAnJyArIG1hcmdpbiArICdweCc7XG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydoZWlnaHQnXSA9ICcnICsgY29udGFpbmVySGVpZ2h0ICsgJ3B4JzsgLy8nMTAwJSc7XG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWyd3aWR0aCddID0gJycgKyBpbWFnZVdpZHRoICogY29udGFpbmVySGVpZ2h0IC8gaW1hZ2VIZWlnaHQgKyAncHgnOyAvLycxMDAlJztcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi10b3AnXSA9ICcnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4gPSAtKChpbWFnZUhlaWdodCAvIGltYWdlV2lkdGggKiBjb250YWluZXJXaWR0aCAtIGNvbnRhaW5lckhlaWdodCkgLyAyKTtcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi10b3AnXSA9ICcnICsgbWFyZ2luICsgJ3B4JztcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ2hlaWdodCddID0gJycgKyBpbWFnZUhlaWdodCAqIGNvbnRhaW5lcldpZHRoIC8gaW1hZ2VXaWR0aCArICdweCc7IC8vJzEwMCUnO1xuICAgICAgICAgICAgICAgIGNzc1BhcmFtc1snd2lkdGgnXSA9ICcnICsgY29udGFpbmVyV2lkdGggKyAncHgnOyAvLycxMDAlJztcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi1sZWZ0J10gPSAnJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJChpbWFnZSkuY3NzKGNzc1BhcmFtcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBpbWFnZSBsb2FkIGRpcmVjdGl2ZSBUT0RPOiByZW1vdmUgdG8gcGlwSW1hZ2VVdGlsc1xuICAgIGNvbnN0IEltYWdlTG9hZCA9IGZ1bmN0aW9uIEltYWdlTG9hZCgkcGFyc2U6IG5nLklQYXJzZVNlcnZpY2UpOiBuZy5JRGlyZWN0aXZlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGU6IG5nLklTY29wZSwgZWxlbWVudDogSlF1ZXJ5LCBhdHRyczogYW55KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAkcGFyc2UoYXR0cnMucGlwSW1hZ2VMb2FkKTtcblxuICAgICAgICAgICAgICAgIGVsZW1lbnQuYmluZCgnbG9hZCcsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhzY29wZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50OiBldmVudFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgncGlwRGFzaGJvYXJkJylcbiAgICAgICAgLnNlcnZpY2UoJ3BpcFRpbGVUZW1wbGF0ZScsIHRpbGVUZW1wbGF0ZVNlcnZpY2UpXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEltYWdlTG9hZCcsIEltYWdlTG9hZCk7XG59IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2FkZF90aWxlX2RpYWxvZy9BZGRUaWxlLmh0bWwnLFxuICAgICc8bWQtZGlhbG9nIGNsYXNzPVwicGlwLWRpYWxvZyBwaXAtYWRkLWNvbXBvbmVudC1kaWFsb2dcIj48bWQtZGlhbG9nLWNvbnRlbnQgY2xhc3M9XCJsYXlvdXQtY29sdW1uXCI+PGRpdiBjbGFzcz1cInRoZW1lLWRpdmlkZXIgcDE2IGZsZXgtYXV0b1wiPjxoMyBjbGFzcz1cImhpZGUteHMgbTAgYm0xNiB0aGVtZS10ZXh0LXByaW1hcnlcIiBoaWRlLXhzPVwiXCI+e3sgXFwnREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19USVRMRVxcJyB8IHRyYW5zbGF0ZSB9fTxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJsYXlvdXQtcm93IGZsZXgtYXV0byBtMCB0bTE2XCI+PG1kLXNlbGVjdCBjbGFzcz1cImZsZXgtYXV0byBtMCB0aGVtZS10ZXh0LXByaW1hcnlcIiBuZy1tb2RlbD1cImRpYWxvZ0N0cmwuYWN0aXZlR3JvdXBJbmRleFwiIHBsYWNlaG9sZGVyPVwie3sgXFwnREFTSEJPQVJEX0FERF9USUxFX0RJQUxPR19DUkVBVEVfTkVXX0dST1VQXFwnIHwgdHJhbnNsYXRlIH19XCIgYXJpYS1sYWJlbD1cIkdyb3VwXCI+PG1kLW9wdGlvbiBuZy12YWx1ZT1cIiRpbmRleFwiIG5nLXJlcGVhdD1cImdyb3VwIGluIGRpYWxvZ0N0cmwuZ3JvdXBzXCI+e3sgZ3JvdXAgfX08L21kLW9wdGlvbj48L21kLXNlbGVjdD48L21kLWlucHV0LWNvbnRhaW5lcj48L2gzPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtYm9keSBwaXAtc2Nyb2xsIHAwIGZsZXgtYXV0b1wiPjxwIGNsYXNzPVwibWQtYm9keS0xIHRoZW1lLXRleHQtc2Vjb25kYXJ5IG0wIGxwMTYgcnAxNlwiPnt7IFxcJ0RBU0hCT0FSRF9BRERfVElMRV9ESUFMT0dfVVNFX0hPVF9LRVlTXFwnIHwgdHJhbnNsYXRlIH19PC9wPjxtZC1saXN0IG5nLWluaXQ9XCJncm91cEluZGV4ID0gJGluZGV4XCIgbmctcmVwZWF0PVwiZ3JvdXAgaW4gZGlhbG9nQ3RybC5kZWZhdWx0V2lkZ2V0c1wiPjxtZC1saXN0LWl0ZW0gY2xhc3M9XCJsYXlvdXQtcm93IHBpcC1saXN0LWl0ZW0gbHAxNiBycDE2XCIgbmctcmVwZWF0PVwiaXRlbSBpbiBncm91cFwiPjxkaXYgY2xhc3M9XCJpY29uLWhvbGRlciBmbGV4LW5vbmVcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnt7OjogaXRlbS5pY29uIH19XCI+PC9tZC1pY29uPjxkaXYgY2xhc3M9XCJwaXAtYmFkZ2UgdGhlbWUtYmFkZ2UgbWQtd2FyblwiIG5nLWlmPVwiaXRlbS5hbW91bnRcIj48c3Bhbj57eyBpdGVtLmFtb3VudCB9fTwvc3Bhbj48L2Rpdj48L2Rpdj48c3BhbiBjbGFzcz1cImZsZXgtYXV0byBsbTI0IHRoZW1lLXRleHQtcHJpbWFyeVwiPnt7OjogaXRlbS50aXRsZSB9fTwvc3Bhbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gZmxleC1ub25lXCIgbmctY2xpY2s9XCJkaWFsb2dDdHJsLmVuY3JlYXNlKGdyb3VwSW5kZXgsICRpbmRleClcIiBhcmlhLWxhYmVsPVwiRW5jcmVhc2VcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnBsdXMtY2lyY2xlXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBmbGV4LW5vbmVcIiBuZy1jbGljaz1cImRpYWxvZ0N0cmwuZGVjcmVhc2UoZ3JvdXBJbmRleCwgJGluZGV4KVwiIGFyaWEtbGFiZWw9XCJEZWNyZWFzZVwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6bWludXMtY2lyY2xlXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjwvbWQtbGlzdC1pdGVtPjxtZC1kaXZpZGVyIGNsYXNzPVwibG03MiB0bTggYm04XCIgbmctaWY9XCJncm91cEluZGV4ICE9PSAoZGlhbG9nQ3RybC5kZWZhdWx0V2lkZ2V0cy5sZW5ndGggLSAxKVwiPjwvbWQtZGl2aWRlcj48L21kLWxpc3Q+PC9kaXY+PC9tZC1kaWFsb2ctY29udGVudD48bWQtZGlhbG9nLWFjdGlvbnMgY2xhc3M9XCJmbGV4LW5vbmUgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXIgdGhlbWUtZGl2aWRlciBkaXZpZGVyLXRvcCB0aGVtZS10ZXh0LXByaW1hcnlcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiZGlhbG9nQ3RybC5jYW5jZWwoKVwiIGFyaWEtbGFiZWw9XCJDYW5jZWxcIj57eyBcXCdDQU5DRUxcXCcgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiZGlhbG9nQ3RybC5hZGQoKVwiIG5nLWRpc2FibGVkPVwiZGlhbG9nQ3RybC50b3RhbFdpZGdldHMgPT09IDBcIiBhcmlhbC1sYWJlbD1cIkFkZFwiPnt7IFxcJ0FERFxcJyB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvbWQtZGlhbG9nLWFjdGlvbnM+PC9tZC1kaWFsb2c+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnY2FsZW5kYXJfdGlsZS9DYWxlbmRhclRpbGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3aWRnZXQtYm94IHBpcC1jYWxlbmRhci13aWRnZXQge3sgJGN0cmwuY29sb3IgfX0gbGF5b3V0LWNvbHVtbiBsYXlvdXQtZmlsbCB0cDBcIiBuZy1jbGFzcz1cInsgc21hbGw6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDEgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMSwgbWVkaXVtOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIGJpZzogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAyIH1cIj48ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWRpbmcgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tZW5kLWNlbnRlciBmbGV4LW5vbmVcIj48cGlwLXRpbGUtbWVudT48L3BpcC10aWxlLW1lbnU+PC9kaXY+PGRpdiBjbGFzcz1cIndpZGdldC1jb250ZW50IGZsZXgtYXV0byBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyXCIgbmctaWY9XCIkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDFcIj48c3BhbiBjbGFzcz1cImRhdGUgbG0yNCBybTEyXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlLmdldERhdGUoKSB9fTwvc3Bhbj48ZGl2IGNsYXNzPVwiZmxleC1hdXRvIGxheW91dC1jb2x1bW5cIj48c3BhbiBjbGFzcz1cIndlZWtkYXkgbWQtaGVhZGxpbmVcIj57eyAkY3RybC5vcHRpb25zLmRhdGUgfCBmb3JtYXRMb25nRGF5T2ZXZWVrIH19PC9zcGFuPiA8c3BhbiBjbGFzcz1cIm1vbnRoLXllYXIgbWQtaGVhZGxpbmVcIj57eyAkY3RybC5vcHRpb25zLmRhdGUgfCBmb3JtYXRMb25nTW9udGggfX0ge3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0WWVhciB9fTwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwid2lkZ2V0LWNvbnRlbnQgZmxleC1hdXRvIGxheW91dC1jb2x1bW4gbGF5b3V0LWFsaWduLXNwYWNlLWFyb3VuZC1jZW50ZXJcIiBuZy1oaWRlPVwiJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxXCI+PHNwYW4gY2xhc3M9XCJ3ZWVrZGF5IG1kLWhlYWRsaW5lXCIgbmctaGlkZT1cIiRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDEgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMVwiPnt7ICRjdHJsLm9wdGlvbnMuZGF0ZSB8IGZvcm1hdExvbmdEYXlPZldlZWsgfX08L3NwYW4+IDxzcGFuIGNsYXNzPVwid2Vla2RheVwiIG5nLXNob3c9XCIkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDFcIj57eyAkY3RybC5vcHRpb25zLmRhdGUgfCBmb3JtYXRMb25nRGF5T2ZXZWVrIH19PC9zcGFuPiA8c3BhbiBjbGFzcz1cImRhdGUgbG0xMiBybTEyXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlLmdldERhdGUoKSB9fTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJtb250aC15ZWFyIG1kLWhlYWRsaW5lXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0TG9uZ01vbnRoIH19IHt7ICRjdHJsLm9wdGlvbnMuZGF0ZSB8IGZvcm1hdFllYXIgfX08L3NwYW4+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnY2FsZW5kYXJfdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3LXN0cmV0Y2ggYm0xNlwiPkRhdGU6PG1kLWRhdGVwaWNrZXIgbmctbW9kZWw9XCIkY3RybC5kYXRlXCIgY2xhc3M9XCJ3LXN0cmV0Y2hcIj48L21kLWRhdGVwaWNrZXI+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnY29uZmlnX3RpbGVfZGlhbG9nL0NvbmZpZ0RpYWxvZy5odG1sJyxcbiAgICAnPG1kLWRpYWxvZyBjbGFzcz1cInBpcC1kaWFsb2cgcGlwLXRpbGUtY29uZmlnLWRpYWxvZyB7eyB2bS5wYXJhbXMuZGlhbG9nQ2xhc3MgfX1cIiB3aWR0aD1cIjQwMFwiIG1kLXRoZW1lPVwie3t2bS50aGVtZX19XCI+PHBpcC10aWxlLWNvbmZpZy1leHRlbmQtY29tcG9uZW50IGNsYXNzPVwibGF5b3V0LWNvbHVtblwiIHBpcC1kaWFsb2ctc2NvcGU9XCJ2bVwiIHBpcC1leHRlbnNpb24tdXJsPVwidm0uZXh0ZW5zaW9uVXJsXCIgcGlwLWFwcGx5PVwidm0ub25BcHBseSh1cGRhdGVkRGF0YSlcIj48L3BpcC10aWxlLWNvbmZpZy1leHRlbmQtY29tcG9uZW50PjwvbWQtZGlhbG9nPicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2NvbmZpZ190aWxlX2RpYWxvZy9Db25maWdEaWFsb2dFeHRlbmRDb21wb25lbnQuaHRtbCcsXG4gICAgJzxoMyBjbGFzcz1cInRtMCBmbGV4LW5vbmVcIj57eyBcXCdEQVNIQk9BUkRfVElMRV9DT05GSUdfRElBTE9HX1RJVExFXFwnIHwgdHJhbnNsYXRlIH19PC9oMz48ZGl2IGNsYXNzPVwicGlwLWJvZHkgcGlwLXNjcm9sbCBwMTYgYnAwIGZsZXgtYXV0b1wiPjxwaXAtZXh0ZW5zaW9uLXBvaW50PjwvcGlwLWV4dGVuc2lvbi1wb2ludD48cGlwLXRvZ2dsZS1idXR0b25zIGNsYXNzPVwiYm0xNlwiIG5nLWlmPVwiISRjdHJsLmhpZGVTaXplc1wiIHBpcC1idXR0b25zPVwiJGN0cmwuc2l6ZXNcIiBuZy1tb2RlbD1cIiRjdHJsLnNpemVJZFwiPjwvcGlwLXRvZ2dsZS1idXR0b25zPjxwaXAtY29sb3ItcGlja2VyIG5nLWlmPVwiISRjdHJsLmhpZGVDb2xvcnNcIiBwaXAtY29sb3JzPVwiJGN0cmwuY29sb3JzXCIgbmctbW9kZWw9XCIkY3RybC5jb2xvclwiPjwvcGlwLWNvbG9yLXBpY2tlcj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWZvb3RlciBmbGV4LW5vbmVcIj48ZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1jbGljaz1cIiRjdHJsLm9uQ2FuY2VsKClcIj57eyBcXCdDQU5DRUxcXCcgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgbmctY2xpY2s9XCIkY3RybC5vbkFwcGx5KClcIj57eyBcXCdBUFBMWVxcJyB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2Rhc2hib2FyZC9EYXNoYm9hcmQuaHRtbCcsXG4gICAgJzxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnQgbWQtcmFpc2VkIG1kLWZhYiBsYXlvdXQtY29sdW1uIGxheW91dC1hbGlnbi1jZW50ZXItY2VudGVyXCIgYXJpYS1sYWJlbD1cIkFkZCBjb21wb25lbnRcIiBuZy1jbGljaz1cIiRjdHJsLmFkZENvbXBvbmVudCgpXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbHVzXCIgY2xhc3M9XCJtZC1oZWFkbGluZSBjZW50ZXJlZC1hZGQtaWNvblwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ncmlkLWhvbGRlclwiPjxwaXAtZHJhZ2dhYmxlLWdyaWQgcGlwLXRpbGVzLXRlbXBsYXRlcz1cIiRjdHJsLmdyb3VwZWRXaWRnZXRzXCIgcGlwLXRpbGVzLWNvbnRleHQ9XCIkY3RybC53aWRnZXRzQ29udGV4dFwiIHBpcC1kcmFnZ2FibGUtZ3JpZD1cIiRjdHJsLmRyYWdnYWJsZUdyaWRPcHRpb25zXCIgcGlwLWdyb3VwLW1lbnUtYWN0aW9ucz1cIiRjdHJsLmdyb3VwTWVudUFjdGlvbnNcIj48L3BpcC1kcmFnZ2FibGUtZ3JpZD48bWQtcHJvZ3Jlc3MtY2lyY3VsYXIgbWQtbW9kZT1cImluZGV0ZXJtaW5hdGVcIiBjbGFzcz1cInByb2dyZXNzLXJpbmdcIj48L21kLXByb2dyZXNzLWNpcmN1bGFyPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2RyYWdnYWJsZS9EcmFnZ2FibGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtZHJhZ2dhYmxlLWhvbGRlclwiPjxkaXYgY2xhc3M9XCJwaXAtZHJhZ2dhYmxlLWdyb3VwXCIgbmctcmVwZWF0PVwiZ3JvdXAgaW4gJGN0cmwuZ3JvdXBzXCIgZGF0YS1ncm91cC1pZD1cInt7ICRpbmRleCB9fVwiIHBpcC1kcmFnZ2FibGUtdGlsZXM9XCJncm91cC5zb3VyY2VcIj48ZGl2IGNsYXNzPVwicGlwLWRyYWdnYWJsZS1ncm91cC10aXRsZSBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1zdGFydC1jZW50ZXJcIj48ZGl2IGNsYXNzPVwidGl0bGUtaW5wdXQtY29udGFpbmVyXCIgbmctY2xpY2s9XCIkY3RybC5vblRpdGxlQ2xpY2soZ3JvdXAsICRldmVudClcIj48aW5wdXQgbmctaWY9XCJncm91cC5lZGl0aW5nTmFtZVwiIG5nLWJsdXI9XCIkY3RybC5vbkJsdXJUaXRsZUlucHV0KGdyb3VwKVwiIG5nLWtleXByZXNzPVwiJGN0cmwub25LeWVwcmVzc1RpdGxlSW5wdXQoZ3JvdXAsICRldmVudClcIiBuZy1tb2RlbD1cImdyb3VwLnRpdGxlXCI+PGRpdiBjbGFzcz1cInRleHQtb3ZlcmZsb3cgZmxleC1ub25lXCIgbmctaWY9XCIhZ3JvdXAuZWRpdGluZ05hbWVcIj57eyBncm91cC50aXRsZSB9fTwvZGl2PjwvZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBmbGV4LW5vbmUgbGF5b3V0LWFsaWduLWNlbnRlci1jZW50ZXJcIiBuZy1zaG93PVwiZ3JvdXAuZWRpdGluZ05hbWVcIiBuZy1jbGljaz1cIiRjdHJsLmNhbmNlbEVkaXRpbmcoZ3JvdXApXCIgYXJpYS1sYWJlbD1cIkNhbmNlbFwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6Y3Jvc3NcIj48L21kLWljb24+PC9tZC1idXR0b24+PG1kLW1lbnUgY2xhc3M9XCJmbGV4LW5vbmUgbGF5b3V0LWNvbHVtblwiIG1kLXBvc2l0aW9uLW1vZGU9XCJ0YXJnZXQtcmlnaHQgdGFyZ2V0XCIgbmctc2hvdz1cIiFncm91cC5lZGl0aW5nTmFtZVwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBmbGV4LW5vbmUgbGF5b3V0LWFsaWduLWNlbnRlci1jZW50ZXJcIiBuZy1jbGljaz1cIiRtZE9wZW5NZW51KCk7IGdyb3VwSWQgPSAkaW5kZXhcIiBhcmlhLWxhYmVsPVwiTWVudVwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6ZG90c1wiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiNFwiPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0PVwiYWN0aW9uIGluICRjdHJsLmdyb3VwTWVudUFjdGlvbnNcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiYWN0aW9uLmNhbGxiYWNrKGdyb3VwSWQpXCI+e3sgYWN0aW9uLnRpdGxlIH19PC9tZC1idXR0b24+PC9tZC1tZW51LWl0ZW0+PC9tZC1tZW51LWNvbnRlbnQ+PC9tZC1tZW51PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtZHJhZ2dhYmxlLWdyb3VwIGZpY3QtZ3JvdXAgbGF5b3V0LWFsaWduLWNlbnRlci1jZW50ZXIgbGF5b3V0LWNvbHVtbiB0bTE2XCI+PGRpdiBjbGFzcz1cImZpY3QtZ3JvdXAtdGV4dC1jb250YWluZXJcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnBsdXNcIj48L21kLWljb24+e3sgXFwnRFJPUF9UT19DUkVBVEVfTkVXX0dST1VQXFwnIHwgdHJhbnNsYXRlIH19PC9kaXY+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnZXZlbnRfdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3LXN0cmV0Y2hcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwidy1zdHJldGNoIGJtMFwiPjxsYWJlbD5UaXRsZTo8L2xhYmVsPiA8aW5wdXQgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cIiRjdHJsLnRpdGxlXCI+PC9tZC1pbnB1dC1jb250YWluZXI+RGF0ZTo8bWQtZGF0ZXBpY2tlciBuZy1tb2RlbD1cIiRjdHJsLmRhdGVcIiBjbGFzcz1cInctc3RyZXRjaCBibThcIj48L21kLWRhdGVwaWNrZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cInctc3RyZXRjaFwiPjxsYWJlbD5EZXNjcmlwdGlvbjo8L2xhYmVsPiA8dGV4dGFyZWEgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cIiRjdHJsLnRleHRcIj5cXG4nICtcbiAgICAnICAgIDwvdGV4dGFyZWE+PC9tZC1pbnB1dC1jb250YWluZXI+QmFja2Ryb3BcXCdzIG9wYWNpdHk6PG1kLXNsaWRlciBhcmlhLWxhYmVsPVwib3BhY2l0eVwiIHR5cGU9XCJudW1iZXJcIiBtaW49XCIwLjFcIiBtYXg9XCIwLjlcIiBzdGVwPVwiMC4wMVwiIG5nLW1vZGVsPVwiJGN0cmwub3BhY2l0eVwiIG5nLWNoYW5nZT1cIiRjdHJsLm9uT3BhY2l0eXRlc3QoJGN0cmwub3BhY2l0eSlcIj48L21kLXNsaWRlcj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdldmVudF90aWxlL0V2ZW50VGlsZS5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cIndpZGdldC1ib3ggcGlwLWV2ZW50LXdpZGdldCB7eyAkY3RybC5jb2xvciB9fSBsYXlvdXQtY29sdW1uIGxheW91dC1maWxsXCIgbmctY2xhc3M9XCJ7IHNtYWxsOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIG1lZGl1bTogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBiaWc6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiB9XCI+PGltZyBuZy1pZj1cIiRjdHJsLm9wdGlvbnMuaW1hZ2VcIiBuZy1zcmM9XCJ7eyRjdHJsLm9wdGlvbnMuaW1hZ2V9fVwiIGFsdD1cInt7JGN0cmwub3B0aW9ucy50aXRsZSB8fCAkY3RybC5vcHRpb25zLm5hbWV9fVwiPjxkaXYgY2xhc3M9XCJ0ZXh0LWJhY2tkcm9wXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIHt7ICRjdHJsLm9wYWNpdHkgfX0pXCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlciBmbGV4LW5vbmVcIj48c3BhbiBjbGFzcz1cIndpZGdldC10aXRsZSBmbGV4LWF1dG8gdGV4dC1vdmVyZmxvd1wiPnt7ICRjdHJsLm9wdGlvbnMudGl0bGUgfHwgJGN0cmwub3B0aW9ucy5uYW1lIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PC9kaXY+PGRpdiBjbGFzcz1cInRleHQtY29udGFpbmVyIGZsZXgtYXV0byBwaXAtc2Nyb2xsXCI+PHAgY2xhc3M9XCJkYXRlIGZsZXgtbm9uZVwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy5kYXRlXCI+e3sgJGN0cmwub3B0aW9ucy5kYXRlIHwgZm9ybWF0U2hvcnREYXRlIH19PC9wPjxwIGNsYXNzPVwidGV4dCBmbGV4LWF1dG9cIj57eyAkY3RybC5vcHRpb25zLnRleHQgfHwgJGN0cmwub3B0aW9ucy5kZXNjcmlwdGlvbiB9fTwvcD48L2Rpdj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdtZW51X3RpbGUvTWVudVRpbGUuaHRtbCcsXG4gICAgJzxtZC1tZW51IGNsYXNzPVwid2lkZ2V0LW1lbnVcIiBtZC1wb3NpdGlvbi1tb2RlPVwidGFyZ2V0LXJpZ2h0IHRhcmdldFwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBmbGV4LW5vbmVcIiBuZy1jbGljaz1cIiRtZE9wZW5NZW51KClcIiBhcmlhLWxhYmVsPVwiTWVudVwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6dmRvdHNcIj48L21kLWljb24+PC9tZC1idXR0b24+PG1kLW1lbnUtY29udGVudCB3aWR0aD1cIjRcIj48bWQtbWVudS1pdGVtIG5nLXJlcGVhdD1cIml0ZW0gaW4gJGN0cmwubWVudVwiPjxtZC1idXR0b24gbmctaWY9XCIhaXRlbS5zdWJtZW51XCIgbmctY2xpY2s9XCIkY3RybC5jYWxsQWN0aW9uKGl0ZW0uYWN0aW9uLCBpdGVtLnBhcmFtcywgaXRlbSlcIj57ezo6IGl0ZW0udGl0bGUgfX08L21kLWJ1dHRvbj48bWQtbWVudSBuZy1pZj1cIml0ZW0uc3VibWVudVwiPjxtZC1idXR0b24gbmctY2xpY2s9XCIkY3RybC5jYWxsQWN0aW9uKGl0ZW0uYWN0aW9uKVwiPnt7OjogaXRlbS50aXRsZSB9fTwvbWQtYnV0dG9uPjxtZC1tZW51LWNvbnRlbnQ+PG1kLW1lbnUtaXRlbSBuZy1yZXBlYXQ9XCJzdWJpdGVtIGluIGl0ZW0uc3VibWVudVwiPjxtZC1idXR0b24gbmctY2xpY2s9XCIkY3RybC5jYWxsQWN0aW9uKHN1Yml0ZW0uYWN0aW9uLCBzdWJpdGVtLnBhcmFtcywgc3ViaXRlbSlcIj57ezo6IHN1Yml0ZW0udGl0bGUgfX08L21kLWJ1dHRvbj48L21kLW1lbnUtaXRlbT48L21kLW1lbnUtY29udGVudD48L21kLW1lbnU+PC9tZC1tZW51LWl0ZW0+PC9tZC1tZW51LWNvbnRlbnQ+PC9tZC1tZW51PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ25vdGVfdGlsZS9Db25maWdEaWFsb2dFeHRlbnNpb24uaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3LXN0cmV0Y2hcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwidy1zdHJldGNoIGJtMFwiPjxsYWJlbD5UaXRsZTo8L2xhYmVsPiA8aW5wdXQgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cIiRjdHJsLnRpdGxlXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cInctc3RyZXRjaCB0bTBcIj48bGFiZWw+VGV4dDo8L2xhYmVsPiA8dGV4dGFyZWEgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cIiRjdHJsLnRleHRcIj5cXG4nICtcbiAgICAnICAgIDwvdGV4dGFyZWE+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwRGFzaGJvYXJkLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnbm90ZV90aWxlL05vdGVUaWxlLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwid2lkZ2V0LWJveCBwaXAtbm90ZXMtd2lkZ2V0IHt7ICRjdHJsLmNvbG9yIH19IGxheW91dC1jb2x1bW5cIj48ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWRpbmcgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tc3RhcnQtY2VudGVyIGZsZXgtbm9uZVwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy50aXRsZSB8fCAkY3RybC5vcHRpb25zLm5hbWVcIj48c3BhbiBjbGFzcz1cIndpZGdldC10aXRsZSBmbGV4LWF1dG8gdGV4dC1vdmVyZmxvd1wiPnt7ICRjdHJsLm9wdGlvbnMudGl0bGUgfHwgJGN0cmwub3B0aW9ucy5uYW1lIH19PC9zcGFuPjwvZGl2PjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PGRpdiBjbGFzcz1cInRleHQtY29udGFpbmVyIGZsZXgtYXV0byBwaXAtc2Nyb2xsXCI+PHA+e3sgJGN0cmwub3B0aW9ucy50ZXh0IH19PC9wPjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3BpY3R1cmVfc2xpZGVyX3RpbGUvUGljdHVyZVNsaWRlclRpbGUuaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJ3aWRnZXQtYm94IHBpcC1waWN0dXJlLXNsaWRlci13aWRnZXQge3sgJGN0cmwuY29sb3IgfX0gbGF5b3V0LWNvbHVtbiBsYXlvdXQtZmlsbFwiIG5nLWNsYXNzPVwieyBzbWFsbDogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMSAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBtZWRpdW06ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMSwgYmlnOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDIgfVwiIGluZGV4PVwie3sgJGN0cmwuaW5kZXggfX1cIiBncm91cD1cInt7ICRjdHJsLmdyb3VwIH19XCI+PGRpdiBjbGFzcz1cIndpZGdldC1oZWFkaW5nIGxwMTYgcnA4IGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXIgZmxleC1ub25lXCI+PHNwYW4gY2xhc3M9XCJmbGV4IHRleHQtb3ZlcmZsb3dcIj57eyAkY3RybC5vcHRpb25zLnRpdGxlIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PC9kaXY+PGRpdiBjbGFzcz1cInNsaWRlci1jb250YWluZXJcIj48ZGl2IHBpcC1pbWFnZS1zbGlkZXI9XCJcIiBwaXAtYW5pbWF0aW9uLXR5cGU9XCJcXCdmYWRpbmdcXCdcIiBwaXAtYW5pbWF0aW9uLWludGVydmFsPVwiJGN0cmwuYW5pbWF0aW9uSW50ZXJ2YWxcIiBuZy1pZj1cIiRjdHJsLmFuaW1hdGlvblR5cGUgPT0gXFwnZmFkaW5nXFwnXCI+PGRpdiBjbGFzcz1cInBpcC1hbmltYXRpb24tYmxvY2tcIiBuZy1yZXBlYXQ9XCJzbGlkZSBpbiAkY3RybC5vcHRpb25zLnNsaWRlc1wiPjxpbWcgbmctc3JjPVwie3sgc2xpZGUuaW1hZ2UgfX1cIiBhbHQ9XCJ7eyBzbGlkZS5pbWFnZSB9fVwiIHBpcC1pbWFnZS1sb2FkPVwiJGN0cmwub25JbWFnZUxvYWQoJGV2ZW50KVwiPjxwIGNsYXNzPVwic2xpZGUtdGV4dFwiIG5nLWlmPVwic2xpZGUudGV4dFwiPnt7IHNsaWRlLnRleHQgfX08L3A+PC9kaXY+PC9kaXY+PGRpdiBwaXAtaW1hZ2Utc2xpZGVyPVwiXCIgcGlwLWFuaW1hdGlvbi10eXBlPVwiXFwnY2Fyb3VzZWxcXCdcIiBwaXAtYW5pbWF0aW9uLWludGVydmFsPVwiJGN0cmwuYW5pbWF0aW9uSW50ZXJ2YWxcIiBuZy1pZj1cIiRjdHJsLmFuaW1hdGlvblR5cGUgPT0gXFwnY2Fyb3VzZWxcXCdcIj48ZGl2IGNsYXNzPVwicGlwLWFuaW1hdGlvbi1ibG9ja1wiIG5nLXJlcGVhdD1cInNsaWRlIGluICRjdHJsLm9wdGlvbnMuc2xpZGVzXCI+PGltZyBuZy1zcmM9XCJ7eyBzbGlkZS5pbWFnZSB9fVwiIGFsdD1cInt7IHNsaWRlLmltYWdlIH19XCIgcGlwLWltYWdlLWxvYWQ9XCIkY3RybC5vbkltYWdlTG9hZCgkZXZlbnQpXCI+PHAgY2xhc3M9XCJzbGlkZS10ZXh0XCIgbmctaWY9XCJzbGlkZS50ZXh0XCI+e3sgc2xpZGUudGV4dCB9fTwvcD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdwb3NpdGlvbl90aWxlL0NvbmZpZ0RpYWxvZ0V4dGVuc2lvbi5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInctc3RyZXRjaFwiPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJ3LXN0cmV0Y2ggYm0wXCI+PGxhYmVsPkxvY2F0aW9uIG5hbWU6PC9sYWJlbD4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCIkY3RybC5sb2NhdGlvbk5hbWVcIj48L21kLWlucHV0LWNvbnRhaW5lcj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBEYXNoYm9hcmQuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdwb3NpdGlvbl90aWxlL1Bvc2l0aW9uVGlsZS5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1wb3NpdGlvbi13aWRnZXQgd2lkZ2V0LWJveCBwMCBsYXlvdXQtY29sdW1uIGxheW91dC1maWxsXCIgbmctY2xhc3M9XCJ7IHNtYWxsOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAxICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIG1lZGl1bTogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAxLCBiaWc6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDIgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMiB9XCIgaW5kZXg9XCJ7eyAkY3RybC5pbmRleCB9fVwiIGdyb3VwPVwie3sgJGN0cmwuZ3JvdXAgfX1cIj48ZGl2IGNsYXNzPVwicG9zaXRpb24tYWJzb2x1dGUtcmlnaHQtdG9wXCIgbmctaWY9XCIhJGN0cmwub3B0aW9ucy5sb2NhdGlvbk5hbWVcIj48cGlwLXRpbGUtbWVudSBuZy1pZj1cIiEkY3RybC5vcHRpb25zLmhpZGVNZW51XCI+PC9waXAtdGlsZS1tZW51PjwvZGl2PjxkaXYgY2xhc3M9XCJ3aWRnZXQtaGVhZGluZyBscDE2IHJwOCBsYXlvdXQtcm93IGxheW91dC1hbGlnbi1lbmQtY2VudGVyIGZsZXgtbm9uZVwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy5sb2NhdGlvbk5hbWVcIj48c3BhbiBjbGFzcz1cImZsZXggdGV4dC1vdmVyZmxvd1wiPnt7ICRjdHJsLm9wdGlvbnMubG9jYXRpb25OYW1lIH19PC9zcGFuPjxwaXAtdGlsZS1tZW51IG5nLWlmPVwiISRjdHJsLm9wdGlvbnMuaGlkZU1lbnVcIj48L3BpcC10aWxlLW1lbnU+PC9kaXY+PHBpcC1sb2NhdGlvbi1tYXAgY2xhc3M9XCJmbGV4XCIgbmctaWY9XCIkY3RybC5zaG93UG9zaXRpb25cIiBwaXAtc3RyZXRjaD1cInRydWVcIiBwaXAtcmViaW5kPVwidHJ1ZVwiIHBpcC1sb2NhdGlvbi1wb3M9XCIkY3RybC5vcHRpb25zLmxvY2F0aW9uXCI+PC9waXAtbG9jYXRpb24tbWFwPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcERhc2hib2FyZC5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3N0YXRpc3RpY3NfdGlsZS9TdGF0aXN0aWNzVGlsZS5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cIndpZGdldC1ib3ggcGlwLXN0YXRpc3RpY3Mtd2lkZ2V0IGxheW91dC1jb2x1bW4gbGF5b3V0LWZpbGxcIiBuZy1jbGFzcz1cInsgc21hbGw6ICRjdHJsLm9wdGlvbnMuc2l6ZS5jb2xTcGFuID09IDEgJiYgJGN0cmwub3B0aW9ucy5zaXplLnJvd1NwYW4gPT0gMSwgbWVkaXVtOiAkY3RybC5vcHRpb25zLnNpemUuY29sU3BhbiA9PSAyICYmICRjdHJsLm9wdGlvbnMuc2l6ZS5yb3dTcGFuID09IDEsIGJpZzogJGN0cmwub3B0aW9ucy5zaXplLmNvbFNwYW4gPT0gMiAmJiAkY3RybC5vcHRpb25zLnNpemUucm93U3BhbiA9PSAyIH1cIj48ZGl2IGNsYXNzPVwid2lkZ2V0LWhlYWRpbmcgbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tc3RhcnQtY2VudGVyIGZsZXgtbm9uZVwiPjxzcGFuIGNsYXNzPVwid2lkZ2V0LXRpdGxlIGZsZXgtYXV0byB0ZXh0LW92ZXJmbG93XCI+e3sgJGN0cmwub3B0aW9ucy50aXRsZSB8fCAkY3RybC5vcHRpb25zLm5hbWUgfX08L3NwYW4+PHBpcC10aWxlLW1lbnU+PC9waXAtdGlsZS1tZW51PjwvZGl2PjxkaXYgY2xhc3M9XCJ3aWRnZXQtY29udGVudCBmbGV4LWF1dG8gbGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tY2VudGVyLWNlbnRlclwiIG5nLWlmPVwiJGN0cmwub3B0aW9ucy5zZXJpZXMgJiYgISRjdHJsLnJlc2V0XCI+PHBpcC1waWUtY2hhcnQgcGlwLXNlcmllcz1cIiRjdHJsLm9wdGlvbnMuc2VyaWVzXCIgbmctaWY9XCIhJGN0cmwub3B0aW9ucy5jaGFydFR5cGUgfHwgJGN0cmwub3B0aW9ucy5jaGFydFR5cGUgPT0gXFwncGllXFwnXCIgcGlwLWRvbnV0PVwidHJ1ZVwiIHBpcC1waWUtc2l6ZT1cIiRjdHJsLmNoYXJ0U2l6ZVwiIHBpcC1zaG93LXRvdGFsPVwidHJ1ZVwiIHBpcC1jZW50ZXJlZD1cInRydWVcIj48L3BpcC1waWUtY2hhcnQ+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktZGFzaGJvYXJkLWh0bWwubWluLmpzLm1hcFxuIl19"}